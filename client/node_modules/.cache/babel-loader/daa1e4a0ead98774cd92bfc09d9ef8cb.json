{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\15129\\\\OneDrive\\\\Desktop\\\\projects\\\\beer-me\\\\client\\\\src\\\\App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet userIP = \"\";\nlet userLat = 0;\nlet userLon = 0;\nlet completeDirections = []; // let key = \"2qYjtOeeuEawxxQE7KUtVZQFywO4pRvN\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n;\n\nfunction userLocation() {\n  fetch(\"https://api.ipify.org/?format=json\").then(function (response) {\n    if (response.ok) {\n      response.json().then(function (data) {\n        userIP = data.ip; //uses ip address to get physical location data\n\n        return fetch(\"https://ipapi.co/\" + userIP + \"/json\");\n      }).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (data) {\n            //save location data for future use\n            userLat = data.latitude;\n            userLon = data.longitude;\n            console.log(userLat, userLon);\n            directions();\n          });\n        }\n      });\n    }\n  });\n}\n\n; // directions using TomTom\n\nfunction directions() {\n  fetch(\"https://api.tomtom.com/routing/1/calculateRoute/\" + userLat + \"%2C\" + userLon + \"%3A30.3079827%2C-97.8934853/json?instructionsType=text&traffic=true&avoid=unpavedRoads&travelMode=car&vehicleCommercial=false&key=2qYjtOeeuEawxxQE7KUtVZQFywO4pRvN\").then(function (response) {\n    if (response.ok) {\n      response.json().then(function (data) {\n        let instructions = data.routes[0].guidance.instructions; // let i = 0;\n\n        for (let i = 0; i < instructions.length; i++) {\n          // console.log(instructions[i].message);\n          let stop = instructions[i].message;\n          completeDirections.push(stop); // document.write(instructions[i].message);\n          // completeDirections.push(message);\n          // \n          // completeDirections=instructions[i].message;\n        }\n\n        ;\n        console.log(completeDirections); // console.log(i);\n        // console.log(instructions);\n      });\n    }\n  });\n}\n\nuserLocation();\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/15129/OneDrive/Desktop/projects/beer-me/client/src/App.js"],"names":["userIP","userLat","userLon","completeDirections","App","userLocation","fetch","then","response","ok","json","data","ip","latitude","longitude","console","log","directions","instructions","routes","guidance","i","length","stop","message","push"],"mappings":";AAAA;AACA,OAAO,WAAP;;AACA,IAAIA,MAAM,GAAG,EAAb;AACA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,kBAAkB,GAAG,EAAzB,C,CACA;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQA,G;AAMR;;AAED,SAASC,YAAT,GAAwB;AACpBC,EAAAA,KAAK,CAAC,oCAAD,CAAL,CAA4CC,IAA5C,CAAiD,UAASC,QAAT,EAAmB;AAChE,QAAGA,QAAQ,CAACC,EAAZ,EAAe;AACXD,MAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAASI,IAAT,EAAc;AAC/BX,QAAAA,MAAM,GAAGW,IAAI,CAACC,EAAd,CAD+B,CAG/B;;AACA,eAAON,KAAK,CAAC,sBAAsBN,MAAtB,GAA+B,OAAhC,CAAZ;AACH,OALD,EAKGO,IALH,CAKQ,UAASC,QAAT,EAAkB;AACtB,YAAGA,QAAQ,CAACC,EAAZ,EAAe;AACXD,UAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAASI,IAAT,EAAc;AAC/B;AACAV,YAAAA,OAAO,GAAGU,IAAI,CAACE,QAAf;AACAX,YAAAA,OAAO,GAAGS,IAAI,CAACG,SAAf;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ,EAAqBC,OAArB;AACAe,YAAAA,UAAU;AACb,WAND;AAOH;AACJ,OAfD;AAgBH;AACJ,GAnBD;AAqBH;;AAAA,C,CAED;;AACA,SAASA,UAAT,GAAsB;AACpBX,EAAAA,KAAK,CAAC,qDAAqDL,OAArD,GAA+D,KAA/D,GAAuEC,OAAvE,GAAiF,oKAAlF,CAAL,CAA6PK,IAA7P,CAAkQ,UAASC,QAAT,EAAkB;AACtQ,QAAGA,QAAQ,CAACC,EAAZ,EAAe;AACXD,MAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAASI,IAAT,EAAc;AACjC,YAAIO,YAAY,GAACP,IAAI,CAACQ,MAAL,CAAY,CAAZ,EAAeC,QAAf,CAAwBF,YAAzC,CADiC,CAEvD;;AACY,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAACI,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAChD;AACA,cAAIE,IAAI,GAAGL,YAAY,CAACG,CAAD,CAAZ,CAAgBG,OAA3B;AACArB,UAAAA,kBAAkB,CAACsB,IAAnB,CAAwBF,IAAxB,EAHgD,CAIhD;AACA;AACA;AACA;AACT;;AAAA;AACDR,QAAAA,OAAO,CAACC,GAAR,CAAYb,kBAAZ,EAZuD,CAavD;AACsB;AACF,OAfA;AAgBH;AACJ,GAnBX;AAoBS;;AAGXE,YAAY;AAEZ,eAAeD,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nlet userIP = \"\";\nlet userLat = 0;\nlet userLon = 0;\nlet completeDirections = [];\n// let key = \"2qYjtOeeuEawxxQE7KUtVZQFywO4pRvN\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello</h1>\n    </div>\n  );\n};\n\nfunction userLocation() {\n    fetch(\"https://api.ipify.org/?format=json\").then(function(response) {\n        if(response.ok){\n            response.json().then(function(data){\n                userIP = data.ip \n\n                //uses ip address to get physical location data\n                return fetch(\"https://ipapi.co/\" + userIP + \"/json\")\n            }).then(function(response){\n                if(response.ok){\n                    response.json().then(function(data){\n                        //save location data for future use\n                        userLat = data.latitude;\n                        userLon = data.longitude;\n                        console.log(userLat, userLon);\n                        directions();\n                    });\n                }\n            });\n        }\n    })\n    \n};\n\n// directions using TomTom\nfunction directions() {\n  fetch(\"https://api.tomtom.com/routing/1/calculateRoute/\" + userLat + \"%2C\" + userLon + \"%3A30.3079827%2C-97.8934853/json?instructionsType=text&traffic=true&avoid=unpavedRoads&travelMode=car&vehicleCommercial=false&key=2qYjtOeeuEawxxQE7KUtVZQFywO4pRvN\").then(function(response){\n                if(response.ok){\n                    response.json().then(function(data){\n                      let instructions=data.routes[0].guidance.instructions;\n// let i = 0;\n            for (let i = 0; i < instructions.length; i++) {\n          // console.log(instructions[i].message);\n          let stop = instructions[i].message;\n          completeDirections.push(stop);\n          // document.write(instructions[i].message);\n          // completeDirections.push(message);\n          // \n          // completeDirections=instructions[i].message;\n};\nconsole.log(completeDirections);\n// console.log(i);\n                      // console.log(instructions);\n                   });\n                }\n            });\n          }\n    \n\nuserLocation();\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}