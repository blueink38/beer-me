[{"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\index.js":"1","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\App.js":"2","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Signup.js":"3","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Home.js":"4","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Dashboard.js":"5","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Login.js":"6","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Header\\index.js":"7","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Blip\\index.js":"8","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\mutations.js":"9","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\auth.js":"10","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Hero\\index.js":"11","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\helpers.js":"12","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\queries.js":"13","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\SearchBreweries\\index.js":"14","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\ContactUs\\index.js":"15","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Footer\\index.js":"16","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Modal\\index.js":"17","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\API.js":"18","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\localStorage.js":"19"},{"size":224,"mtime":1622583400826,"results":"20","hashOfConfig":"21"},{"size":1320,"mtime":1622995073108,"results":"22","hashOfConfig":"21"},{"size":2355,"mtime":1622751186995,"results":"23","hashOfConfig":"21"},{"size":521,"mtime":1622751186992,"results":"24","hashOfConfig":"21"},{"size":6139,"mtime":1622998272382,"results":"25","hashOfConfig":"21"},{"size":2233,"mtime":1622995073124,"results":"26","hashOfConfig":"21"},{"size":2722,"mtime":1622995073110,"results":"27","hashOfConfig":"21"},{"size":561,"mtime":1622751186982,"results":"28","hashOfConfig":"21"},{"size":2052,"mtime":1622870800844,"results":"29","hashOfConfig":"21"},{"size":1572,"mtime":1622583401149,"results":"30","hashOfConfig":"21"},{"size":462,"mtime":1622751186989,"results":"31","hashOfConfig":"21"},{"size":150,"mtime":1622665381445,"results":"32","hashOfConfig":"21"},{"size":1730,"mtime":1622995073127,"results":"33","hashOfConfig":"21"},{"size":15935,"mtime":1622995073115,"results":"34","hashOfConfig":"21"},{"size":2650,"mtime":1622751186983,"results":"35","hashOfConfig":"21"},{"size":1255,"mtime":1622751186986,"results":"36","hashOfConfig":"21"},{"size":1874,"mtime":1622995073112,"results":"37","hashOfConfig":"21"},{"size":5586,"mtime":1622995073125,"results":"38","hashOfConfig":"21"},{"size":916,"mtime":1622725231345,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ey5bv0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\index.js",[],["84","85"],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\App.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Home.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Dashboard.js",["86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Login.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Header\\index.js",["102"],"import React, { Component } from 'react'\r\nimport { Button, Segment, Menu } from 'semantic-ui-react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Auth from \"../../utils/auth\"\r\n\r\n\r\nexport default class MenuExampleInvertedSecondary extends Component {\r\n    state = { activeItem: 'home' }\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Segment id=\"home\" inverted>\r\n\r\n      <Menu id=\"home\" inverted fixed=\"top\" size='huge' >\r\n        {activeItem === \"login\" || activeItem === \"signup\" ? \r\n        <Menu.Menu>\r\n           <Link to=\"/\"><Menu.Item \r\n              name='home'\r\n              background='yellow'\r\n              onClick={this.handleItemClick}\r\n            /></Link>\r\n        </Menu.Menu>\r\n        :\r\n        <Menu.Menu>\r\n          <Menu.Item \r\n              href=\"/\"\r\n              name='home'\r\n              color='yellow'\r\n              active={activeItem === 'home'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n            <Menu.Item\r\n              href=\"/#about\"\r\n              name='breweries'\r\n              color='yellow'\r\n              active={activeItem === 'breweries'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n            <Menu.Item\r\n              href=\"/#contact-us\"\r\n              name='contact us'\r\n              color='yellow'\r\n              active={activeItem === 'contact us'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n          </Menu.Menu>\r\n        }\r\n        {!Auth.loggedIn() ? \r\n          <Menu.Menu position='right'>\r\n            <Menu.Item\r\n              name=\"login\"\r\n              active={activeItem === 'login'}\r\n              onClick={this.handleItemClick}\r\n            >\r\n              <Link to=\"/login\">Login</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              name=\"signup\"\r\n              active={activeItem === 'signup'}\r\n              onClick={this.handleItemClick}\r\n            >\r\n            <Link to=\"/signup\">Sign Up</Link>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        : \r\n          <Menu.Menu position='right'>\r\n            <Menu.Item\r\n              name=\"dashboard\"\r\n              active={activeItem === 'dashboard'}\r\n              onClick={this.handleItemClick}\r\n            >\r\n              <Link to=\"/dashboard\">Dashboard</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              name=\"logout\"\r\n              active={activeItem === 'home'}\r\n              onClick={() => Auth.logout()}\r\n            >\r\n              <Link to=\"/\">Logout</Link>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        }\r\n      </Menu>\r\n      </Segment>\r\n\r\n    )\r\n  }\r\n}","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Blip\\index.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\auth.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Hero\\index.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\helpers.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\queries.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\SearchBreweries\\index.js",["103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import React, { useState, useEffect} from 'react';\r\nimport Modal from '../Modal/index'\r\n// import _ from 'lodash'\r\nimport {Form, Button, Card, List, Grid, GridColumn, Menu} from 'semantic-ui-react'\r\nimport {useMutation, useQuery} from '@apollo/react-hooks'\r\nimport Auth from '../../utils/auth'\r\nimport {directions, saveBrewery, searchByCity, searchByState, searchByTerm, searchNearUser} from '../../utils/API'\r\nimport { saveBreweryIds, getSavedBreweryIds } from '../../utils/localStorage'\r\nimport {ADD_BREWERY_TO_DB, SAVE_BREWERY_TO_USER} from '../../utils/mutations'\r\nimport {QUERY_ALL_BREWERIES, QUERY_BREWERY} from '../../utils/queries'\r\nimport { add, xor } from 'lodash';\r\nimport { formatPhone } from '../../utils/helpers';\r\n\r\nlet pageNum = 1;\r\n\r\nconst SearchBreweries = () => {\r\n//  searchNearUser()\r\n  const[addBrewery] = useMutation(ADD_BREWERY_TO_DB);\r\n  const[saveBrewery] = useMutation(SAVE_BREWERY_TO_USER)\r\n  // create state for holding returned openBrewery api data\r\n  const [searchedBreweries, setSearchedBrewery] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n  // create state for holding our search field data\r\n  const [searchType, setSearchType] = useState('');\r\n  // create state to hold saved BreweryId values\r\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\r\n  //holds the last used search input\r\n  const [lastSearched, setLastSearched] = useState('')\r\n  const[savedBrewery, setSavedBrewery] = useState('')\r\n  const [queryId, setQueryId] = useState()\r\n  // const { loading, error, data } = useQuery(QUERY_ALL_BREWERIES, {\r\n   console.log(savedBrewery)\r\n  //   pollInterval: 500,\r\n  // });\r\n  const {loading, error, data} = useQuery(QUERY_BREWERY, {\r\n    variables:{ name: savedBrewery}\r\n  })\r\n  const { data:allData} = useQuery(QUERY_ALL_BREWERIES, {\r\n\r\n    pollInterval: 500,\r\n  });\r\n\r\n \r\n  \r\n  // if (loading) return null;\r\n  // if (error) return `Error! ${error}`;\r\n  // console.log(searchedBreweries)\r\n  // console.log(loading)\r\n  console.log(data)\r\n  // set up useEffect hook to save `savedBreweryIds` list to localStorage on component unmount\r\n  // useEffect(() => {\r\n  //   if\r\n  //   async function matchId()\r\n  // //   async function addBreweryToDb(){\r\n  // //   const breweries = searchedBreweries.map()\r\n  // // }\r\n  // //   return () => saveBreweryIds(savedBreweryIds);\r\n  // //   async function updateBreweryDB(){\r\n      \r\n  // //   }\r\n  // });\r\n\r\n  \r\n  const options = [\r\n    { key: 'city', text: 'City', value: 'city' },\r\n    { key: 'state', text: 'State', value: 'state' },\r\n    { key: 'keyword', text: 'Keyword', value: 'keyword' },\r\n  ]\r\n\r\n  const handleUserLoc = async (event) => {\r\n    event.preventDefault();\r\n\r\n    setSearchInput('')\r\n    setLastSearched('')\r\n    try {\r\n      const response = await searchNearUser(pageNum);\r\n     \r\n      console.log(response)\r\n      if(response.length){\r\n        \r\n          const breweryData = response.map((brewery) => (\r\n            {\r\n            breweryID: brewery.id,\r\n            name: brewery.name,\r\n            breweryType: brewery.brewery_type,\r\n            street: brewery.street || \"\",\r\n            address2: brewery.address_2,\r\n            address3: brewery.address_3,\r\n            city: brewery.city,\r\n            state: brewery.state,\r\n            countyProvince: brewery.county_province,\r\n            postalCode: brewery.postal_code,\r\n            country: brewery.country,\r\n            longitude: brewery.longitude,\r\n            latitude: brewery.latitude,\r\n            phone: brewery.phone || \"\",\r\n            websiteUrl: brewery.website_url || \"\"\r\n          }));\r\n          const filterData = []\r\n          \r\n          breweryData.filter(brewery => {\r\n            // debugger;\r\n              allData.breweries.forEach(savedBrew => {\r\n                if(savedBrew.name===brewery.name){\r\n                  return\r\n                }\r\n\r\n              });\r\n              return brewery\r\n          })\r\n        console.log(breweryData)\r\n        console.log(filterData)\r\n        const saveToDB = response.map((brewery) => \r\n         addBrewery(\r\n           {\r\n             variables:\r\n              {\r\n                breweryID: brewery.id,\r\n                name: brewery.name,\r\n                breweryType: brewery.brewery_type,\r\n                street: brewery.street || \"\",\r\n                address2: brewery.address_2,\r\n                address3: brewery.address_3,\r\n                city: brewery.city,\r\n                state: brewery.state,\r\n                countyProvince: brewery.county_province,\r\n                postalCode: brewery.postal_code,\r\n                country: brewery.country,\r\n                longitude: brewery.longitude,\r\n                latitude: brewery.latitude,\r\n                phone: brewery.phone || \"\",\r\n                websiteUrl: brewery.website_url || \"\"\r\n              }\r\n             \r\n           }\r\n        \r\n         ));\r\n        console.log(breweryData)\r\n        setSearchedBrewery(breweryData);\r\n      } else {\r\n        setSearchedBrewery([])\r\n      }\r\n      \r\n      setSearchInput('');\r\n      // console.log('YES')\r\n      }\r\n      catch (err) {\r\n        console.error(err.graphQLErrors);\r\n      }\r\n\r\n  }\r\n  // create method to search for Breweries and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // console.log(event.target.id)\r\n    // console.log(searchType)\r\n\r\n    if (!searchInput && !lastSearched) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      if(searchInput.length){\r\n        if(searchInput !== lastSearched) {\r\n          pageNum = 1\r\n        }\r\n        setLastSearched(searchInput)\r\n      }\r\n\r\n      let response ;\r\n      switch(searchType){\r\n        case 'city':\r\n          if(searchInput){\r\n            response = await searchByCity(searchInput, pageNum);\r\n          } else if (lastSearched) {\r\n            response = await searchByCity(lastSearched, pageNum);\r\n          } \r\n          break;\r\n        case 'state':\r\n          if(searchInput){\r\n            response = await searchByState(searchInput, pageNum);\r\n          } else if (lastSearched) {\r\n            response = await searchByState(lastSearched, pageNum);\r\n          }\r\n          break;\r\n        case 'keyword':\r\n          if(searchInput){\r\n            response = await searchByTerm(searchInput, pageNum);\r\n          } else if (lastSearched) {\r\n            response = await searchByTerm(lastSearched, pageNum);\r\n          }\r\n          break;\r\n      }\r\n      \r\n      if(response.length){\r\n        const breweryData = response.map((brewery) => (\r\n          {\r\n          breweryID: brewery.id,\r\n          name: brewery.name,\r\n          breweryType: brewery.brewery_type,\r\n          street: brewery.street || \"\",\r\n          address2: brewery.address_2,\r\n          address3: brewery.address_3,\r\n          city: brewery.city,\r\n          state: brewery.state,\r\n          countyProvince: brewery.county_province,\r\n          postalCode: brewery.postal_code,\r\n          country: brewery.country,\r\n          longitude: brewery.longitude,\r\n          latitude: brewery.latitude,\r\n          phone: brewery.phone || \"\",\r\n          websiteUrl: brewery.website_url || \"\"\r\n        }));\r\n        setSearchedBrewery(breweryData);\r\n\r\n        const filterData = breweryData.filter(brewery => {\r\n              console.log(brewery.name)\r\n        })\r\n\r\n        // addBrewery({\r\n        //   variables: {\r\n        //     breweryId: searchedBreweries.id,\r\n        //     name: searchedBreweries.name,\r\n        //     breweryType: searchedBreweries.brewery_type,\r\n        //     street: searchedBreweries.street ,\r\n        //     address2: searchedBreweries.address_2,\r\n        //     address3: searchedBreweries.address_3,\r\n        //     city: searchedBreweries.city,\r\n        //     state: searchedBreweries.state,\r\n        //     countyProvince: searchedBreweries.county_province,\r\n        //     postalCode: searchedBreweries.postal_code,\r\n        //     country: searchedBreweries.country,\r\n        //     longitude: searchedBreweries.longitude,\r\n        //     latitude: searchedBreweries.latitude,\r\n        //     phone: searchedBreweries.phone ,\r\n        //     websiteUrl: searchedBreweries.website_url \r\n        //   }\r\n        // })\r\n      } else {\r\n        setSearchedBrewery([])\r\n      }\r\n      \r\n      setSearchInput('');\r\n      }\r\n      catch (err) {\r\n        console.error(err);\r\n      }\r\n    } \r\n\r\n\r\n  // create function to handle saving a Brewery to our database\r\n  const handleSaveBrewery = async (brewery) => {\r\n\r\n    if(brewery.length){\r\n\r\n      try{\r\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n        const brewId = data.brewery._id;\r\n        console.log(brewId)\r\n        if (!token) {\r\n          return false;\r\n        }\r\n        \r\n        const userId = Auth.getProfile().data._id\r\n        const response = await saveBrewery(\r\n            { \r\n              variables:{\r\n                brewId: brewId,\r\n                id: userId\r\n              }\r\n            }\r\n        );\r\n        console.log(response)\r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n      }catch (err) {\r\n        console.error(err);\r\n      }\r\n  \r\n\r\n    }\r\n  };\r\n\r\n  const handlePageChange =  async (e,name) => {\r\n    if (name === \"next\") {\r\n      //setPageNumber(pageNumber + 1)\r\n      pageNum++\r\n      if(!searchInput && !lastSearched){\r\n        handleUserLoc(e)\r\n      } else {\r\n        handleFormSubmit(e)\r\n      }\r\n    } else {\r\n      //setPageNumber(pageNumber - 1)\r\n      pageNum--\r\n      if(!searchInput && !lastSearched){\r\n        handleUserLoc(e)\r\n      } else {\r\n        handleFormSubmit(e)\r\n      }\r\n    }\r\n  }\r\n  if(savedBrewery.length){\r\n    handleSaveBrewery(savedBrewery)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <section  id=\"about\">\r\n      <div className=\"columns main-col drinkbutton\"> \r\n        </div>\r\n          <Form onSubmit={handleFormSubmit} id='submit'>\r\n            <Grid id='find-brewery' centered columns={2}>\r\n              <Grid.Column>          \r\n                <div class=\"ui segment contactform inverted\" >\r\n                  <h1 style={{textAlign: \"center\", color: '#ebba34'}}>Find Your Brewery</h1>\r\n                  <br></br>\r\n                  <Form.Group>\r\n                    <Form.Input\r\n                      width={8}\r\n                      name='searchInput'\r\n                      value={searchInput}\r\n                      onChange={(e) => setSearchInput(e.target.value)}\r\n                      placeholder='Search for a Brewery'\r\n                    />\r\n                  <Form.Select\r\n                    fluid\r\n                    options={options}\r\n                    width={8}\r\n                    // required={true}\r\n                    placeholder='Search for breweries by...'\r\n                    onChange={(e, { value }) => setSearchType(value)}\r\n                    />\r\n                  </Form.Group>\r\n                  <br></br>\r\n                <div className=\"columns main-col drinkbutton\">\r\n                  <Button \r\n                    // centered\r\n                    id='city' \r\n                    type='submit'\r\n                    // onClick={handleFormSubmit} \r\n                   \r\n                    className=\"ui huge yellow button\">\r\n                    GET DRINKING!!\r\n                  </Button>\r\n               </div>\r\n               <br></br>\r\n               <div className=\"columns main-col drinkbutton\">\r\n                  <Button \r\n                    // centered\r\n                    id='city' \r\n                    onClick={(e) => handleUserLoc(e)} \r\n                    className=\"ui huge yellow button\">\r\n                    FIND NEAREST BREWERY\r\n                  </Button>\r\n\r\n                </div>\r\n              </div>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Form>      \r\n\r\n        <h2>\r\n          {searchedBreweries.length\r\n            ? `Viewing results ${1 + (20 * (pageNum -1))} - ${searchedBreweries.length + (20 * (pageNum - 1))}:`\r\n            : ''}\r\n        </h2>\r\n        <Grid centered stackable columns={3} >\r\n          {searchedBreweries.length \r\n          ? \r\n          searchedBreweries.map((brewery) => {\r\n            return (\r\n              <GridColumn centered=\"true\">  \r\n              <Card centered key={brewery.breweryId}>\r\n                <h2 style={{textAlign:'center', color:'#ebba34'}}>{brewery.name}</h2>\r\n                <List>\r\n                  <List.Item className='beercard-output'><strong>Type:  </strong> {brewery.breweryType}</List.Item>\r\n                  {brewery.street ? \r\n                    <List.Item className='beercard-output'><strong> Street:  </strong>{brewery.street}</List.Item>\r\n                  :\"\"}\r\n                  <List.Item className='beercard-output'><strong> City:  </strong>{brewery.city}</List.Item>\r\n                  <List.Item className='beercard-output'><strong> State:  </strong>{brewery.state}</List.Item>\r\n                  {brewery.phone ? \r\n                    <List.Item className='beercard-output'><strong> Phone Number:  </strong> {formatPhone(brewery.phone)}</List.Item>\r\n                  : \"\"}\r\n                  {brewery.websiteUrl ? \r\n                    <List.Item className='beercard-output'><strong> Website:  </strong> <a style={{color:'#2432d1'}} href={brewery.websiteUrl} target='_blank'  rel=\"noreferrer\" >{brewery.websiteUrl}</a></List.Item>\r\n                  : \"\"}\r\n               <br></br>\r\n                </List>\r\n                  {/* {Auth.loggedIn() && ( */}\r\n                    \r\n                  <div className='ui large buttons'>\r\n                    <Button className ='ui yellow button' style={{color:'#f2f0f0'}}\r\n                      // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                      onClick={() =>{\r\n                      setSavedBrewery(brewery.name)\r\n\r\n                      // saveToUser(brewery)\r\n                      }}>\r\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\r\n                        ? 'This Brewery has already been saved!'\r\n                        : 'save brewery'}\r\n                    </Button>\r\n                    {brewery.latitude && brewery.longitude ? \r\n                      <>\r\n                       <div class=\"or\"></div>\r\n                       <Button className ='ui yellow button'\r\n                         // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                        >\r\n                          <p ><Modal lat={brewery.latitude} lon={brewery.longitude} /></p>\r\n                       </Button>\r\n                       </>\r\n                    :\"\"}\r\n                   \r\n                  {/* )} */}\r\n                  </div>\r\n                  </Card>\r\n              \r\n            </GridColumn>\r\n            );\r\n          })\r\n          : \"\"}\r\n          {!searchedBreweries.length && pageNum > 1 ?\r\n          \"No more breweries to display\"\r\n          :\r\n          \"\"}\r\n        </Grid>\r\n        <Menu inverted >\r\n          {pageNum > 1 ? \r\n            <Menu.Item\r\n              name=\"prev\"\r\n              onClick={(e, { name }) => handlePageChange(e,name)}\r\n            >\r\n              <Button color=\"yellow\">\r\n                <p>Previous Page</p>\r\n              </Button>\r\n            </Menu.Item>\r\n          : \"\"}\r\n          {searchedBreweries.length ? \r\n            <Menu.Menu position=\"right\">\r\n              <Menu.Item\r\n                name=\"next\"\r\n                onClick={(e, { name }) => handlePageChange(e,name)}\r\n              >\r\n                <Button color=\"yellow\">\r\n                  <p>Next Page</p>\r\n                </Button>\r\n              </Menu.Item>\r\n            </Menu.Menu>\r\n          : \"\"}\r\n        </Menu>       \r\n        </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBreweries;\r\n","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\ContactUs\\index.js",["118","119","120","121"],"import React, { Component } from 'react'\r\nimport { Form, TextArea, Button, Grid } from 'semantic-ui-react'\r\n\r\nclass FormCaptureValues extends Component {\r\n  state = { firstName: '', lastName: '', email: '', message: '', submittedFirstName: '', submittedLastName: '', submittedEmail: '', submittedMessage: '' }\r\n\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\r\n\r\n  handleSubmit = () => {\r\n    const { firstName, lastName, email, message } = this.state\r\n\r\n    this.setState({ \r\n      submittedFirstName: firstName, firstName: \"\", \r\n      submittedLastName: lastName, lastName: \"\",\r\n      submittedEmail: email, email: \"\",\r\n      submittedMessage: message, message: \"\" })\r\n  }\r\n\r\n  render() {\r\n    const { firstName, lastName, email, message, submittedFirstName, submittedLastName, submittedEmail, submittedMessage } = this.state\r\n\r\n  return (\r\n    <Grid id='contact-us' centered columns={2}>\r\n      <Grid.Column>\r\n        <div className=\"ui segment contactform inverted\" >\r\n          <h2 style={{textAlign: \"center\", color: '#ebba34'}}>Ask Us Anything</h2>\r\n          <br></br>\r\n          <Form onSubmit={this.handleSubmit} >\r\n            <Form.Group >\r\n              <Form.Input\r\n                width={8}\r\n                placeholder='First name'\r\n                name='firstName'\r\n                value={firstName}\r\n                onChange={this.handleChange}\r\n                />\r\n              <Form.Input\r\n                width={8}\r\n                placeholder='Last Name'\r\n                name='lastName'\r\n                value={lastName}\r\n                onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Input\r\n                width={16}\r\n                placeholder='Email'\r\n                name='email'\r\n                value={email}\r\n                onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Input\r\n                width={16}\r\n                placeholder='Message'\r\n                control={TextArea}\r\n                name='message'\r\n                value={message}\r\n                onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n            <Form.Button\r\n              content='Submit'\r\n              color='yellow'\r\n              control={Button}\r\n              style={{textAlign: \"center\"}}\r\n              className=''\r\n               />\r\n            </Form.Group>      \r\n          </Form>        \r\n        </div>\r\n      </Grid.Column>\r\n    </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FormCaptureValues","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Modal\\index.js",["122"],"import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { directions } from '../../utils/API'\r\nimport { List } from 'semantic-ui-react'\r\n\r\n\r\nfunction PopUpDirections(props) {\r\n  const [modalIsOpen, setModalIsOpen] = React.useState(false)\r\n  const [completeDirections, setCompleteDirections] = useState([])\r\n  const [localSearch, setLocalSearch] = useState(false)\r\n  const getDirections = () =>{\r\n    const completedDirections = directions(props.lat, props.lon)\r\n    setCompleteDirections(completedDirections)\r\n    console.log(completeDirections)\r\n  }\r\n    if(modalIsOpen){ \r\n        return (\r\n            <div>\r\n                <Modal \r\n                    isOpen={modalIsOpen} \r\n                    onRequestClose={() => setModalIsOpen(false)}\r\n                    appElement={document.getElementById('root') || undefined}\r\n                >\r\n                    <List>\r\n                    {modalIsOpen ?\r\n                        <button onClick={() => setLocalSearch(true)}> Directions from current location </button> \r\n                    : \"\"}\r\n                    {localSearch ? \r\n                        completeDirections.map((stop) => {\r\n                            console.log(stop.value)\r\n                            return(\r\n                                <List.Item key={stop} >\r\n                                    <strong>{stop}</strong>\r\n                                </List.Item> \r\n                            ) \r\n                        })\r\n                    : \"\"}\r\n                    </List>\r\n                    <button onClick={() => setModalIsOpen(false)}>Close Directions</button>\r\n                </Modal>\r\n            </div>\r\n          )\r\n    } else {\r\n        return(<p style={{color:'#f2f0f0'}} onClick={() => (setModalIsOpen(true), getDirections())}>get directions</p>)\r\n    }\r\n}\r\n\r\nexport default PopUpDirections","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\API.js",["123"],"  // route to get logged in user's info (needs the token)\r\nexport const getMe = (token) => {\r\n    return fetch('/api/users/me', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  };\r\n  \r\nexport const createUser = (userData) => {\r\n    return fetch('/api/users', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n  };\r\n  \r\nexport const loginUser = (userData) => {\r\n    return fetch('/api/users/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n  };\r\n  \r\n  // save Brewery data for a logged in user\r\nexport const saveBrewery = (breweryData, token) => {\r\n    return fetch('/api/users', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(breweryData),\r\n    });\r\n  };\r\n  \r\n  // remove saved Brewery data for a logged in user\r\nexport const deleteBrewery = (breweryId, token) => {\r\n    return fetch(`/api/users/breweries/${breweryId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  };\r\n  \r\nlet userIP = \"\";\r\nlet userLat = 0;\r\nlet userLon = 0;\r\nlet completeDirections = [];\r\nlet breweriesNearMe =[];\r\n\r\n \r\n  \r\n \r\n  // make a search to open brew api\r\nexport  const searchByCity = (query, page) => {\r\n    return fetch(`https://api.openbrewerydb.org/breweries?by_city=${query}&page=${page}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          //console.log(data)\r\n             return data.filter( x => query.toLowerCase() === x.city.toLowerCase())\r\n        })\r\n     }; \r\n\r\nexport  const searchByState = (query, page) => {\r\n    return fetch(`https://api.openbrewerydb.org/breweries?by_state=${query}&page=${page}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // console.log(data)\r\n\r\n           return data\r\n\r\n      })\r\n}; \r\n\r\nexport  const searchByTerm = (query, page) => {\r\n  return fetch(`https://api.openbrewerydb.org/breweries/search?query=${query}&page=${page}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // console.log(data)\r\n\r\n         return data\r\n\r\n    })\r\n}; \r\n\r\nexport  const searchNearUser = (page) => {\r\n  fetch(\"https://api.ipify.org/?format=json\").then(function(response) {\r\n    if(response.ok){\r\n        response.json().then(function(data){\r\n           userIP = data.ip \r\n\r\n            //uses ip address to get physical location data\r\n            return fetch(\"https://ipapi.co/\" + userIP + \"/json\")\r\n        }).then(function(response){\r\n          console.log(response)\r\n            if(response.ok){\r\n                response.json().then( function(data){\r\n                    //save location data for future use\r\n                    userLat = data.latitude;\r\n                    userLon = data.longitude;\r\n                    // console.log(userLat, userLon);\r\n                    fetch(`https://api.openbrewerydb.org/breweries?by_dist=${userLat},${userLon}&page=${page}`)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                      // console.log(data)\r\n                      if(breweriesNearMe.length){\r\n                        breweriesNearMe= []\r\n                      }\r\n                      data.map( x => {\r\n                        breweriesNearMe.push(x)\r\n                      })\r\n                      // console.log(breweriesNearMe)\r\n                  })\r\n                  });\r\n              }\r\n          });\r\n      }\r\n  })\r\n  // console.log(breweriesNearMe)\r\n  return breweriesNearMe\r\n}; \r\nsearchNearUser()\r\n \r\nexport function directions(latitude, longitude) {\r\n  const lat = parseFloat(latitude);\r\n  const lon = parseFloat(longitude);\r\n  completeDirections = []\r\n  fetch(\"https://api.ipify.org/?format=json\").then(function(response) {\r\n    if(response.ok){\r\n      response.json().then(function(data){\r\n          userIP = data.ip \r\n          //uses ip address to get physical location data\r\n          return fetch(\"https://ipapi.co/\" + userIP + \"/json\")\r\n      }).then(function(response){\r\n        if(response.ok){\r\n          response.json().then(function(data){\r\n            //save location data for future use\r\n            userLat = data.latitude;\r\n            userLon = data.longitude;\r\n            fetch(\"https://api.tomtom.com/routing/1/calculateRoute/\" + userLat + \"%2C\" + userLon + \"%3A\" + lat + \"%2C\" + lon + \"/json?instructionsType=text&traffic=true&avoid=unpavedRoads&travelMode=car&vehicleCommercial=false&key=2qYjtOeeuEawxxQE7KUtVZQFywO4pRvN\").then(function(response){\r\n              if(response.ok){\r\n                response.json().then(function(data){\r\n                  let instructions=data.routes[0].guidance.instructions;                                             \r\n                  for (let i = 0; i < instructions.length; i++) {\r\n                    let stop = instructions[i].message;\r\n                    completeDirections.push(stop);\r\n                  };\r\n                });\r\n              }\r\n              else {\r\n                console.log(\"wooooooooow\")\r\n              }\r\n            });\r\n          });\r\n        }\r\n      });\r\n    } \r\n  })  \r\n  return completeDirections \r\n};\r\n\r\n// directions using TomTom\r\n// export function directions(latitude, longitude) {\r\n//   // console.log(lat, lon);\r\n\r\n//             }\r\n      \r\n","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\localStorage.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"132","line":2,"column":9,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"133","line":2,"column":53,"nodeType":"130","messageId":"131","endLine":2,"endColumn":57},{"ruleId":"128","severity":1,"message":"134","line":7,"column":55,"nodeType":"130","messageId":"131","endLine":7,"endColumn":74},{"ruleId":"128","severity":1,"message":"135","line":10,"column":10,"nodeType":"130","messageId":"131","endLine":10,"endColumn":13},{"ruleId":"128","severity":1,"message":"136","line":15,"column":12,"nodeType":"130","messageId":"131","endLine":15,"endColumn":16},{"ruleId":"128","severity":1,"message":"137","line":15,"column":18,"nodeType":"130","messageId":"131","endLine":15,"endColumn":25},{"ruleId":"128","severity":1,"message":"138","line":17,"column":12,"nodeType":"130","messageId":"131","endLine":17,"endColumn":27},{"ruleId":"128","severity":1,"message":"139","line":17,"column":29,"nodeType":"130","messageId":"131","endLine":17,"endColumn":47},{"ruleId":"128","severity":1,"message":"140","line":18,"column":30,"nodeType":"130","messageId":"131","endLine":18,"endColumn":46},{"ruleId":"128","severity":1,"message":"141","line":20,"column":21,"nodeType":"130","messageId":"131","endLine":20,"endColumn":32},{"ruleId":"128","severity":1,"message":"142","line":20,"column":41,"nodeType":"130","messageId":"131","endLine":20,"endColumn":50},{"ruleId":"128","severity":1,"message":"143","line":27,"column":12,"nodeType":"130","messageId":"131","endLine":27,"endColumn":19},{"ruleId":"128","severity":1,"message":"144","line":27,"column":21,"nodeType":"130","messageId":"131","endLine":27,"endColumn":26},{"ruleId":"128","severity":1,"message":"145","line":27,"column":28,"nodeType":"130","messageId":"131","endLine":27,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":148,"column":15,"nodeType":"148","endLine":148,"endColumn":19},{"ruleId":"128","severity":1,"message":"149","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":16},{"ruleId":"128","severity":1,"message":"150","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"151","line":7,"column":9,"nodeType":"130","messageId":"131","endLine":7,"endColumn":19},{"ruleId":"128","severity":1,"message":"152","line":7,"column":21,"nodeType":"130","messageId":"131","endLine":7,"endColumn":32},{"ruleId":"128","severity":1,"message":"153","line":8,"column":10,"nodeType":"130","messageId":"131","endLine":8,"endColumn":24},{"ruleId":"128","severity":1,"message":"154","line":11,"column":10,"nodeType":"130","messageId":"131","endLine":11,"endColumn":13},{"ruleId":"128","severity":1,"message":"155","line":11,"column":15,"nodeType":"130","messageId":"131","endLine":11,"endColumn":18},{"ruleId":"128","severity":1,"message":"139","line":27,"column":27,"nodeType":"130","messageId":"131","endLine":27,"endColumn":45},{"ruleId":"128","severity":1,"message":"156","line":31,"column":10,"nodeType":"130","messageId":"131","endLine":31,"endColumn":17},{"ruleId":"128","severity":1,"message":"157","line":31,"column":19,"nodeType":"130","messageId":"131","endLine":31,"endColumn":29},{"ruleId":"128","severity":1,"message":"143","line":36,"column":10,"nodeType":"130","messageId":"131","endLine":36,"endColumn":17},{"ruleId":"128","severity":1,"message":"144","line":36,"column":19,"nodeType":"130","messageId":"131","endLine":36,"endColumn":24},{"ruleId":"128","severity":1,"message":"158","line":114,"column":15,"nodeType":"130","messageId":"131","endLine":114,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":172,"column":7,"nodeType":"161","messageId":"162","endLine":194,"endColumn":8},{"ruleId":"128","severity":1,"message":"163","line":217,"column":15,"nodeType":"130","messageId":"131","endLine":217,"endColumn":25},{"ruleId":"164","severity":1,"message":"165","line":217,"column":55,"nodeType":"166","messageId":"167","endLine":217,"endColumn":57},{"ruleId":"128","severity":1,"message":"168","line":20,"column":50,"nodeType":"130","messageId":"131","endLine":20,"endColumn":68},{"ruleId":"128","severity":1,"message":"169","line":20,"column":70,"nodeType":"130","messageId":"131","endLine":20,"endColumn":87},{"ruleId":"128","severity":1,"message":"170","line":20,"column":89,"nodeType":"130","messageId":"131","endLine":20,"endColumn":103},{"ruleId":"128","severity":1,"message":"171","line":20,"column":105,"nodeType":"130","messageId":"131","endLine":20,"endColumn":121},{"ruleId":"172","severity":1,"message":"173","line":44,"column":81,"nodeType":"174","messageId":"175","endLine":44,"endColumn":82},{"ruleId":"164","severity":1,"message":"176","line":117,"column":35,"nodeType":"166","messageId":"167","endLine":117,"endColumn":37},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'UseEffect' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Menu' is defined but never used.","'QUERY_BREWERY_BY_ID' is defined but never used.","'set' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'savedBreweryIds' is assigned a value but never used.","'setSavedBreweryIds' is assigned a value but never used.","'setDeleteBrewery' is assigned a value but never used.","'userLoading' is assigned a value but never used.","'userError' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Button' is defined but never used.","'useEffect' is defined but never used.","'directions' is defined but never used.","'saveBrewery' is defined but never used.","'saveBreweryIds' is defined but never used.","'add' is defined but never used.","'xor' is defined but never used.","'queryId' is assigned a value but never used.","'setQueryId' is assigned a value but never used.","'saveToDB' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'filterData' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'submittedFirstName' is assigned a value but never used.","'submittedLastName' is assigned a value but never used.","'submittedEmail' is assigned a value but never used.","'submittedMessage' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","Array.prototype.map() expects a return value from arrow function.","no-global-assign","no-unsafe-negation"]