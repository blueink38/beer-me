[{"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\index.js":"1","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\App.js":"2","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Home.js":"3","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Login.js":"4","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Signup.js":"5","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\FindBrewery.js":"6","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\mutations.js":"7","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\auth.js":"8","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\SearchBreweries\\index.js":"9","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\localStorage.js":"10","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\helpers.js":"11","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\API.js":"12","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Header\\index.js":"13","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Hero\\index.js":"14","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Blip\\index.js":"15","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\ContactUs\\index.js":"16","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Footer\\index.js":"17","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Modal\\index.js":"18","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\queries.js":"19","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Dashboard.js":"20"},{"size":325,"mtime":1623011020495,"results":"21","hashOfConfig":"22"},{"size":1314,"mtime":1623011020440,"results":"23","hashOfConfig":"22"},{"size":559,"mtime":1623011020507,"results":"24","hashOfConfig":"22"},{"size":2208,"mtime":1623011020513,"results":"25","hashOfConfig":"22"},{"size":3336,"mtime":1623011020520,"results":"26","hashOfConfig":"22"},{"size":564,"mtime":1622651181843,"results":"27","hashOfConfig":"22"},{"size":1971,"mtime":1622964113029,"results":"28","hashOfConfig":"22"},{"size":1518,"mtime":1622328292828,"results":"29","hashOfConfig":"22"},{"size":14708,"mtime":1623017379473,"results":"30","hashOfConfig":"22"},{"size":886,"mtime":1622964113012,"results":"31","hashOfConfig":"22"},{"size":2314,"mtime":1623011020549,"results":"32","hashOfConfig":"22"},{"size":5416,"mtime":1623011020528,"results":"33","hashOfConfig":"22"},{"size":2631,"mtime":1622964112870,"results":"34","hashOfConfig":"22"},{"size":440,"mtime":1622964112886,"results":"35","hashOfConfig":"22"},{"size":575,"mtime":1623011020449,"results":"36","hashOfConfig":"22"},{"size":1853,"mtime":1623011020459,"results":"37","hashOfConfig":"22"},{"size":1228,"mtime":1622964112866,"results":"38","hashOfConfig":"22"},{"size":3067,"mtime":1623011020479,"results":"39","hashOfConfig":"22"},{"size":1621,"mtime":1623016983275,"results":"40","hashOfConfig":"22"},{"size":6813,"mtime":1623014577783,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"dkynqg",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\index.js",[],["90","91"],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\App.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Home.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Login.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Signup.js",["92","93","94"],"import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport { Form, TextArea, Button, Grid } from 'semantic-ui-react'\n\n\n// class FormCaptureValues extends Component {\n//   state = { userName: '', email: '', password: '', submittedUserName: '', submittedEmail: '', submittedPassword: ''}\n\n//   handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n//   handleSubmit = () => {\n//     const { userName, email, password } = this.state\n\n//     this.setState({ \n//       submittedUserName: userName, userName: \"\", \n//       submittedEmail: email, email: \"\",\n//       submittedPassword: password, password: \"\" })\n//   }\n// }\n\n\n\n\n\n\n\n\nfunction Signup() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        username: formState.username\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n    // render() {\n    // const { userName, email, password, submittedUserName, submittedEmail, submittedPassword } = this.state\n\n  return (\n    <section style={{height: '100vh'}} id='loginsignuppage'>\n    <div className=\"loginsignupcontainers my-1\">\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <h1 style={{color:'#ebba34'}}>Sign Up</h1>\n      <br></br>\n      <form onSubmit={handleFormSubmit}>\n        <Form.Group>\n        {/* <Form.Input\n                width={8}\n                placeholder='User Name'\n                name='userName'\n                value={userName}\n                onChange={this.handleChange}\n                /> */}\n\n\n\n\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"firstName\">Username:</label>\n          <Form.Input\n            placeholder=\"Username\"\n            name=\"username\"\n            type=\"username\"\n            id=\"username\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"email\">Email:</label>\n          <Form.Input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"pwd\">Password:</label>\n          <Form.Input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <br></br>\n        <div className=\"flex-row flex-end\">\n        <button class=\"ui yellow button\">Submit</button>\n        </div>\n        </Form.Group>\n      </form>\n    </div>\n    </section>\n  );\n\n\n    // </Grid.Column>\n    // </Grid>\n\n\n\n\n  // );\n}\n// }\n\n\n\nexport default Signup;\n","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\FindBrewery.js",[],["95","96"],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\mutations.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\auth.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\SearchBreweries\\index.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112"],"import React, { useState, useEffect} from 'react';\nimport Modal from '../Modal/index'\n// import _ from 'lodash'\nimport {Form, Button, Card, List, Grid, GridColumn, Menu} from 'semantic-ui-react'\nimport {useMutation, useQuery} from '@apollo/react-hooks'\nimport Auth from '../../utils/auth'\nimport {directions, saveBrewery, searchByCity, searchByState, searchByTerm, searchNearUser} from '../../utils/API'\nimport { saveBreweryIds, getSavedBreweryIds } from '../../utils/localStorage'\nimport {ADD_BREWERY_TO_DB, SAVE_BREWERY_TO_USER} from '../../utils/mutations'\nimport {QUERY_ALL_BREWERIES, QUERY_BREWERY, QUERY_ME} from '../../utils/queries'\nimport { add, xor } from 'lodash';\nimport { formatPhone , idbPromise} from '../../utils/helpers';\n\nlet pageNum = 1;\n\nconst SearchBreweries = () => {\n//  searchNearUser()\n  const[addBrewery] = useMutation(ADD_BREWERY_TO_DB);\n  const[saveBrewery] = useMutation(SAVE_BREWERY_TO_USER)\n  // create state for holding returned openBrewery api data\n  const [searchedBreweries, setSearchedBrewery] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n  // create state for holding our search field data\n  const [searchType, setSearchType] = useState('');\n  // create state to hold saved BreweryId values\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\n  //holds the last used search input\n  const [lastSearched, setLastSearched] = useState('')\n  const[savedBrewery, setSavedBrewery] = useState('')\n  const userID = Auth.getProfile().data._id;\n\n  const {loading: userLoading, error: userError, data: userData} = useQuery(QUERY_ME, {\n    variables:{ id: userID}\n  })\n  const {loading, error, data} = useQuery(QUERY_BREWERY, {\n    variables:{ name: savedBrewery}\n  })\n  const { data:allData} = useQuery(QUERY_ALL_BREWERIES, {\n\n    pollInterval: 500,\n  });\n  // console.log(Auth.loggedIn())\n\n  useEffect(() => {\n    if(!allData) {\n      allData.breweries.forEach((brewery) => {\n        idbPromise('searched-brewery', 'put', brewery);\n      });\n      // add else if to check if `loading` is undefined in `useQuery()` Hook\n    } else if (!loading) {\n      // since we're offline, get all of the data from the `brewery` store\n      idbPromise('searched-brewery', 'get').then((brewery) => {\n       setSearchedBrewery(brewery)\n      });\n    }\n  }, [data, loading]);\nconsole.log(userData)\n  useEffect(() => {\n    if(!userData) {\n      userData.me.breweries.forEach((brewery) => {\n        console.log(brewery)\n        idbPromise('saved-brewery', 'put', brewery);\n      });\n    } \n  }, [data, loading]);\n\n  \n  const options = [\n    { key: 'city', text: 'City', value: 'city' },\n    { key: 'state', text: 'State', value: 'state' },\n    { key: 'keyword', text: 'Keyword', value: 'keyword' },\n  ]\n\n  const handleUserLoc = async (event) => {\n    event.preventDefault();\n\n    setSearchInput('')\n    setLastSearched('')\n    try {\n      const response = await searchNearUser(pageNum);\n     \n      console.log(response)\n      if(response.length){\n        \n          const breweryData = response.map((brewery) => (\n            {\n            breweryID: brewery.id,\n            name: brewery.name,\n            breweryType: brewery.brewery_type,\n            street: brewery.street || \"\",\n            address2: brewery.address_2,\n            address3: brewery.address_3,\n            city: brewery.city,\n            state: brewery.state,\n            countyProvince: brewery.county_province,\n            postalCode: brewery.postal_code,\n            country: brewery.country,\n            longitude: brewery.longitude,\n            latitude: brewery.latitude,\n            phone: brewery.phone || \"\",\n            websiteUrl: brewery.website_url || \"\"\n          }));\n          const filterData = []\n          \n          searchedBreweries.breweries.map(brewery => {\n            \n              console.log(brewery)\n              const index = breweryData.indexOf(brewery)\n              console.log(index)\n              // if (index > -1) {\n              //   savedBreweries.splice(index, 1);\n              // }\n          })\n        console.log(breweryData)\n        console.log(filterData)\n        const saveToDB = response.map((brewery) => \n         addBrewery(\n           {\n             variables:\n              {\n                breweryID: brewery.id,\n                name: brewery.name,\n                breweryType: brewery.brewery_type,\n                street: brewery.street || \"\",\n                address2: brewery.address_2,\n                address3: brewery.address_3,\n                city: brewery.city,\n                state: brewery.state,\n                countyProvince: brewery.county_province,\n                postalCode: brewery.postal_code,\n                country: brewery.country,\n                longitude: brewery.longitude,\n                latitude: brewery.latitude,\n                phone: brewery.phone || \"\",\n                websiteUrl: brewery.website_url || \"\"\n              }\n             \n           }\n        \n         ));\n        console.log(breweryData)\n        setSearchedBrewery(breweryData);\n      } else {\n        setSearchedBrewery([])\n      }\n      \n      setSearchInput('');\n      // console.log('YES')\n      }\n      catch (err) {\n        console.error(err.graphQLErrors);\n      }\n\n  }\n  // create method to search for Breweries and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n\n    if (!searchInput && !lastSearched) {\n      return false;\n    }\n\n    try {\n      if(searchInput.length){\n        if(searchInput !== lastSearched) {\n          pageNum = 1\n        }\n        setLastSearched(searchInput)\n      }\n\n      let response ;\n      switch(searchType){\n        case 'city':\n          if(searchInput){\n            response = await searchByCity(searchInput, pageNum);\n          } else if (lastSearched) {\n            response = await searchByCity(lastSearched, pageNum);\n          } \n          break;\n        case 'state':\n          if(searchInput){\n            response = await searchByState(searchInput, pageNum);\n          } else if (lastSearched) {\n            response = await searchByState(lastSearched, pageNum);\n          }\n          break;\n        case 'keyword':\n          if(searchInput){\n            response = await searchByTerm(searchInput, pageNum);\n          } else if (lastSearched) {\n            response = await searchByTerm(lastSearched, pageNum);\n          }\n          break;\n      }\n      \n      if(response.length){\n        const breweryData = response.map((brewery) => (\n          {\n          breweryID: brewery.id,\n          name: brewery.name,\n          breweryType: brewery.brewery_type,\n          street: brewery.street || \"\",\n          address2: brewery.address_2,\n          address3: brewery.address_3,\n          city: brewery.city,\n          state: brewery.state,\n          countyProvince: brewery.county_province,\n          postalCode: brewery.postal_code,\n          country: brewery.country,\n          longitude: brewery.longitude,\n          latitude: brewery.latitude,\n          phone: brewery.phone || \"\",\n          websiteUrl: brewery.website_url || \"\"\n        }));\n        setSearchedBrewery(breweryData);\n\n        const filterData = breweryData.filter(brewery => {\n              console.log(brewery.name)\n        })\n\n      } else {\n        setSearchedBrewery([])\n      }\n      \n      setSearchInput('');\n      }\n      catch (err) {\n        console.error(err);\n      }\n    } \n\n\n  // create function to handle saving a Brewery to our database\n  const handleSaveBrewery = async (brewery) => {\n\n    if(brewery.length){\n\n      try{\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n        const brewId = data.brewery._id;\n        console.log(brewId)\n        if (!token) {\n          return false;\n        }\n        \n        const response = await saveBrewery(\n            { \n              variables:{\n                brewId: brewId,\n                id: userID\n              }\n            }\n        );\n        console.log(response)\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n      }catch (err) {\n        console.error(err);\n      }\n  \n\n    }\n  };\n\n  const handlePageChange =  async (e,name) => {\n    if (name === \"next\") {\n      //setPageNumber(pageNumber + 1)\n      pageNum++\n      if(!searchInput && !lastSearched){\n        handleUserLoc(e)\n      } else {\n        handleFormSubmit(e)\n      }\n    } else {\n      //setPageNumber(pageNumber - 1)\n      pageNum--\n      if(!searchInput && !lastSearched){\n        handleUserLoc(e)\n      } else {\n        handleFormSubmit(e)\n      }\n    }\n  }\n  if(savedBrewery.length){\n    handleSaveBrewery(savedBrewery)\n  }\n  \n  return (\n    <>\n    <section  id=\"about\">\n      <div className=\"columns main-col drinkbutton\"> \n        </div>\n          <Form onSubmit={handleFormSubmit} id='submit'>\n            <Grid centered doubling stackable columns={3}>\n              <Grid.Column>          \n                <div class=\"ui segment contactform inverted\" >\n                  <h1 style={{textAlign: \"center\", color: '#ebba34'}}>Find Your Brewery</h1>\n                  <br></br>\n                  <Form.Group>\n                    <Form.Input\n                      width={8}\n                      name='searchInput'\n                      value={searchInput}\n                      onChange={(e) => setSearchInput(e.target.value)}\n                      placeholder='Search for a Brewery'\n                    />\n                  <Form.Select\n                    fluid\n                    options={options}\n                    width={8}\n                    // required={true}\n                    placeholder='Search for breweries by...'\n                    onChange={(e, { value }) => setSearchType(value)}\n                    />\n                  </Form.Group>\n                  <br></br>\n                <div className=\"columns main-col drinkbutton\">\n                  <Button \n                    // centered\n                    id='city' \n                    type='submit'\n                    // onClick={handleFormSubmit} \n                   \n                    className=\"ui huge yellow button\">\n                    GET DRINKING!!\n                  </Button>\n               </div>\n               <br></br>\n               <div className=\"columns main-col drinkbutton\">\n                  <Button \n                    // centered\n                    id='city' \n                    onClick={(e) => handleUserLoc(e)} \n                    className=\"ui huge yellow button\">\n                    FIND NEAREST BREWERY\n                  </Button>\n\n                </div>\n              </div>\n          </Grid.Column>\n        </Grid>\n      </Form>      \n\n        <h2>\n          {searchedBreweries.length\n            ? `Viewing results ${1 + (20 * (pageNum -1))} - ${searchedBreweries.length + (20 * (pageNum - 1))}:`\n            : ''}\n        </h2>\n        <Grid centered doubling stackable columns={3} >\n          {searchedBreweries.length \n          ? \n          searchedBreweries.map((brewery) => {\n            return (\n              <GridColumn centered=\"true\">  \n              <Card centered key={brewery.breweryId}>\n                <h2 style={{textAlign:'center', color:'#ebba34'}}>{brewery.name}</h2>\n                <List>\n                  <List.Item className='beercard-output'><strong>Type:  </strong> {brewery.breweryType}</List.Item>\n                  {brewery.street ? \n                    <List.Item className='beercard-output'><strong> Street:  </strong>{brewery.street}</List.Item>\n                  :\"\"}\n                  <List.Item className='beercard-output'><strong> City:  </strong>{brewery.city}</List.Item>\n                  <List.Item className='beercard-output'><strong> State:  </strong>{brewery.state}</List.Item>\n                  {brewery.phone ? \n                    <List.Item className='beercard-output'><strong> Phone Number:  </strong> {formatPhone(brewery.phone)}</List.Item>\n                  : \"\"}\n                  {brewery.websiteUrl ? \n                    <List.Item className='beercard-output'><strong> Website:  </strong> <a style={{color:'#2432d1'}} href={brewery.websiteUrl} target='_blank'  rel=\"noreferrer\" >{brewery.websiteUrl}</a></List.Item>\n                  : \"\"}\n               <br></br>\n                </List>\n                  {/* {Auth.loggedIn() && ( */}\n                    \n                  <div className='ui large buttons'>\n                    <Button className ='ui yellow button' style={{color:'#f2f0f0'}}\n                      // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\n                      onClick={() =>{\n                      setSavedBrewery(brewery.name)\n\n                      // saveToUser(brewery)\n                      }}>\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\n                        ? 'This Brewery has already been saved!'\n                        : 'save brewery'}\n                    </Button>\n                    {brewery.latitude && brewery.longitude ? \n                      <>\n                       \n                       <Button className ='ui yellow button'\n                         // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\n                        >\n                          <p ><Modal lat={brewery.latitude} lon={brewery.longitude} /></p>\n                       </Button>\n                       </>\n                    :\"\"}\n                   \n                  {/* )} */}\n                  </div>\n                  </Card>\n              \n            </GridColumn>\n            );\n          })\n          : \"\"}\n          {!searchedBreweries.length && pageNum > 1 ?\n          \"No more breweries to display\"\n          :\n          \"\"}\n        </Grid>\n        <Menu inverted >\n          {pageNum > 1 ? \n            <Menu.Item\n              name=\"prev\"\n              onClick={(e, { name }) => handlePageChange(e,name)}\n            >\n              <Button color=\"yellow\">\n                <p>Previous Page</p>\n              </Button>\n            </Menu.Item>\n          : \"\"}\n          {searchedBreweries.length ? \n            <Menu.Menu position=\"right\">\n              <Menu.Item\n                name=\"next\"\n                onClick={(e, { name }) => handlePageChange(e,name)}\n              >\n                <Button color=\"yellow\">\n                  <p>Next Page</p>\n                </Button>\n              </Menu.Item>\n            </Menu.Menu>\n          : \"\"}\n        </Menu>       \n        </section>\n    </>\n  );\n};\n\nexport default SearchBreweries;\n","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\helpers.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\API.js",["113","114"],"import PopUpDirections from \"../components/Modal\";\n// import directionsModal from \"../components/Modal\";\n\n  // route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n    return fetch('/api/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \nexport const createUser = (userData) => {\n    return fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \nexport const loginUser = (userData) => {\n    return fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \n  // save Brewery data for a logged in user\nexport const saveBrewery = (breweryData, token) => {\n    return fetch('/api/users', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(breweryData),\n    });\n  };\n  \n  // remove saved Brewery data for a logged in user\nexport const deleteBrewery = (breweryId, token) => {\n    return fetch(`/api/users/breweries/${breweryId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \nlet userIP = \"\";\nlet userLat = 0;\nlet userLon = 0;\nlet completeDirections = [];\nlet breweriesNearMe =[];\n\n \n  \n \n  // make a search to open brew api\nexport  const searchByCity = (query, page) => {\n    return fetch(`https://api.openbrewerydb.org/breweries?by_city=${query}&page=${page}`)\n        .then(response => response.json())\n        .then(data => {\n          //console.log(data)\n             return data.filter( x => query.toLowerCase() === x.city.toLowerCase())\n        })\n     }; \n\nexport  const searchByState = (query, page) => {\n    return fetch(`https://api.openbrewerydb.org/breweries?by_state=${query}&page=${page}`)\n        .then(response => response.json())\n        .then(data => {\n          // console.log(data)\n\n           return data\n\n      })\n}; \n\nexport  const searchByTerm = (query, page) => {\n  return fetch(`https://api.openbrewerydb.org/breweries/search?query=${query}&page=${page}`)\n      .then(response => response.json())\n      .then(data => {\n        // console.log(data)\n\n         return data\n\n    })\n}; \n\nexport  const searchNearUser = (page) => {\n  fetch(\"https://api.ipify.org/?format=json\").then(function(response) {\n    if(response.ok){\n        response.json().then(function(data){\n           userIP = data.ip \n\n            //uses ip address to get physical location data\n            return fetch(\"https://ipapi.co/\" + userIP + \"/json\")\n        }).then(function(response){\n          console.log(response)\n            if(response.ok){\n                response.json().then( function(data){\n                    //save location data for future use\n                    userLat = data.latitude;\n                    userLon = data.longitude;\n                    // console.log(userLat, userLon);\n                    fetch(`https://api.openbrewerydb.org/breweries?by_dist=${userLat},${userLon}&page=${page}`)\n                    .then(response => response.json())\n                    .then(data => {\n                      // console.log(data)\n                      if(breweriesNearMe.length){\n                        breweriesNearMe= []\n                      }\n                      data.map( x => {\n                        breweriesNearMe.push(x)\n                      })\n                      // console.log(breweriesNearMe)\n                  })\n                  });\n              }\n          });\n      }\n  })\n  // console.log(breweriesNearMe)\n  return breweriesNearMe\n}; \nsearchNearUser()\n \nexport function directions(latitude, longitude) {\n  const lat = parseFloat(latitude);\n  const lon = parseFloat(longitude);\n  completeDirections = []\n  fetch(\"https://api.ipify.org/?format=json\").then(function(response) {\n    if(response.ok){\n      response.json().then(function(data){\n          userIP = data.ip \n          //uses ip address to get physical location data\n          return fetch(\"https://ipapi.co/\" + userIP + \"/json\")\n      }).then(function(response){\n        if(response.ok){\n          response.json().then(function(data){\n            //save location data for future use\n            userLat = data.latitude;\n            userLon = data.longitude;\n            fetch(\"https://api.tomtom.com/routing/1/calculateRoute/\" + userLat + \"%2C\" + userLon + \"%3A\" + lat + \"%2C\" + lon + \"/json?instructionsType=text&traffic=true&avoid=unpavedRoads&travelMode=car&vehicleCommercial=false&key=2qYjtOeeuEawxxQE7KUtVZQFywO4pRvN\").then(function(response){\n              if(response.ok){\n                response.json().then(function(data){\n                  let instructions=data.routes[0].guidance.instructions;                                             \n                  for (let i = 0; i < instructions.length; i++) {\n                    let stop = instructions[i].message;\n                    completeDirections.push(stop);\n                  };\n                });\n              }\n              else {\n                console.log(\"wooooooooow\")\n              }\n            });\n          });\n        }\n      });\n    } \n  })  \n  return completeDirections \n};\n\nexport default completeDirections;\n","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Header\\index.js",["115"],"import React, { Component } from 'react'\nimport { Button, Segment, Menu } from 'semantic-ui-react'\nimport { Link } from \"react-router-dom\"\nimport Auth from \"../../utils/auth\"\n\n\nexport default class MenuExampleInvertedSecondary extends Component {\n    state = { activeItem: 'home' }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Segment id=\"home\" inverted>\n\n      <Menu id=\"home\" inverted fixed=\"top\" size='huge' >\n        {activeItem === \"login\" || activeItem === \"signup\" ? \n        <Menu.Menu>\n           <Link to=\"/\"><Menu.Item \n              name='home'\n              background='yellow'\n              onClick={this.handleItemClick}\n            /></Link>\n        </Menu.Menu>\n        :\n        <Menu.Menu>\n          <Menu.Item \n              href=\"/\"\n              name='home'\n              color='yellow'\n              active={activeItem === 'home'}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              href=\"/#about\"\n              name='breweries'\n              color='yellow'\n              active={activeItem === 'breweries'}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              href=\"/#contact-us\"\n              name='contact us'\n              color='yellow'\n              active={activeItem === 'contact us'}\n              onClick={this.handleItemClick}\n            />\n          </Menu.Menu>\n        }\n        {!Auth.loggedIn() ? \n          <Menu.Menu position='right'>\n            <Menu.Item\n              name=\"login\"\n              active={activeItem === 'login'}\n              onClick={this.handleItemClick}\n            >\n              <Link to=\"/login\">Login</Link>\n            </Menu.Item>\n            <Menu.Item\n              name=\"signup\"\n              active={activeItem === 'signup'}\n              onClick={this.handleItemClick}\n            >\n            <Link to=\"/signup\">Sign Up</Link>\n            </Menu.Item>\n          </Menu.Menu>\n        : \n          <Menu.Menu position='right'>\n            <Menu.Item\n              name=\"dashboard\"\n              active={activeItem === 'dashboard'}\n              onClick={this.handleItemClick}\n            >\n              <Link to=\"/dashboard\">Dashboard</Link>\n            </Menu.Item>\n            <Menu.Item\n              name=\"logout\"\n              active={activeItem === 'home'}\n              onClick={() => Auth.logout()}\n            >\n              <Link to=\"/\">Logout</Link>\n            </Menu.Item>\n          </Menu.Menu>\n        }\n      </Menu>\n      </Segment>\n\n    )\n  }\n}","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Hero\\index.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Blip\\index.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\ContactUs\\index.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Modal\\index.js",["116"],"import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { directions } from '../../utils/API'\nimport { List, Grid } from 'semantic-ui-react'\n\n\nfunction PopUpDirections(props) {\n  const [modalIsOpen, setModalIsOpen] = React.useState(false)\n  const [completeDirections, setCompleteDirections] = useState([])\n  const [localSearch, setLocalSearch] = useState(false)\n  const getDirections = () =>{\n      \n    \n    const completedDirections = directions(props.lat, props.lon)\n    setCompleteDirections(completedDirections)\n    console.log(completeDirections)\n\n  }\n    if(modalIsOpen){ \n        return (\n\n            <div>\n                <Modal \n                    isOpen={modalIsOpen} \n                    onRequestClose={() => setModalIsOpen(false)}\n                    appElement={document.getElementById('root') || undefined}\n                    contentLabel=\"Inline Styles Modal Example\"\n                    style={{\n                      overlay: {\n                        backgroundColor:'',\n                        height:'95%',\n                        width:'50%',\n                        opacity:'100%',\n                        marginTop:'100px',\n                        marginLeft:'25%'\n                      },\n                      content: {\n                        backgroundColor:'#ccccc8',\n                        color: 'black',\n                        scroll: 'none',\n                        height:'85%',\n                        margin:'0'\n                        }\n                      }}\n                >\n                <Grid centered columns={4}>\n                    <Grid.Column>\n                        <List>\n\n                        {modalIsOpen ?\n                            <button  \n                            onClick={() => setLocalSearch(true)}\n                            className=\"ui large yellow button\">\n                            Directions from current location \n                            </button> \n                            \n                        : \"\"}\n                        {localSearch ? \n                            completeDirections.map((stop) => {\n                                return(\n                                    <List.Item key={stop} >\n                                        <strong>{stop}</strong>\n                                    </List.Item> \n                                ) \n                            })\n                        : \"\"}\n                        \n\n                        </List>\n                        <br></br>\n                            <button \n                            onClick={() => setModalIsOpen(false)}\n                            className=\"ui large yellow button\">\n                            Close Window\n                            </button>\n                    </Grid.Column>\n                </Grid>\n\n                </Modal>\n\n            </div>\n\n          )\n    } else {\n        return(<p style={{color:'#ffffff'}} onClick={() => (setModalIsOpen(true), getDirections())}>get directions</p>)\n    }\n}\n\nexport default PopUpDirections\n","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\queries.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Dashboard.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import React, { useState, useEffect } from \"react\";\nimport {Form, Button, Card, List, Grid, GridColumn, Menu} from 'semantic-ui-react'\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { formatPhone, idbPromise } from '../utils/helpers'\nimport Modal from '../components/Modal'\nimport {QUERY_ME, QUERY_ALL_BREWERIES, QUERY_BREWERY, QUERY_BREWERY_BY_ID} from '../utils/queries'\nimport {REMOVE_BREWERY_FROM_USER} from '../utils/mutations'\n\nimport { set } from \"lodash\";\n\n\nfunction Dashboard() {\n    const[deleteBrewery] = useMutation(REMOVE_BREWERY_FROM_USER)\n    const [user, setUser] = useState('');\n    const [savedBreweries, setSavedBreweries] = useState([]);\n    const [deleteId, setDeleteId] = useState('');\n    const[deleteThisBrewery, setDeleteBrewery] = useState('')\n    const userID = Auth.getProfile().data._id;\n    const {loading: userLoading, error: userError, data: userData} = useQuery(QUERY_ME, {\n        variables:{ id: userID}\n      })\n    const { data:allData} = useQuery(QUERY_ALL_BREWERIES, {\n\n        pollInterval: 500,\n    });\n    const {loading, error, data} = useQuery(QUERY_BREWERY, {\n        variables:{ name: deleteThisBrewery}\n      })\n    \n    const {loading: deleteLoad, error: deleteError, data: deleteData} = useQuery(QUERY_BREWERY_BY_ID, {\n      variables:{ name: deleteId}\n    })\n    console.log(deleteThisBrewery)\n    console.log(deleteData)\n    console.log(userData)\n\n    useEffect(() => {\n      if(deleteThisBrewery){\n        const index = savedBreweries.indexOf(deleteThisBrewery)\n        console.log(index)\n        if (index > -1) {\n          savedBreweries.splice(index, 1);\n        }\n        setSavedBreweries(savedBreweries)\n          idbPromise('saved-brewery', 'delete', deleteThisBrewery);\n      }\n      if(!loading) {\n        idbPromise('saved-brewery', 'get').then((brewery) => {\n          setSavedBreweries(brewery)\n         });\n        };\n      }, [deleteThisBrewery, loading]);\n\n  \n    const displayBreweries = async (event) => {\n        event.preventDefault()\n        if(userData.me.breweries){\n            const savedBreweries = userData.me.breweries;\n            console.log(savedBreweries)\n\n            setSavedBreweries(savedBreweries)\n        }\n    }\n\n    const handleDeleteBrewery = async (breweryId) => {\n\n        if(breweryId.length){\n            console.log(breweryId)\n          try{\n            const token = Auth.loggedIn() ? Auth.getToken() : null;\n            \n            if (!token) {\n              return false;\n            }\n            \n            const userId = Auth.getProfile().data._id\n            const response = await deleteBrewery(\n                { \n                  variables:{\n                    brewId: breweryId,\n                    id: userId\n                  }\n                }\n            );\n            console.log(response)\n            if (!response.ok) {\n              throw new Error('something went wrong!');\n            }\n          }catch (err) {\n            console.error(err);\n          }\n      \n    \n        }\n      };\n    // displayBreweries()\n  return (\n    <section style={{height: '100vh'}} id='savedbrewpage'>\n      <div className=\"dashboard\">\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <h1 style={{color:'#ebba34', textAlign:'center'}}>Your Saved Breweries</h1>\n        <br></br>\n        {/* <div \n          className=\"columns main-col drinkbutton\"\n          style={{ margin: \"0 auto 40px auto\"}}\n        >\n          <Button \n            \n            id='user-brewery' \n            type='submit'\n            onClick={(e) => displayBreweries(e)} \n            style={{textAlign: \"center\"}}\n            className=\"ui huge yellow button centered\">\n            SHOW ME MY SAVED BREWS\n          </Button>\n        </div> */}\n      </div>\n        <Grid centered doubling stackable columns={3} >\n            {savedBreweries.length \n            ? \n            savedBreweries.map((brewery) => {\n              return (\n                <GridColumn centered=\"true\">  \n                  <Card centered key={brewery.breweryId}>\n                    <h2 style={{textAlign:'center', color:'#ebba34'}}>{brewery.name}</h2>\n                    <List>\n                      <List.Item className='beercard-output'><strong>Type:  </strong> {brewery.breweryType}</List.Item>\n                      {brewery.street ? \n                        <List.Item className='beercard-output'><strong> Street:  </strong>{brewery.street}</List.Item>\n                      :\"\"}\n                      <List.Item className='beercard-output'><strong> City:  </strong>{brewery.city}</List.Item>\n                      <List.Item className='beercard-output'><strong> State:  </strong>{brewery.state}</List.Item>\n                      {brewery.phone ? \n                        <List.Item className='beercard-output'><strong> Phone Number:  </strong> {formatPhone(brewery.phone)}</List.Item>\n                      : \"\"}\n                      {brewery.websiteUrl ? \n                        <List.Item className='beercard-output'><strong> Website:  </strong> <a style={{color:'#2432d1'}} href={brewery.websiteUrl} target='_blank'  rel=\"noreferrer\" >{brewery.websiteUrl}</a></List.Item>\n                      : \"\"}\n                      <br></br>\n                    </List>\n                    {/* {Auth.loggedIn() && ( */}    \n                    <div className='ui large buttons'>\n                      <Button className ='ui yellow button' style={{color:'#f2f0f0'}}\n                      //   disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\n                        onClick={() =>{\n                        handleDeleteBrewery(brewery._id)\n                        setDeleteId(brewery._id)\n                        setDeleteBrewery(brewery)\n                        // saveToUser(brewery)\n                        }}>\n                        {/* {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId) */}\n                          delete \n                      </Button>\n                      {brewery.latitude && brewery.longitude ? \n                        <>\n                        <Button className ='ui yellow button'\n                          // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\n                          >\n                            <p ><Modal lat={brewery.latitude} lon={brewery.longitude} /></p>\n                        </Button>\n                        </>\n                      :\"\"}\n                    {/* )} */}\n                    </div>\n                  </Card>\n                </GridColumn>\n              );\n            })\n            : <h3></h3>\n              }\n          </Grid>\n    </section>\n  );\n\n}\n\nexport default Dashboard;",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":5,"column":16,"nodeType":"138","messageId":"139","endLine":5,"endColumn":24},{"ruleId":"136","severity":1,"message":"140","line":5,"column":26,"nodeType":"138","messageId":"139","endLine":5,"endColumn":32},{"ruleId":"136","severity":1,"message":"141","line":5,"column":34,"nodeType":"138","messageId":"139","endLine":5,"endColumn":38},{"ruleId":"132","replacedBy":"142"},{"ruleId":"134","replacedBy":"143"},{"ruleId":"136","severity":1,"message":"144","line":7,"column":9,"nodeType":"138","messageId":"139","endLine":7,"endColumn":19},{"ruleId":"136","severity":1,"message":"145","line":7,"column":21,"nodeType":"138","messageId":"139","endLine":7,"endColumn":32},{"ruleId":"136","severity":1,"message":"146","line":8,"column":10,"nodeType":"138","messageId":"139","endLine":8,"endColumn":24},{"ruleId":"136","severity":1,"message":"147","line":11,"column":10,"nodeType":"138","messageId":"139","endLine":11,"endColumn":13},{"ruleId":"136","severity":1,"message":"148","line":11,"column":15,"nodeType":"138","messageId":"139","endLine":11,"endColumn":18},{"ruleId":"136","severity":1,"message":"149","line":27,"column":27,"nodeType":"138","messageId":"139","endLine":27,"endColumn":45},{"ruleId":"136","severity":1,"message":"150","line":33,"column":19,"nodeType":"138","messageId":"139","endLine":33,"endColumn":30},{"ruleId":"136","severity":1,"message":"151","line":33,"column":39,"nodeType":"138","messageId":"139","endLine":33,"endColumn":48},{"ruleId":"136","severity":1,"message":"152","line":36,"column":19,"nodeType":"138","messageId":"139","endLine":36,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":57,"column":6,"nodeType":"155","endLine":57,"endColumn":21,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"157","line":66,"column":6,"nodeType":"155","endLine":66,"endColumn":21,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":106,"column":51,"nodeType":"161","messageId":"162","endLine":106,"endColumn":53},{"ruleId":"136","severity":1,"message":"163","line":117,"column":15,"nodeType":"138","messageId":"139","endLine":117,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":174,"column":7,"nodeType":"166","messageId":"167","endLine":196,"endColumn":8},{"ruleId":"136","severity":1,"message":"168","line":219,"column":15,"nodeType":"138","messageId":"139","endLine":219,"endColumn":25},{"ruleId":"159","severity":1,"message":"169","line":219,"column":55,"nodeType":"161","messageId":"162","endLine":219,"endColumn":57},{"ruleId":"136","severity":1,"message":"170","line":1,"column":8,"nodeType":"138","messageId":"139","endLine":1,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":120,"column":35,"nodeType":"161","messageId":"162","endLine":120,"endColumn":37},{"ruleId":"136","severity":1,"message":"140","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":85,"column":81,"nodeType":"173","messageId":"174","endLine":85,"endColumn":82},{"ruleId":"136","severity":1,"message":"175","line":2,"column":9,"nodeType":"138","messageId":"139","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"176","line":2,"column":53,"nodeType":"138","messageId":"139","endLine":2,"endColumn":57},{"ruleId":"136","severity":1,"message":"177","line":10,"column":10,"nodeType":"138","messageId":"139","endLine":10,"endColumn":13},{"ruleId":"136","severity":1,"message":"178","line":15,"column":12,"nodeType":"138","messageId":"139","endLine":15,"endColumn":16},{"ruleId":"136","severity":1,"message":"179","line":15,"column":18,"nodeType":"138","messageId":"139","endLine":15,"endColumn":25},{"ruleId":"136","severity":1,"message":"150","line":20,"column":21,"nodeType":"138","messageId":"139","endLine":20,"endColumn":32},{"ruleId":"136","severity":1,"message":"151","line":20,"column":41,"nodeType":"138","messageId":"139","endLine":20,"endColumn":50},{"ruleId":"136","severity":1,"message":"180","line":23,"column":18,"nodeType":"138","messageId":"139","endLine":23,"endColumn":25},{"ruleId":"136","severity":1,"message":"152","line":27,"column":21,"nodeType":"138","messageId":"139","endLine":27,"endColumn":26},{"ruleId":"136","severity":1,"message":"181","line":27,"column":28,"nodeType":"138","messageId":"139","endLine":27,"endColumn":32},{"ruleId":"136","severity":1,"message":"182","line":31,"column":21,"nodeType":"138","messageId":"139","endLine":31,"endColumn":31},{"ruleId":"136","severity":1,"message":"183","line":31,"column":40,"nodeType":"138","messageId":"139","endLine":31,"endColumn":51},{"ruleId":"153","severity":1,"message":"184","line":53,"column":10,"nodeType":"155","endLine":53,"endColumn":38,"suggestions":"185"},{"ruleId":"136","severity":1,"message":"186","line":56,"column":11,"nodeType":"138","messageId":"139","endLine":56,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":173,"column":15,"nodeType":"189","endLine":173,"endColumn":19},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'TextArea' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Grid' is defined but never used.",["190"],["191"],"'directions' is defined but never used.","'saveBrewery' is defined but never used.","'saveBreweryIds' is defined but never used.","'add' is defined but never used.","'xor' is defined but never used.","'setSavedBreweryIds' is assigned a value but never used.","'userLoading' is assigned a value but never used.","'userError' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allData'. Either include it or remove the dependency array.","ArrayExpression",["192"],"React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.",["193"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'saveToDB' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'filterData' is assigned a value but never used.","Array.prototype.filter() expects a return value from arrow function.","'PopUpDirections' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Form' is defined but never used.","'Menu' is defined but never used.","'set' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'allData' is assigned a value but never used.","'data' is assigned a value but never used.","'deleteLoad' is assigned a value but never used.","'deleteError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'savedBreweries'. Either include it or remove the dependency array. You can also do a functional update 'setSavedBreweries(s => ...)' if you only need 'savedBreweries' in the 'setSavedBreweries' call.",["194"],"'displayBreweries' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [allData, data, loading]",{"range":"201","text":"202"},"Update the dependencies array to be: [data, loading, userData]",{"range":"203","text":"204"},"Update the dependencies array to be: [deleteThisBrewery, loading, savedBreweries]",{"range":"205","text":"206"},[2372,2387],"[allData, data, loading]",[2607,2622],"[data, loading, userData]",[1947,1975],"[deleteThisBrewery, loading, savedBreweries]"]