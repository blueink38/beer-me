<<<<<<< HEAD
[{"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\index.js":"1","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\App.js":"2","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Signup.js":"3","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Home.js":"4","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Dashboard.js":"5","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Login.js":"6","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Header\\index.js":"7","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Blip\\index.js":"8","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\mutations.js":"9","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\auth.js":"10","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Hero\\index.js":"11","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\helpers.js":"12","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\queries.js":"13","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\SearchBreweries\\index.js":"14","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\ContactUs\\index.js":"15","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Footer\\index.js":"16","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Modal\\index.js":"17","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\API.js":"18","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\localStorage.js":"19"},{"size":342,"mtime":1623032265708,"results":"20","hashOfConfig":"21"},{"size":1361,"mtime":1623032265685,"results":"22","hashOfConfig":"21"},{"size":3468,"mtime":1623032265738,"results":"23","hashOfConfig":"21"},{"size":580,"mtime":1623032265711,"results":"24","hashOfConfig":"21"},{"size":5885,"mtime":1623032394073,"results":"25","hashOfConfig":"21"},{"size":2286,"mtime":1623032265712,"results":"26","hashOfConfig":"21"},{"size":2722,"mtime":1622995073110,"results":"27","hashOfConfig":"21"},{"size":589,"mtime":1623032265686,"results":"28","hashOfConfig":"21"},{"size":2052,"mtime":1622870800844,"results":"29","hashOfConfig":"21"},{"size":1572,"mtime":1622583401149,"results":"30","hashOfConfig":"21"},{"size":462,"mtime":1622751186989,"results":"31","hashOfConfig":"21"},{"size":2381,"mtime":1623032265747,"results":"32","hashOfConfig":"21"},{"size":1730,"mtime":1622995073127,"results":"33","hashOfConfig":"21"},{"size":15280,"mtime":1623032265961,"results":"34","hashOfConfig":"21"},{"size":1929,"mtime":1623032265688,"results":"35","hashOfConfig":"21"},{"size":1255,"mtime":1622751186986,"results":"36","hashOfConfig":"21"},{"size":3132,"mtime":1623037758400,"results":"37","hashOfConfig":"21"},{"size":5449,"mtime":1623037989886,"results":"38","hashOfConfig":"21"},{"size":916,"mtime":1622725231345,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ey5bv0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\index.js",[],["84","85"],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\App.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Signup.js",["86","87","88"],"import React, { useState } from \"react\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport Auth from \"../utils/auth\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\nimport { Form, TextArea, Button, Grid } from 'semantic-ui-react'\r\n\r\n\r\n// class FormCaptureValues extends Component {\r\n//   state = { userName: '', email: '', password: '', submittedUserName: '', submittedEmail: '', submittedPassword: ''}\r\n\r\n//   handleChange = (e, { name, value }) => this.setState({ [name]: value })\r\n\r\n//   handleSubmit = () => {\r\n//     const { userName, email, password } = this.state\r\n\r\n//     this.setState({ \r\n//       submittedUserName: userName, userName: \"\", \r\n//       submittedEmail: email, email: \"\",\r\n//       submittedPassword: password, password: \"\" })\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Signup() {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email, password: formState.password,\r\n        username: formState.username\r\n      }\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n    // render() {\r\n    // const { userName, email, password, submittedUserName, submittedEmail, submittedPassword } = this.state\r\n\r\n  return (\r\n    <section style={{height: '100vh'}} id='loginsignuppage'>\r\n    <div className=\"loginsignupcontainers my-1\">\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <h1 style={{color:'#ebba34'}}>Sign Up</h1>\r\n      <br></br>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <Form.Group>\r\n        {/* <Form.Input\r\n                width={8}\r\n                placeholder='User Name'\r\n                name='userName'\r\n                value={userName}\r\n                onChange={this.handleChange}\r\n                /> */}\r\n\r\n\r\n\r\n\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label style={{color:'#ebba34'}} htmlFor=\"firstName\">Username:</label>\r\n          <Form.Input\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            type=\"username\"\r\n            id=\"username\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label style={{color:'#ebba34'}} htmlFor=\"email\">Email:</label>\r\n          <Form.Input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label style={{color:'#ebba34'}} htmlFor=\"pwd\">Password:</label>\r\n          <Form.Input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <br></br>\r\n        <div className=\"flex-row flex-end\">\r\n        <button class=\"ui yellow button\">Submit</button>\r\n        </div>\r\n        </Form.Group>\r\n      </form>\r\n    </div>\r\n    </section>\r\n  );\r\n\r\n\r\n    // </Grid.Column>\r\n    // </Grid>\r\n\r\n\r\n\r\n\r\n  // );\r\n}\r\n// }\r\n\r\n\r\n\r\nexport default Signup;\r\n","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Home.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Dashboard.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import React, { useState, useEffect } from \"react\";\r\nimport {Form, Button, Card, List, Grid, GridColumn, Menu} from 'semantic-ui-react'\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport Auth from \"../utils/auth\";\r\nimport { formatPhone, idbPromise } from '../utils/helpers'\r\nimport Modal from '../components/Modal'\r\nimport {QUERY_ME, QUERY_ALL_BREWERIES, QUERY_BREWERY, QUERY_BREWERY_BY_ID} from '../utils/queries'\r\nimport {REMOVE_BREWERY_FROM_USER} from '../utils/mutations'\r\n\r\nimport { set } from \"lodash\";\r\n\r\n\r\nfunction Dashboard() {\r\n    const[deleteBrewery] = useMutation(REMOVE_BREWERY_FROM_USER)\r\n    const [user, setUser] = useState('');\r\n    const [savedBreweries, setSavedBreweries] = useState([]);\r\n    const [savedBreweryIds, setSavedBreweryIds] = useState('1');\r\n    const[deleteThisBrewery, setDeleteBrewery] = useState('')\r\n    const userID = Auth.getProfile().data._id;\r\n    const {loading: userLoading, error: userError, data: userData} = useQuery(QUERY_ME, {\r\n        variables:{ id: userID}\r\n      })\r\n    const { data:allData} = useQuery(QUERY_ALL_BREWERIES, {\r\n\r\n        pollInterval: 500,\r\n    });\r\n    const {loading, error, data} = useQuery(QUERY_BREWERY, {\r\n        variables:{ name: deleteThisBrewery}\r\n      })\r\n    console.log(allData)\r\n    console.log(userData)\r\n\r\n    useEffect(() => {\r\n      if(userData) {\r\n        userData.me.breweries.forEach((brewery) => {\r\n          console.log(brewery)\r\n          idbPromise('saved-brewery', 'put', brewery);\r\n        });\r\n      } \r\n    }, [data, loading]);\r\n  \r\n    const displayBreweries = async (event) => {\r\n        event.preventDefault()\r\n        if(userData.me.breweries){\r\n            const savedBreweries = userData.me.breweries;\r\n            console.log(savedBreweries)\r\n            setSavedBreweries(savedBreweries)\r\n        }\r\n    }\r\n\r\n    const handleDeleteBrewery = async (e,breweryId) => {\r\n\r\n        if(breweryId.length){\r\n            console.log(breweryId)\r\n            const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n            if (!token) {\r\n              return false;\r\n            }\r\n          try{\r\n            const userId = Auth.getProfile().data._id\r\n            const response = await deleteBrewery(\r\n                { \r\n                  variables:{\r\n                    brewId: breweryId,\r\n                    id: userId\r\n                  }\r\n                }\r\n            );\r\n            displayBreweries(e)\r\n            console.log(response)\r\n            if (!response.ok) {\r\n              throw new Error('something went wrong!');\r\n            }\r\n          }catch (err) {\r\n            console.error(err);\r\n          }\r\n        }\r\n      };\r\n    // displayBreweries()\r\n  return (\r\n    <section style={{height: '100vh'}} id='savedbrewpage'>\r\n      <div className=\"dashboard\">\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <h1 style={{color:'#ebba34', textAlign:'center'}}>Your Saved Breweries</h1>\r\n        <br></br>\r\n        <div \r\n          className=\"columns main-col drinkbutton\"\r\n          style={{ margin: \"0 auto 40px auto\"}}\r\n        >\r\n          <Button \r\n            \r\n            id='user-brewery' \r\n            type='submit'\r\n            onClick={(e) => displayBreweries(e)} \r\n            style={{textAlign: \"center\"}}\r\n            className=\"ui huge yellow button centered\">\r\n            SHOW ME MY SAVED BREWS\r\n          </Button>\r\n        </div>\r\n      </div>\r\n        <Grid centered doubling stackable columns={3} >\r\n            {savedBreweries.length \r\n            ? \r\n            savedBreweries.map((brewery) => {\r\n              return (\r\n                <GridColumn centered=\"true\">  \r\n                  <Card centered key={brewery.breweryId}>\r\n                    <h2 style={{textAlign:'center', color:'#ebba34'}}>{brewery.name}</h2>\r\n                    <List>\r\n                      <List.Item className='beercard-output'><strong>Type:  </strong> {brewery.breweryType}</List.Item>\r\n                      {brewery.street ? \r\n                        <List.Item className='beercard-output'><strong> Street:  </strong>{brewery.street}</List.Item>\r\n                      :\"\"}\r\n                      <List.Item className='beercard-output'><strong> City:  </strong>{brewery.city}</List.Item>\r\n                      <List.Item className='beercard-output'><strong> State:  </strong>{brewery.state}</List.Item>\r\n                      {brewery.phone ? \r\n                        <List.Item className='beercard-output'><strong> Phone Number:  </strong> {formatPhone(brewery.phone)}</List.Item>\r\n                      : \"\"}\r\n                      {brewery.websiteUrl ? \r\n                        <List.Item className='beercard-output'><strong> Website:  </strong> <a style={{color:'#2432d1'}} href={brewery.websiteUrl} target='_blank'  rel=\"noreferrer\" >{brewery.websiteUrl}</a></List.Item>\r\n                      : \"\"}\r\n                      <br></br>\r\n                    </List>\r\n                    {/* {Auth.loggedIn() && ( */}    \r\n                    <div className='ui large buttons'>\r\n                      <Button className ='ui yellow button' style={{color:'#f2f0f0'}}\r\n                      //   disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                        onClick={() =>{\r\n                        handleDeleteBrewery(brewery._id)\r\n                        // saveToUser(brewery)\r\n                        }}>\r\n                        {/* {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId) */}\r\n                          delete \r\n                      </Button>\r\n                      </div>\r\n                  {/* )} */}\r\n                </Card>\r\n              </GridColumn>\r\n            );\r\n          })\r\n          : <h3></h3>\r\n            }\r\n        </Grid>\r\n    </section>\r\n  );\r\n\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Login.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Header\\index.js",["104"],"import React, { Component } from 'react'\r\nimport { Button, Segment, Menu } from 'semantic-ui-react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Auth from \"../../utils/auth\"\r\n\r\n\r\nexport default class MenuExampleInvertedSecondary extends Component {\r\n    state = { activeItem: 'home' }\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Segment id=\"home\" inverted>\r\n\r\n      <Menu id=\"home\" inverted fixed=\"top\" size='huge' >\r\n        {activeItem === \"login\" || activeItem === \"signup\" ? \r\n        <Menu.Menu>\r\n           <Link to=\"/\"><Menu.Item \r\n              name='home'\r\n              background='yellow'\r\n              onClick={this.handleItemClick}\r\n            /></Link>\r\n        </Menu.Menu>\r\n        :\r\n        <Menu.Menu>\r\n          <Menu.Item \r\n              href=\"/\"\r\n              name='home'\r\n              color='yellow'\r\n              active={activeItem === 'home'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n            <Menu.Item\r\n              href=\"/#about\"\r\n              name='breweries'\r\n              color='yellow'\r\n              active={activeItem === 'breweries'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n            <Menu.Item\r\n              href=\"/#contact-us\"\r\n              name='contact us'\r\n              color='yellow'\r\n              active={activeItem === 'contact us'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n          </Menu.Menu>\r\n        }\r\n        {!Auth.loggedIn() ? \r\n          <Menu.Menu position='right'>\r\n            <Menu.Item\r\n              name=\"login\"\r\n              active={activeItem === 'login'}\r\n              onClick={this.handleItemClick}\r\n            >\r\n              <Link to=\"/login\">Login</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              name=\"signup\"\r\n              active={activeItem === 'signup'}\r\n              onClick={this.handleItemClick}\r\n            >\r\n            <Link to=\"/signup\">Sign Up</Link>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        : \r\n          <Menu.Menu position='right'>\r\n            <Menu.Item\r\n              name=\"dashboard\"\r\n              active={activeItem === 'dashboard'}\r\n              onClick={this.handleItemClick}\r\n            >\r\n              <Link to=\"/dashboard\">Dashboard</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              name=\"logout\"\r\n              active={activeItem === 'home'}\r\n              onClick={() => Auth.logout()}\r\n            >\r\n              <Link to=\"/\">Logout</Link>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        }\r\n      </Menu>\r\n      </Segment>\r\n\r\n    )\r\n  }\r\n}","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Blip\\index.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\auth.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Hero\\index.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\helpers.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\queries.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\SearchBreweries\\index.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"import React, { useState, useEffect} from 'react';\r\nimport Modal from '../Modal/index'\r\n// import _ from 'lodash'\r\nimport {Form, Button, Card, List, Grid, GridColumn, Menu} from 'semantic-ui-react'\r\nimport {useMutation, useQuery} from '@apollo/react-hooks'\r\nimport Auth from '../../utils/auth'\r\nimport {directions, saveBrewery, searchByCity, searchByState, searchByTerm, searchNearUser} from '../../utils/API'\r\nimport { saveBreweryIds, getSavedBreweryIds } from '../../utils/localStorage'\r\nimport {ADD_BREWERY_TO_DB, SAVE_BREWERY_TO_USER} from '../../utils/mutations'\r\nimport {QUERY_ALL_BREWERIES, QUERY_BREWERY, QUERY_ME} from '../../utils/queries'\r\nimport { add, xor } from 'lodash';\r\nimport { formatPhone , idbPromise} from '../../utils/helpers';\r\n\r\nlet pageNum = 1;\r\n\r\nconst SearchBreweries = () => {\r\n//  searchNearUser()\r\n  const[addBrewery] = useMutation(ADD_BREWERY_TO_DB);\r\n  const[saveBrewery] = useMutation(SAVE_BREWERY_TO_USER)\r\n  // create state for holding returned openBrewery api data\r\n  const [searchedBreweries, setSearchedBrewery] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n  // create state for holding our search field data\r\n  const [searchType, setSearchType] = useState('');\r\n  // create state to hold saved BreweryId values\r\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\r\n  //holds the last used search input\r\n  const [lastSearched, setLastSearched] = useState('')\r\n  const[savedBrewery, setSavedBrewery] = useState('')\r\n\r\n  const {loading: userLoading, error: userError, data: userData} = useQuery(QUERY_ME, {\r\n    variables:{ id: Auth.getProfile().data._id}\r\n  })\r\n  const {loading, error, data} = useQuery(QUERY_BREWERY, {\r\n    variables:{ name: savedBrewery}\r\n  })\r\n  const { data:allData} = useQuery(QUERY_ALL_BREWERIES, {\r\n\r\n    pollInterval: 500,\r\n  });\r\n  // console.log(Auth.loggedIn())\r\n\r\n  useEffect(() => {\r\n    if(allData) {\r\n      allData.breweries.forEach((brewery) => {\r\n        idbPromise('searched-brewery', 'put', brewery);\r\n      });\r\n      // add else if to check if `loading` is undefined in `useQuery()` Hook\r\n    } else if (!loading) {\r\n      // since we're offline, get all of the data from the `brewery` store\r\n      idbPromise('searched-brewery', 'get').then((brewery) => {\r\n       setSearchedBrewery(brewery)\r\n      });\r\n    }\r\n  }, [data, loading]);\r\n\r\n  useEffect(() => {\r\n    if(userData) {\r\n      userData.me.breweries.forEach((brewery) => {\r\n        console.log(brewery)\r\n        idbPromise('saved-brewery', 'put', brewery);\r\n      });\r\n    } \r\n  }, [data, loading]);\r\n\r\n  \r\n  const options = [\r\n    { key: 'city', text: 'City', value: 'city' },\r\n    { key: 'state', text: 'State', value: 'state' },\r\n    { key: 'keyword', text: 'Keyword', value: 'keyword' },\r\n  ]\r\n\r\n  const handleUserLoc = async (event) => {\r\n    event.preventDefault();\r\n\r\n    setSearchInput('')\r\n    setLastSearched('')\r\n    try {\r\n      const response = await searchNearUser(pageNum);\r\n     \r\n      console.log(response)\r\n      if(response.length){\r\n        \r\n          const breweryData = response.map((brewery) => (\r\n            {\r\n            breweryID: brewery.id,\r\n            name: brewery.name,\r\n            breweryType: brewery.brewery_type,\r\n            street: brewery.street || \"\",\r\n            address2: brewery.address_2,\r\n            address3: brewery.address_3,\r\n            city: brewery.city,\r\n            state: brewery.state,\r\n            countyProvince: brewery.county_province,\r\n            postalCode: brewery.postal_code,\r\n            country: brewery.country,\r\n            longitude: brewery.longitude,\r\n            latitude: brewery.latitude,\r\n            phone: brewery.phone || \"\",\r\n            websiteUrl: brewery.website_url || \"\"\r\n          }));\r\n          const filterData = []\r\n          console.log(searchedBreweries)\r\n          console.log(allData)\r\n          if(searchedBreweries){\r\n              searchedBreweries.map(brewery => {\r\n              \r\n                console.log(brewery)\r\n                const index = breweryData.indexOf(brewery)\r\n                console.log(index)\r\n                // if (index > -1) {\r\n                //   savedBreweries.splice(index, 1);\r\n                // }\r\n            })\r\n          }\r\n          \r\n        console.log(breweryData)\r\n        console.log(filterData)\r\n        const saveToDB = response.map((brewery) => \r\n         addBrewery(\r\n           {\r\n             variables:\r\n              {\r\n                breweryID: brewery.id,\r\n                name: brewery.name,\r\n                breweryType: brewery.brewery_type,\r\n                street: brewery.street || \"\",\r\n                address2: brewery.address_2,\r\n                address3: brewery.address_3,\r\n                city: brewery.city,\r\n                state: brewery.state,\r\n                countyProvince: brewery.county_province,\r\n                postalCode: brewery.postal_code,\r\n                country: brewery.country,\r\n                longitude: brewery.longitude,\r\n                latitude: brewery.latitude,\r\n                phone: brewery.phone || \"\",\r\n                websiteUrl: brewery.website_url || \"\"\r\n              }\r\n             \r\n           }\r\n        \r\n         ));\r\n        console.log(breweryData)\r\n        setSearchedBrewery(breweryData);\r\n      } else {\r\n        setSearchedBrewery([])\r\n      }\r\n      \r\n      setSearchInput('');\r\n      // console.log('YES')\r\n      }\r\n      catch (err) {\r\n        console.error(err.graphQLErrors);\r\n      }\r\n\r\n  }\r\n  // create method to search for Breweries and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n\r\n    if (!searchInput && !lastSearched) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      if(searchInput.length){\r\n        if(searchInput !== lastSearched) {\r\n          pageNum = 1\r\n        }\r\n        setLastSearched(searchInput)\r\n      }\r\n\r\n      let response ;\r\n      switch(searchType){\r\n        case 'city':\r\n          if(searchInput){\r\n            response = await searchByCity(searchInput, pageNum);\r\n          } else if (lastSearched) {\r\n            response = await searchByCity(lastSearched, pageNum);\r\n          } \r\n          break;\r\n        case 'state':\r\n          if(searchInput){\r\n            response = await searchByState(searchInput, pageNum);\r\n          } else if (lastSearched) {\r\n            response = await searchByState(lastSearched, pageNum);\r\n          }\r\n          break;\r\n        case 'keyword':\r\n          if(searchInput){\r\n            response = await searchByTerm(searchInput, pageNum);\r\n          } else if (lastSearched) {\r\n            response = await searchByTerm(lastSearched, pageNum);\r\n          }\r\n          break;\r\n      }\r\n      \r\n      if(response.length){\r\n        const breweryData = response.map((brewery) => (\r\n          {\r\n          breweryID: brewery.id,\r\n          name: brewery.name,\r\n          breweryType: brewery.brewery_type,\r\n          street: brewery.street || \"\",\r\n          address2: brewery.address_2,\r\n          address3: brewery.address_3,\r\n          city: brewery.city,\r\n          state: brewery.state,\r\n          countyProvince: brewery.county_province,\r\n          postalCode: brewery.postal_code,\r\n          country: brewery.country,\r\n          longitude: brewery.longitude,\r\n          latitude: brewery.latitude,\r\n          phone: brewery.phone || \"\",\r\n          websiteUrl: brewery.website_url || \"\"\r\n        }));\r\n        setSearchedBrewery(breweryData);\r\n\r\n        const filterData = breweryData.filter(brewery => {\r\n              console.log(brewery.name)\r\n        })\r\n\r\n      } else {\r\n        setSearchedBrewery([])\r\n      }\r\n      \r\n      setSearchInput('');\r\n      }\r\n      catch (err) {\r\n        console.error(err);\r\n      }\r\n    } \r\n\r\n\r\n  // create function to handle saving a Brewery to our database\r\n  const handleSaveBrewery = async (brewery) => {\r\n\r\n    if(brewery.length){\r\n\r\n      try{\r\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n        const brewId = data.brewery._id;\r\n        console.log(brewId)\r\n        if (!token) {\r\n          return false;\r\n        }\r\n        const userID = Auth.getProfile().data._id;\r\n\r\n        const response = await saveBrewery(\r\n            { \r\n              variables:{\r\n                brewId: brewId,\r\n                id: userID\r\n              }\r\n            }\r\n        );\r\n        console.log(response)\r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n      }catch (err) {\r\n        console.error(err);\r\n      }\r\n  \r\n\r\n    }\r\n  };\r\n\r\n  const handlePageChange =  async (e,name) => {\r\n    if (name === \"next\") {\r\n      //setPageNumber(pageNumber + 1)\r\n      pageNum++\r\n      if(!searchInput && !lastSearched){\r\n        handleUserLoc(e)\r\n      } else {\r\n        handleFormSubmit(e)\r\n      }\r\n    } else {\r\n      //setPageNumber(pageNumber - 1)\r\n      pageNum--\r\n      if(!searchInput && !lastSearched){\r\n        handleUserLoc(e)\r\n      } else {\r\n        handleFormSubmit(e)\r\n      }\r\n    }\r\n  }\r\n  \r\n  if(savedBrewery.length){\r\n    handleSaveBrewery(savedBrewery)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <section  id=\"about\">\r\n      <div className=\"columns main-col drinkbutton\"> \r\n        </div>\r\n          <Form onSubmit={handleFormSubmit} id='submit'>\r\n            <Grid centered doubling stackable columns={3}>\r\n              <Grid.Column>          \r\n                <div class=\"ui segment contactform inverted\" >\r\n                  <h1 style={{textAlign: \"center\", color: '#ebba34'}}>Find Your Brewery</h1>\r\n                  <br></br>\r\n                  <Form.Group>\r\n                    <Form.Input\r\n                      width={8}\r\n                      name='searchInput'\r\n                      value={searchInput}\r\n                      onChange={(e) => setSearchInput(e.target.value)}\r\n                      placeholder='Search for a Brewery'\r\n                    />\r\n                  <Form.Select\r\n                    fluid\r\n                    options={options}\r\n                    width={8}\r\n                    // required={true}\r\n                    placeholder='Search for breweries by...'\r\n                    onChange={(e, { value }) => setSearchType(value)}\r\n                    />\r\n                  </Form.Group>\r\n                  <br></br>\r\n                <div className=\"columns main-col drinkbutton\">\r\n                  <Button \r\n                    // centered\r\n                    id='city' \r\n                    type='submit'\r\n                    // onClick={handleFormSubmit} \r\n                   \r\n                    className=\"ui huge yellow button\">\r\n                    GET DRINKING!!\r\n                  </Button>\r\n               </div>\r\n               <br></br>\r\n               <div className=\"columns main-col drinkbutton\">\r\n                  <Button \r\n                    // centered\r\n                    id='city' \r\n                    onClick={(e) => handleUserLoc(e)} \r\n                    className=\"ui huge yellow button\">\r\n                    FIND NEAREST BREWERY\r\n                  </Button>\r\n\r\n                </div>\r\n              </div>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Form>      \r\n\r\n        <h2>\r\n          {searchedBreweries.length\r\n            ? `Viewing results ${1 + (20 * (pageNum -1))} - ${searchedBreweries.length + (20 * (pageNum - 1))}:`\r\n            : ''}\r\n        </h2>\r\n        <Grid centered doubling stackable columns={3} >\r\n          {searchedBreweries.length \r\n          ? \r\n          searchedBreweries.map((brewery) => {\r\n            return (\r\n              <GridColumn centered=\"true\">  \r\n              <Card centered key={brewery.breweryId}>\r\n                <h2 style={{textAlign:'center', color:'#ebba34'}}>{brewery.name}</h2>\r\n                <List>\r\n                  <List.Item className='beercard-output'><strong>Type:  </strong> {brewery.breweryType}</List.Item>\r\n                  {brewery.street ? \r\n                    <List.Item className='beercard-output'><strong> Street:  </strong>{brewery.street}</List.Item>\r\n                  :\"\"}\r\n                  <List.Item className='beercard-output'><strong> City:  </strong>{brewery.city}</List.Item>\r\n                  <List.Item className='beercard-output'><strong> State:  </strong>{brewery.state}</List.Item>\r\n                  {brewery.phone ? \r\n                    <List.Item className='beercard-output'><strong> Phone Number:  </strong> {formatPhone(brewery.phone)}</List.Item>\r\n                  : \"\"}\r\n                  {brewery.websiteUrl ? \r\n                    <List.Item className='beercard-output'><strong> Website:  </strong> <a style={{color:'#2432d1'}} href={brewery.websiteUrl} target='_blank'  rel=\"noreferrer\" >{brewery.websiteUrl}</a></List.Item>\r\n                  : \"\"}\r\n               <br></br>\r\n                </List>\r\n                  {/* {Auth.loggedIn() && ( */}\r\n                    \r\n                  <div className='ui large buttons'>\r\n                    <Button className ='ui yellow button' style={{color:'#f2f0f0'}}\r\n                      // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                      onClick={() =>{\r\n                      setSavedBrewery(brewery.name)\r\n\r\n                      // saveToUser(brewery)\r\n                      }}>\r\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\r\n                        ? 'This Brewery has already been saved!'\r\n                        : 'save brewery'}\r\n                    </Button>\r\n                    {brewery.latitude && brewery.longitude ? \r\n                      <>\r\n                       \r\n                       <Button className ='ui yellow button'\r\n                         // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                        >\r\n                          <p ><Modal lat={brewery.latitude} lon={brewery.longitude} /></p>\r\n                       </Button>\r\n                       </>\r\n                    :\"\"}\r\n                   \r\n                  {/* )} */}\r\n                  </div>\r\n                  </Card>\r\n              \r\n            </GridColumn>\r\n            );\r\n          })\r\n          : \"\"}\r\n          {!searchedBreweries.length && pageNum > 1 ?\r\n          \"No more breweries to display\"\r\n          :\r\n          \"\"}\r\n        </Grid>\r\n        <Menu inverted >\r\n          {pageNum > 1 ? \r\n            <Menu.Item\r\n              name=\"prev\"\r\n              onClick={(e, { name }) => handlePageChange(e,name)}\r\n            >\r\n              <Button color=\"yellow\">\r\n                <p>Previous Page</p>\r\n              </Button>\r\n            </Menu.Item>\r\n          : \"\"}\r\n          {searchedBreweries.length ? \r\n            <Menu.Menu position=\"right\">\r\n              <Menu.Item\r\n                name=\"next\"\r\n                onClick={(e, { name }) => handlePageChange(e,name)}\r\n              >\r\n                <Button color=\"yellow\">\r\n                  <p>Next Page</p>\r\n                </Button>\r\n              </Menu.Item>\r\n            </Menu.Menu>\r\n          : \"\"}\r\n        </Menu>       \r\n        </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBreweries;\r\n","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\ContactUs\\index.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Modal\\index.js",["121"],"import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { directions } from '../../utils/API'\r\nimport { List, Grid } from 'semantic-ui-react'\r\n\r\n\r\nfunction PopUpDirections(props) {\r\n  const [modalIsOpen, setModalIsOpen] = React.useState(false)\r\n  const [completeDirections, setCompleteDirections] = useState([])\r\n  const [localSearch, setLocalSearch] = useState(false)\r\n  const getDirections = () =>{\r\n    const completedDirections = directions(props.lat, props.lon)\r\n    setCompleteDirections(completedDirections)\r\n    console.log(completeDirections)\r\n  }\r\n    if(modalIsOpen){ \r\n        return (\r\n            <>\r\n                <Modal \r\n                    isOpen={modalIsOpen} \r\n                    onRequestClose={() => setModalIsOpen(false)}\r\n                    appElement={document.getElementById('root') || undefined}\r\n                    contentLabel=\"Inline Styles Modal Example\"\r\n                    style={{\r\n                      overlay: {\r\n                        backgroundColor:'',\r\n                        height:'95%',\r\n                        width:'50%',\r\n                        opacity:'100%',\r\n                        marginTop:'100px',\r\n                        marginLeft:'25%'\r\n                      },\r\n                      content: {\r\n                        backgroundColor:'#ccccc8',\r\n                        color: 'black',\r\n                        scroll: 'none',\r\n                        height:'85%',\r\n                        margin:'0'\r\n                        }\r\n                      }}\r\n                >\r\n                <Grid centered columns={4}>\r\n                    <Grid.Column>\r\n                        <List>\r\n\r\n                        {modalIsOpen ?\r\n                            <button  \r\n                            onClick={() => setLocalSearch(true)}\r\n                            className=\"ui large yellow button\">\r\n                            Directions from current location \r\n                            </button> \r\n                            \r\n                        : \"\"}\r\n                        {localSearch ? \r\n                            Array.from(completeDirections).map((stop) => {\r\n                                return(\r\n                                    <List.Item key={stop} >\r\n                                        <strong>{stop}</strong>\r\n                                    </List.Item> \r\n                                ) \r\n                            })\r\n                        : \"\"}\r\n                        \r\n\r\n                        </List>\r\n                        <br></br>\r\n                            <button \r\n                            onClick={() => setModalIsOpen(false)}\r\n                            className=\"ui large yellow button\">\r\n                            Close Window\r\n                            </button>\r\n                    </Grid.Column>\r\n                </Grid>\r\n\r\n            </Modal>\r\n        </>\r\n          )\r\n    } else {\r\n        return(<p style={{color:'#ffffff'}} onClick={() => (setModalIsOpen(true), getDirections())}>get directions</p>)\r\n    }\r\n}\r\n\r\nexport default PopUpDirections\r\n","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\API.js",["122","123"],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\localStorage.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":5,"column":16,"nodeType":"130","messageId":"131","endLine":5,"endColumn":24},{"ruleId":"128","severity":1,"message":"132","line":5,"column":26,"nodeType":"130","messageId":"131","endLine":5,"endColumn":32},{"ruleId":"128","severity":1,"message":"133","line":5,"column":34,"nodeType":"130","messageId":"131","endLine":5,"endColumn":38},{"ruleId":"128","severity":1,"message":"134","line":2,"column":9,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"135","line":2,"column":53,"nodeType":"130","messageId":"131","endLine":2,"endColumn":57},{"ruleId":"128","severity":1,"message":"136","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":13},{"ruleId":"128","severity":1,"message":"137","line":7,"column":55,"nodeType":"130","messageId":"131","endLine":7,"endColumn":74},{"ruleId":"128","severity":1,"message":"138","line":10,"column":10,"nodeType":"130","messageId":"131","endLine":10,"endColumn":13},{"ruleId":"128","severity":1,"message":"139","line":15,"column":12,"nodeType":"130","messageId":"131","endLine":15,"endColumn":16},{"ruleId":"128","severity":1,"message":"140","line":15,"column":18,"nodeType":"130","messageId":"131","endLine":15,"endColumn":25},{"ruleId":"128","severity":1,"message":"141","line":17,"column":12,"nodeType":"130","messageId":"131","endLine":17,"endColumn":27},{"ruleId":"128","severity":1,"message":"142","line":17,"column":29,"nodeType":"130","messageId":"131","endLine":17,"endColumn":47},{"ruleId":"128","severity":1,"message":"143","line":18,"column":30,"nodeType":"130","messageId":"131","endLine":18,"endColumn":46},{"ruleId":"128","severity":1,"message":"144","line":20,"column":21,"nodeType":"130","messageId":"131","endLine":20,"endColumn":32},{"ruleId":"128","severity":1,"message":"145","line":20,"column":41,"nodeType":"130","messageId":"131","endLine":20,"endColumn":50},{"ruleId":"128","severity":1,"message":"146","line":27,"column":21,"nodeType":"130","messageId":"131","endLine":27,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":40,"column":8,"nodeType":"149","endLine":40,"endColumn":23,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":144,"column":13,"nodeType":"153","endLine":144,"endColumn":17},{"ruleId":"128","severity":1,"message":"132","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":16},{"ruleId":"128","severity":1,"message":"154","line":7,"column":9,"nodeType":"130","messageId":"131","endLine":7,"endColumn":19},{"ruleId":"128","severity":1,"message":"155","line":7,"column":21,"nodeType":"130","messageId":"131","endLine":7,"endColumn":32},{"ruleId":"128","severity":1,"message":"156","line":8,"column":10,"nodeType":"130","messageId":"131","endLine":8,"endColumn":24},{"ruleId":"128","severity":1,"message":"157","line":11,"column":10,"nodeType":"130","messageId":"131","endLine":11,"endColumn":13},{"ruleId":"128","severity":1,"message":"158","line":11,"column":15,"nodeType":"130","messageId":"131","endLine":11,"endColumn":18},{"ruleId":"128","severity":1,"message":"142","line":27,"column":27,"nodeType":"130","messageId":"131","endLine":27,"endColumn":45},{"ruleId":"128","severity":1,"message":"144","line":32,"column":19,"nodeType":"130","messageId":"131","endLine":32,"endColumn":30},{"ruleId":"128","severity":1,"message":"145","line":32,"column":39,"nodeType":"130","messageId":"131","endLine":32,"endColumn":48},{"ruleId":"128","severity":1,"message":"146","line":35,"column":19,"nodeType":"130","messageId":"131","endLine":35,"endColumn":24},{"ruleId":"147","severity":1,"message":"159","line":56,"column":6,"nodeType":"149","endLine":56,"endColumn":21,"suggestions":"160"},{"ruleId":"147","severity":1,"message":"148","line":65,"column":6,"nodeType":"149","endLine":65,"endColumn":21,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":107,"column":45,"nodeType":"164","messageId":"165","endLine":107,"endColumn":47},{"ruleId":"128","severity":1,"message":"166","line":120,"column":15,"nodeType":"130","messageId":"131","endLine":120,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":177,"column":7,"nodeType":"169","messageId":"170","endLine":199,"endColumn":8},{"ruleId":"128","severity":1,"message":"171","line":222,"column":15,"nodeType":"130","messageId":"131","endLine":222,"endColumn":25},{"ruleId":"162","severity":1,"message":"172","line":222,"column":55,"nodeType":"164","messageId":"165","endLine":222,"endColumn":57},{"ruleId":"173","severity":1,"message":"174","line":79,"column":81,"nodeType":"175","messageId":"176","endLine":79,"endColumn":82},{"ruleId":"177","severity":1,"message":"178","line":56,"column":26,"nodeType":"179","messageId":"180","endLine":56,"endColumn":33,"fix":"181"},{"ruleId":"162","severity":1,"message":"163","line":117,"column":35,"nodeType":"164","messageId":"165","endLine":117,"endColumn":37},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'TextArea' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Grid' is defined but never used.","'Form' is defined but never used.","'Menu' is defined but never used.","'Modal' is defined but never used.","'QUERY_BREWERY_BY_ID' is defined but never used.","'set' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'savedBreweryIds' is assigned a value but never used.","'setSavedBreweryIds' is assigned a value but never used.","'setDeleteBrewery' is assigned a value but never used.","'userLoading' is assigned a value but never used.","'userError' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.","ArrayExpression",["184"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'directions' is defined but never used.","'saveBrewery' is defined but never used.","'saveBreweryIds' is defined but never used.","'add' is defined but never used.","'xor' is defined but never used.","React Hook useEffect has a missing dependency: 'allData'. Either include it or remove the dependency array.",["185"],["186"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'saveToDB' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'filterData' is assigned a value but never used.","Array.prototype.filter() expects a return value from arrow function.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"187","text":"188"},"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"189","fix":"193"},[1428,1428],"()","Update the dependencies array to be: [data, loading, userData]",{"range":"194","text":"195"},"Update the dependencies array to be: [allData, data, loading]",{"range":"196","text":"197"},{"range":"198","text":"195"},[1530,1545],"[data, loading, userData]",[2401,2416],"[allData, data, loading]",[2623,2638]]
=======
[{"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\index.js":"1","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\App.js":"2","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Home.js":"3","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Login.js":"4","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Signup.js":"5","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\FindBrewery.js":"6","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\mutations.js":"7","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\auth.js":"8","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\SearchBreweries\\index.js":"9","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\localStorage.js":"10","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\helpers.js":"11","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\API.js":"12","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Header\\index.js":"13","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Hero\\index.js":"14","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Blip\\index.js":"15","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\ContactUs\\index.js":"16","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Footer\\index.js":"17","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Modal\\index.js":"18","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\queries.js":"19","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Dashboard.js":"20"},{"size":325,"mtime":1623011020495,"results":"21","hashOfConfig":"22"},{"size":1314,"mtime":1623011020440,"results":"23","hashOfConfig":"22"},{"size":559,"mtime":1623011020507,"results":"24","hashOfConfig":"22"},{"size":2208,"mtime":1623011020513,"results":"25","hashOfConfig":"22"},{"size":3336,"mtime":1623011020520,"results":"26","hashOfConfig":"22"},{"size":564,"mtime":1622651181843,"results":"27","hashOfConfig":"22"},{"size":1971,"mtime":1622964113029,"results":"28","hashOfConfig":"22"},{"size":1518,"mtime":1622328292828,"results":"29","hashOfConfig":"22"},{"size":15037,"mtime":1623028988579,"results":"30","hashOfConfig":"22"},{"size":886,"mtime":1622964113012,"results":"31","hashOfConfig":"22"},{"size":2314,"mtime":1623011020549,"results":"32","hashOfConfig":"22"},{"size":5416,"mtime":1623011020528,"results":"33","hashOfConfig":"22"},{"size":2631,"mtime":1622964112870,"results":"34","hashOfConfig":"22"},{"size":440,"mtime":1622964112886,"results":"35","hashOfConfig":"22"},{"size":575,"mtime":1623011020449,"results":"36","hashOfConfig":"22"},{"size":1853,"mtime":1623011020459,"results":"37","hashOfConfig":"22"},{"size":1228,"mtime":1622964112866,"results":"38","hashOfConfig":"22"},{"size":3067,"mtime":1623011020479,"results":"39","hashOfConfig":"22"},{"size":1870,"mtime":1623027755806,"results":"40","hashOfConfig":"22"},{"size":7006,"mtime":1623035803486,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"dkynqg",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\index.js",[],["89","90"],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\App.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Home.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Login.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Signup.js",["91","92","93"],"import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport { Form, TextArea, Button, Grid } from 'semantic-ui-react'\n\n\n// class FormCaptureValues extends Component {\n//   state = { userName: '', email: '', password: '', submittedUserName: '', submittedEmail: '', submittedPassword: ''}\n\n//   handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n//   handleSubmit = () => {\n//     const { userName, email, password } = this.state\n\n//     this.setState({ \n//       submittedUserName: userName, userName: \"\", \n//       submittedEmail: email, email: \"\",\n//       submittedPassword: password, password: \"\" })\n//   }\n// }\n\n\n\n\n\n\n\n\nfunction Signup() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        username: formState.username\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n    // render() {\n    // const { userName, email, password, submittedUserName, submittedEmail, submittedPassword } = this.state\n\n  return (\n    <section style={{height: '100vh'}} id='loginsignuppage'>\n    <div className=\"loginsignupcontainers my-1\">\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <h1 style={{color:'#ebba34'}}>Sign Up</h1>\n      <br></br>\n      <form onSubmit={handleFormSubmit}>\n        <Form.Group>\n        {/* <Form.Input\n                width={8}\n                placeholder='User Name'\n                name='userName'\n                value={userName}\n                onChange={this.handleChange}\n                /> */}\n\n\n\n\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"firstName\">Username:</label>\n          <Form.Input\n            placeholder=\"Username\"\n            name=\"username\"\n            type=\"username\"\n            id=\"username\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"email\">Email:</label>\n          <Form.Input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"pwd\">Password:</label>\n          <Form.Input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <br></br>\n        <div className=\"flex-row flex-end\">\n        <button class=\"ui yellow button\">Submit</button>\n        </div>\n        </Form.Group>\n      </form>\n    </div>\n    </section>\n  );\n\n\n    // </Grid.Column>\n    // </Grid>\n\n\n\n\n  // );\n}\n// }\n\n\n\nexport default Signup;\n","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\FindBrewery.js",[],["94","95"],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\mutations.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\auth.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\SearchBreweries\\index.js",["96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"import React, { useState, useEffect} from 'react';\nimport Modal from '../Modal/index'\n// import _ from 'lodash'\nimport {Form, Button, Card, List, Grid, GridColumn, Menu} from 'semantic-ui-react'\nimport {useMutation, useQuery} from '@apollo/react-hooks'\nimport Auth from '../../utils/auth'\nimport {directions, saveBrewery, searchByCity, searchByState, searchByTerm, searchNearUser} from '../../utils/API'\nimport { saveBreweryIds, getSavedBreweryIds } from '../../utils/localStorage'\nimport {ADD_BREWERY_TO_DB, SAVE_BREWERY_TO_USER} from '../../utils/mutations'\nimport {QUERY_ALL_BREWERIES, QUERY_BREWERY, QUERY_ME, QUERY_BREWERIES_NO_ID} from '../../utils/queries'\nimport { add, xor } from 'lodash';\nimport { formatPhone , idbPromise} from '../../utils/helpers';\n\nlet pageNum = 1;\n\nconst SearchBreweries = () => {\n//  searchNearUser()\n  const[addBrewery] = useMutation(ADD_BREWERY_TO_DB);\n  const[saveBrewery] = useMutation(SAVE_BREWERY_TO_USER)\n  // create state for holding returned openBrewery api data\n  const [searchedBreweries, setSearchedBrewery] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n  // create state for holding our search field data\n  const [searchType, setSearchType] = useState('');\n  // create state to hold saved BreweryId values\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\n  //holds the last used search input\n  const [lastSearched, setLastSearched] = useState('')\n  const[savedBrewery, setSavedBrewery] = useState('')\n\n  const {loading: userLoading, error: userError, data: userData} = useQuery(QUERY_ME, {\n    variables:{ id: Auth.getProfile().data._id}\n  })\n  const {loading, error, data} = useQuery(QUERY_BREWERY, {\n    variables:{ name: savedBrewery}\n  })\n  const { data:allData} = useQuery(QUERY_ALL_BREWERIES, {\n\n    pollInterval: 500,\n  });\n\n  const { data: noIDBreweries} = useQuery(QUERY_BREWERIES_NO_ID, {\n\n    pollInterval: 500,\n  });\n  // console.log(Auth.loggedIn())\n\n  useEffect(() => {\n    if(allData) {\n      allData.breweries.forEach((brewery) => {\n        idbPromise('searched-brewery', 'put', brewery);\n      });\n      // add else if to check if `loading` is undefined in `useQuery()` Hook\n    } else if (!loading) {\n      // since we're offline, get all of the data from the `brewery` store\n      idbPromise('searched-brewery', 'get').then((brewery) => {\n       setSearchedBrewery(brewery)\n      });\n    }\n  }, [data, loading]);\n\n  useEffect(() => {\n    if(userData) {\n      userData.me.breweries.forEach((brewery) => {\n        console.log(brewery)\n        idbPromise('saved-brewery', 'put', brewery);\n      });\n    } \n  }, [data, loading]);\n\n  \n  const options = [\n    { key: 'city', text: 'City', value: 'city' },\n    { key: 'state', text: 'State', value: 'state' },\n    { key: 'keyword', text: 'Keyword', value: 'keyword' },\n  ]\n\n  const handleUserLoc = async (event) => {\n    event.preventDefault();\n\n    setSearchInput('')\n    setLastSearched('')\n    try {\n      const response = await searchNearUser(pageNum);\n     \n      console.log(response)\n      if(response.length){\n        \n          const breweryData = response.map((brewery) => (\n            {\n            breweryID: brewery.id,\n            name: brewery.name,\n            breweryType: brewery.brewery_type,\n            street: brewery.street || \"\",\n            address2: brewery.address_2,\n            address3: brewery.address_3,\n            city: brewery.city,\n            state: brewery.state,\n            countyProvince: brewery.county_province,\n            postalCode: brewery.postal_code,\n            country: brewery.country,\n            longitude: brewery.longitude,\n            latitude: brewery.latitude,\n            phone: brewery.phone || \"\",\n            websiteUrl: brewery.website_url || \"\"\n          }));\n          const filterData = []\n          console.log(searchedBreweries)\n          console.log(noIDBreweries.breweries)\n          console.log(breweryData)\n\n          setSearchedBrewery(breweryData);\n          \n          if(searchedBreweries){\n              noIDBreweries.breweries.map(brewery => {\n              \n                console.log(brewery)\n                const index = searchedBreweries.indexOf(brewery)\n                console.log(index)\n                // if (index > -1) {\n                //   savedBreweries.splice(index, 1);\n                // }\n            })\n          }\n          \n        console.log(breweryData)\n        console.log(filterData)\n        const saveToDB = response.map((brewery) => \n         addBrewery(\n           {\n             variables:\n              {\n                breweryID: brewery.id,\n                name: brewery.name,\n                breweryType: brewery.brewery_type,\n                street: brewery.street || \"\",\n                address2: brewery.address_2,\n                address3: brewery.address_3,\n                city: brewery.city,\n                state: brewery.state,\n                countyProvince: brewery.county_province,\n                postalCode: brewery.postal_code,\n                country: brewery.country,\n                longitude: brewery.longitude,\n                latitude: brewery.latitude,\n                phone: brewery.phone || \"\",\n                websiteUrl: brewery.website_url || \"\"\n              }\n             \n           }\n        \n         ));\n        console.log(breweryData)\n        \n      } else {\n        setSearchedBrewery([])\n      }\n      \n      setSearchInput('');\n      // console.log('YES')\n      }\n      catch (err) {\n        console.error(err.graphQLErrors);\n      }\n\n  }\n  // create method to search for Breweries and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n\n    if (!searchInput && !lastSearched) {\n      return false;\n    }\n\n    try {\n      if(searchInput.length){\n        if(searchInput !== lastSearched) {\n          pageNum = 1\n        }\n        setLastSearched(searchInput)\n      }\n\n      let response ;\n      switch(searchType){\n        case 'city':\n          if(searchInput){\n            response = await searchByCity(searchInput, pageNum);\n          } else if (lastSearched) {\n            response = await searchByCity(lastSearched, pageNum);\n          } \n          break;\n        case 'state':\n          if(searchInput){\n            response = await searchByState(searchInput, pageNum);\n          } else if (lastSearched) {\n            response = await searchByState(lastSearched, pageNum);\n          }\n          break;\n        case 'keyword':\n          if(searchInput){\n            response = await searchByTerm(searchInput, pageNum);\n          } else if (lastSearched) {\n            response = await searchByTerm(lastSearched, pageNum);\n          }\n          break;\n      }\n      \n      if(response.length){\n        const breweryData = response.map((brewery) => (\n          {\n          breweryID: brewery.id,\n          name: brewery.name,\n          breweryType: brewery.brewery_type,\n          street: brewery.street || \"\",\n          address2: brewery.address_2,\n          address3: brewery.address_3,\n          city: brewery.city,\n          state: brewery.state,\n          countyProvince: brewery.county_province,\n          postalCode: brewery.postal_code,\n          country: brewery.country,\n          longitude: brewery.longitude,\n          latitude: brewery.latitude,\n          phone: brewery.phone || \"\",\n          websiteUrl: brewery.website_url || \"\"\n        }));\n        setSearchedBrewery(breweryData);\n\n        const filterData = breweryData.filter(brewery => {\n              console.log(brewery.name)\n        })\n\n      } else {\n        setSearchedBrewery([])\n      }\n      \n      setSearchInput('');\n      }\n      catch (err) {\n        console.error(err);\n      }\n    } \n\n\n  // create function to handle saving a Brewery to our database\n  const handleSaveBrewery = async (brewery) => {\n\n    if(brewery.length){\n\n      try{\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n        const brewId = data.brewery._id;\n        console.log(brewId)\n        if (!token) {\n          return false;\n        }\n        const userID = Auth.getProfile().data._id;\n\n        const response = await saveBrewery(\n            { \n              variables:{\n                brewId: brewId,\n                id: userID\n              }\n            }\n        );\n        console.log(response)\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n      }catch (err) {\n        console.error(err);\n      }\n  \n\n    }\n  };\n\n  const handlePageChange =  async (e,name) => {\n    if (name === \"next\") {\n      //setPageNumber(pageNumber + 1)\n      pageNum++\n      if(!searchInput && !lastSearched){\n        handleUserLoc(e)\n      } else {\n        handleFormSubmit(e)\n      }\n    } else {\n      //setPageNumber(pageNumber - 1)\n      pageNum--\n      if(!searchInput && !lastSearched){\n        handleUserLoc(e)\n      } else {\n        handleFormSubmit(e)\n      }\n    }\n  }\n  if(savedBrewery.length){\n    handleSaveBrewery(savedBrewery)\n  }\n  \n  return (\n    <>\n    <section  id=\"about\">\n      <div className=\"columns main-col drinkbutton\"> \n        </div>\n          <Form onSubmit={handleFormSubmit} id='submit'>\n            <Grid centered doubling stackable columns={3}>\n              <Grid.Column>          \n                <div class=\"ui segment contactform inverted\" >\n                  <h1 style={{textAlign: \"center\", color: '#ebba34'}}>Find Your Brewery</h1>\n                  <br></br>\n                  <Form.Group>\n                    <Form.Input\n                      width={8}\n                      name='searchInput'\n                      value={searchInput}\n                      onChange={(e) => setSearchInput(e.target.value)}\n                      placeholder='Search for a Brewery'\n                    />\n                  <Form.Select\n                    fluid\n                    options={options}\n                    width={8}\n                    // required={true}\n                    placeholder='Search for breweries by...'\n                    onChange={(e, { value }) => setSearchType(value)}\n                    />\n                  </Form.Group>\n                  <br></br>\n                <div className=\"columns main-col drinkbutton\">\n                  <Button \n                    // centered\n                    id='city' \n                    type='submit'\n                    // onClick={handleFormSubmit} \n                   \n                    className=\"ui huge yellow button\">\n                    GET DRINKING!!\n                  </Button>\n               </div>\n               <br></br>\n               <div className=\"columns main-col drinkbutton\">\n                  <Button \n                    // centered\n                    id='city' \n                    onClick={(e) => handleUserLoc(e)} \n                    className=\"ui huge yellow button\">\n                    FIND NEAREST BREWERY\n                  </Button>\n\n                </div>\n              </div>\n          </Grid.Column>\n        </Grid>\n      </Form>      \n\n        <h2>\n          {searchedBreweries.length\n            ? `Viewing results ${1 + (20 * (pageNum -1))} - ${searchedBreweries.length + (20 * (pageNum - 1))}:`\n            : ''}\n        </h2>\n        <Grid centered doubling stackable columns={3} >\n          {searchedBreweries.length \n          ? \n          searchedBreweries.map((brewery) => {\n            return (\n              <GridColumn centered=\"true\">  \n              <Card centered key={brewery.breweryId}>\n                <h2 style={{textAlign:'center', color:'#ebba34'}}>{brewery.name}</h2>\n                <List>\n                  <List.Item className='beercard-output'><strong>Type:  </strong> {brewery.breweryType}</List.Item>\n                  {brewery.street ? \n                    <List.Item className='beercard-output'><strong> Street:  </strong>{brewery.street}</List.Item>\n                  :\"\"}\n                  <List.Item className='beercard-output'><strong> City:  </strong>{brewery.city}</List.Item>\n                  <List.Item className='beercard-output'><strong> State:  </strong>{brewery.state}</List.Item>\n                  {brewery.phone ? \n                    <List.Item className='beercard-output'><strong> Phone Number:  </strong> {formatPhone(brewery.phone)}</List.Item>\n                  : \"\"}\n                  {brewery.websiteUrl ? \n                    <List.Item className='beercard-output'><strong> Website:  </strong> <a style={{color:'#2432d1'}} href={brewery.websiteUrl} target='_blank'  rel=\"noreferrer\" >{brewery.websiteUrl}</a></List.Item>\n                  : \"\"}\n               <br></br>\n                </List>\n                  {/* {Auth.loggedIn() && ( */}\n                    \n                  <div className='ui large buttons'>\n                    <Button className ='ui yellow button' style={{color:'#f2f0f0'}}\n                      // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\n                      onClick={() =>{\n                      setSavedBrewery(brewery.name)\n\n                      // saveToUser(brewery)\n                      }}>\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\n                        ? 'This Brewery has already been saved!'\n                        : 'save brewery'}\n                    </Button>\n                    {brewery.latitude && brewery.longitude ? \n                      <>\n                       \n                       <Button className ='ui yellow button'\n                         // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\n                        >\n                          <p ><Modal lat={brewery.latitude} lon={brewery.longitude} /></p>\n                       </Button>\n                       </>\n                    :\"\"}\n                   \n                  {/* )} */}\n                  </div>\n                  </Card>\n              \n            </GridColumn>\n            );\n          })\n          : \"\"}\n          {!searchedBreweries.length && pageNum > 1 ?\n          \"No more breweries to display\"\n          :\n          \"\"}\n        </Grid>\n        <Menu inverted >\n          {pageNum > 1 ? \n            <Menu.Item\n              name=\"prev\"\n              onClick={(e, { name }) => handlePageChange(e,name)}\n            >\n              <Button color=\"yellow\">\n                <p>Previous Page</p>\n              </Button>\n            </Menu.Item>\n          : \"\"}\n          {searchedBreweries.length ? \n            <Menu.Menu position=\"right\">\n              <Menu.Item\n                name=\"next\"\n                onClick={(e, { name }) => handlePageChange(e,name)}\n              >\n                <Button color=\"yellow\">\n                  <p>Next Page</p>\n                </Button>\n              </Menu.Item>\n            </Menu.Menu>\n          : \"\"}\n        </Menu>       \n        </section>\n    </>\n  );\n};\n\nexport default SearchBreweries;\n","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\helpers.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\API.js",["112","113"],"import PopUpDirections from \"../components/Modal\";\n// import directionsModal from \"../components/Modal\";\n\n  // route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n    return fetch('/api/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \nexport const createUser = (userData) => {\n    return fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \nexport const loginUser = (userData) => {\n    return fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \n  // save Brewery data for a logged in user\nexport const saveBrewery = (breweryData, token) => {\n    return fetch('/api/users', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(breweryData),\n    });\n  };\n  \n  // remove saved Brewery data for a logged in user\nexport const deleteBrewery = (breweryId, token) => {\n    return fetch(`/api/users/breweries/${breweryId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \nlet userIP = \"\";\nlet userLat = 0;\nlet userLon = 0;\nlet completeDirections = [];\nlet breweriesNearMe =[];\n\n \n  \n \n  // make a search to open brew api\nexport  const searchByCity = (query, page) => {\n    return fetch(`https://api.openbrewerydb.org/breweries?by_city=${query}&page=${page}`)\n        .then(response => response.json())\n        .then(data => {\n          //console.log(data)\n             return data.filter( x => query.toLowerCase() === x.city.toLowerCase())\n        })\n     }; \n\nexport  const searchByState = (query, page) => {\n    return fetch(`https://api.openbrewerydb.org/breweries?by_state=${query}&page=${page}`)\n        .then(response => response.json())\n        .then(data => {\n          // console.log(data)\n\n           return data\n\n      })\n}; \n\nexport  const searchByTerm = (query, page) => {\n  return fetch(`https://api.openbrewerydb.org/breweries/search?query=${query}&page=${page}`)\n      .then(response => response.json())\n      .then(data => {\n        // console.log(data)\n\n         return data\n\n    })\n}; \n\nexport  const searchNearUser = (page) => {\n  fetch(\"https://api.ipify.org/?format=json\").then(function(response) {\n    if(response.ok){\n        response.json().then(function(data){\n           userIP = data.ip \n\n            //uses ip address to get physical location data\n            return fetch(\"https://ipapi.co/\" + userIP + \"/json\")\n        }).then(function(response){\n          console.log(response)\n            if(response.ok){\n                response.json().then( function(data){\n                    //save location data for future use\n                    userLat = data.latitude;\n                    userLon = data.longitude;\n                    // console.log(userLat, userLon);\n                    fetch(`https://api.openbrewerydb.org/breweries?by_dist=${userLat},${userLon}&page=${page}`)\n                    .then(response => response.json())\n                    .then(data => {\n                      // console.log(data)\n                      if(breweriesNearMe.length){\n                        breweriesNearMe= []\n                      }\n                      data.map( x => {\n                        breweriesNearMe.push(x)\n                      })\n                      // console.log(breweriesNearMe)\n                  })\n                  });\n              }\n          });\n      }\n  })\n  // console.log(breweriesNearMe)\n  return breweriesNearMe\n}; \nsearchNearUser()\n \nexport function directions(latitude, longitude) {\n  const lat = parseFloat(latitude);\n  const lon = parseFloat(longitude);\n  completeDirections = []\n  fetch(\"https://api.ipify.org/?format=json\").then(function(response) {\n    if(response.ok){\n      response.json().then(function(data){\n          userIP = data.ip \n          //uses ip address to get physical location data\n          return fetch(\"https://ipapi.co/\" + userIP + \"/json\")\n      }).then(function(response){\n        if(response.ok){\n          response.json().then(function(data){\n            //save location data for future use\n            userLat = data.latitude;\n            userLon = data.longitude;\n            fetch(\"https://api.tomtom.com/routing/1/calculateRoute/\" + userLat + \"%2C\" + userLon + \"%3A\" + lat + \"%2C\" + lon + \"/json?instructionsType=text&traffic=true&avoid=unpavedRoads&travelMode=car&vehicleCommercial=false&key=2qYjtOeeuEawxxQE7KUtVZQFywO4pRvN\").then(function(response){\n              if(response.ok){\n                response.json().then(function(data){\n                  let instructions=data.routes[0].guidance.instructions;                                             \n                  for (let i = 0; i < instructions.length; i++) {\n                    let stop = instructions[i].message;\n                    completeDirections.push(stop);\n                  };\n                });\n              }\n              else {\n                console.log(\"wooooooooow\")\n              }\n            });\n          });\n        }\n      });\n    } \n  })  \n  return completeDirections \n};\n\nexport default completeDirections;\n","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Header\\index.js",["114"],"import React, { Component } from 'react'\nimport { Button, Segment, Menu } from 'semantic-ui-react'\nimport { Link } from \"react-router-dom\"\nimport Auth from \"../../utils/auth\"\n\n\nexport default class MenuExampleInvertedSecondary extends Component {\n    state = { activeItem: 'home' }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Segment id=\"home\" inverted>\n\n      <Menu id=\"home\" inverted fixed=\"top\" size='huge' >\n        {activeItem === \"login\" || activeItem === \"signup\" ? \n        <Menu.Menu>\n           <Link to=\"/\"><Menu.Item \n              name='home'\n              background='yellow'\n              onClick={this.handleItemClick}\n            /></Link>\n        </Menu.Menu>\n        :\n        <Menu.Menu>\n          <Menu.Item \n              href=\"/\"\n              name='home'\n              color='yellow'\n              active={activeItem === 'home'}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              href=\"/#about\"\n              name='breweries'\n              color='yellow'\n              active={activeItem === 'breweries'}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              href=\"/#contact-us\"\n              name='contact us'\n              color='yellow'\n              active={activeItem === 'contact us'}\n              onClick={this.handleItemClick}\n            />\n          </Menu.Menu>\n        }\n        {!Auth.loggedIn() ? \n          <Menu.Menu position='right'>\n            <Menu.Item\n              name=\"login\"\n              active={activeItem === 'login'}\n              onClick={this.handleItemClick}\n            >\n              <Link to=\"/login\">Login</Link>\n            </Menu.Item>\n            <Menu.Item\n              name=\"signup\"\n              active={activeItem === 'signup'}\n              onClick={this.handleItemClick}\n            >\n            <Link to=\"/signup\">Sign Up</Link>\n            </Menu.Item>\n          </Menu.Menu>\n        : \n          <Menu.Menu position='right'>\n            <Menu.Item\n              name=\"dashboard\"\n              active={activeItem === 'dashboard'}\n              onClick={this.handleItemClick}\n            >\n              <Link to=\"/dashboard\">Dashboard</Link>\n            </Menu.Item>\n            <Menu.Item\n              name=\"logout\"\n              active={activeItem === 'home'}\n              onClick={() => Auth.logout()}\n            >\n              <Link to=\"/\">Logout</Link>\n            </Menu.Item>\n          </Menu.Menu>\n        }\n      </Menu>\n      </Segment>\n\n    )\n  }\n}","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Hero\\index.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Blip\\index.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\ContactUs\\index.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Modal\\index.js",["115"],"import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { directions } from '../../utils/API'\nimport { List, Grid } from 'semantic-ui-react'\n\n\nfunction PopUpDirections(props) {\n  const [modalIsOpen, setModalIsOpen] = React.useState(false)\n  const [completeDirections, setCompleteDirections] = useState([])\n  const [localSearch, setLocalSearch] = useState(false)\n  const getDirections = () =>{\n      \n    \n    const completedDirections = directions(props.lat, props.lon)\n    setCompleteDirections(completedDirections)\n    console.log(completeDirections)\n\n  }\n    if(modalIsOpen){ \n        return (\n\n            <div>\n                <Modal \n                    isOpen={modalIsOpen} \n                    onRequestClose={() => setModalIsOpen(false)}\n                    appElement={document.getElementById('root') || undefined}\n                    contentLabel=\"Inline Styles Modal Example\"\n                    style={{\n                      overlay: {\n                        backgroundColor:'',\n                        height:'95%',\n                        width:'50%',\n                        opacity:'100%',\n                        marginTop:'100px',\n                        marginLeft:'25%'\n                      },\n                      content: {\n                        backgroundColor:'#ccccc8',\n                        color: 'black',\n                        scroll: 'none',\n                        height:'85%',\n                        margin:'0'\n                        }\n                      }}\n                >\n                <Grid centered columns={4}>\n                    <Grid.Column>\n                        <List>\n\n                        {modalIsOpen ?\n                            <button  \n                            onClick={() => setLocalSearch(true)}\n                            className=\"ui large yellow button\">\n                            Directions from current location \n                            </button> \n                            \n                        : \"\"}\n                        {localSearch ? \n                            completeDirections.map((stop) => {\n                                return(\n                                    <List.Item key={stop} >\n                                        <strong>{stop}</strong>\n                                    </List.Item> \n                                ) \n                            })\n                        : \"\"}\n                        \n\n                        </List>\n                        <br></br>\n                            <button \n                            onClick={() => setModalIsOpen(false)}\n                            className=\"ui large yellow button\">\n                            Close Window\n                            </button>\n                    </Grid.Column>\n                </Grid>\n\n                </Modal>\n\n            </div>\n\n          )\n    } else {\n        return(<p style={{color:'#ffffff'}} onClick={() => (setModalIsOpen(true), getDirections())}>get directions</p>)\n    }\n}\n\nexport default PopUpDirections\n","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\queries.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Dashboard.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":5,"column":16,"nodeType":"138","messageId":"139","endLine":5,"endColumn":24},{"ruleId":"136","severity":1,"message":"140","line":5,"column":26,"nodeType":"138","messageId":"139","endLine":5,"endColumn":32},{"ruleId":"136","severity":1,"message":"141","line":5,"column":34,"nodeType":"138","messageId":"139","endLine":5,"endColumn":38},{"ruleId":"132","replacedBy":"142"},{"ruleId":"134","replacedBy":"143"},{"ruleId":"136","severity":1,"message":"144","line":7,"column":9,"nodeType":"138","messageId":"139","endLine":7,"endColumn":19},{"ruleId":"136","severity":1,"message":"145","line":7,"column":21,"nodeType":"138","messageId":"139","endLine":7,"endColumn":32},{"ruleId":"136","severity":1,"message":"146","line":8,"column":10,"nodeType":"138","messageId":"139","endLine":8,"endColumn":24},{"ruleId":"136","severity":1,"message":"147","line":11,"column":10,"nodeType":"138","messageId":"139","endLine":11,"endColumn":13},{"ruleId":"136","severity":1,"message":"148","line":11,"column":15,"nodeType":"138","messageId":"139","endLine":11,"endColumn":18},{"ruleId":"136","severity":1,"message":"149","line":27,"column":27,"nodeType":"138","messageId":"139","endLine":27,"endColumn":45},{"ruleId":"136","severity":1,"message":"150","line":32,"column":19,"nodeType":"138","messageId":"139","endLine":32,"endColumn":30},{"ruleId":"136","severity":1,"message":"151","line":32,"column":39,"nodeType":"138","messageId":"139","endLine":32,"endColumn":48},{"ruleId":"136","severity":1,"message":"152","line":35,"column":19,"nodeType":"138","messageId":"139","endLine":35,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":61,"column":6,"nodeType":"155","endLine":61,"endColumn":21,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"157","line":70,"column":6,"nodeType":"155","endLine":70,"endColumn":21,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":116,"column":51,"nodeType":"161","messageId":"162","endLine":116,"endColumn":53},{"ruleId":"136","severity":1,"message":"163","line":129,"column":15,"nodeType":"138","messageId":"139","endLine":129,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":186,"column":7,"nodeType":"166","messageId":"167","endLine":208,"endColumn":8},{"ruleId":"136","severity":1,"message":"168","line":231,"column":15,"nodeType":"138","messageId":"139","endLine":231,"endColumn":25},{"ruleId":"159","severity":1,"message":"169","line":231,"column":55,"nodeType":"161","messageId":"162","endLine":231,"endColumn":57},{"ruleId":"136","severity":1,"message":"170","line":1,"column":8,"nodeType":"138","messageId":"139","endLine":1,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":120,"column":35,"nodeType":"161","messageId":"162","endLine":120,"endColumn":37},{"ruleId":"136","severity":1,"message":"140","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":85,"column":81,"nodeType":"173","messageId":"174","endLine":85,"endColumn":82},{"ruleId":"136","severity":1,"message":"175","line":2,"column":9,"nodeType":"138","messageId":"139","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"176","line":2,"column":53,"nodeType":"138","messageId":"139","endLine":2,"endColumn":57},{"ruleId":"136","severity":1,"message":"177","line":10,"column":10,"nodeType":"138","messageId":"139","endLine":10,"endColumn":13},{"ruleId":"136","severity":1,"message":"178","line":15,"column":12,"nodeType":"138","messageId":"139","endLine":15,"endColumn":16},{"ruleId":"136","severity":1,"message":"179","line":15,"column":18,"nodeType":"138","messageId":"139","endLine":15,"endColumn":25},{"ruleId":"136","severity":1,"message":"180","line":18,"column":12,"nodeType":"138","messageId":"139","endLine":18,"endColumn":27},{"ruleId":"136","severity":1,"message":"149","line":18,"column":29,"nodeType":"138","messageId":"139","endLine":18,"endColumn":47},{"ruleId":"136","severity":1,"message":"150","line":21,"column":21,"nodeType":"138","messageId":"139","endLine":21,"endColumn":32},{"ruleId":"136","severity":1,"message":"151","line":21,"column":41,"nodeType":"138","messageId":"139","endLine":21,"endColumn":50},{"ruleId":"136","severity":1,"message":"181","line":24,"column":18,"nodeType":"138","messageId":"139","endLine":24,"endColumn":25},{"ruleId":"136","severity":1,"message":"152","line":28,"column":21,"nodeType":"138","messageId":"139","endLine":28,"endColumn":26},{"ruleId":"136","severity":1,"message":"182","line":28,"column":28,"nodeType":"138","messageId":"139","endLine":28,"endColumn":32},{"ruleId":"136","severity":1,"message":"183","line":31,"column":23,"nodeType":"138","messageId":"139","endLine":31,"endColumn":33},{"ruleId":"136","severity":1,"message":"184","line":31,"column":42,"nodeType":"138","messageId":"139","endLine":31,"endColumn":53},{"ruleId":"136","severity":1,"message":"185","line":31,"column":61,"nodeType":"138","messageId":"139","endLine":31,"endColumn":71},{"ruleId":"153","severity":1,"message":"186","line":54,"column":10,"nodeType":"155","endLine":54,"endColumn":38,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'TextArea' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Grid' is defined but never used.",["188"],["189"],"'directions' is defined but never used.","'saveBrewery' is defined but never used.","'saveBreweryIds' is defined but never used.","'add' is defined but never used.","'xor' is defined but never used.","'setSavedBreweryIds' is assigned a value but never used.","'userLoading' is assigned a value but never used.","'userError' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allData'. Either include it or remove the dependency array.","ArrayExpression",["190"],"React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.",["191"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'saveToDB' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'filterData' is assigned a value but never used.","Array.prototype.filter() expects a return value from arrow function.","'PopUpDirections' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Form' is defined but never used.","'Menu' is defined but never used.","'set' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'savedBreweryIds' is assigned a value but never used.","'allData' is assigned a value but never used.","'data' is assigned a value but never used.","'deleteLoad' is assigned a value but never used.","'deleteError' is assigned a value but never used.","'deleteData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'savedBreweries'. Either include it or remove the dependency array. You can also do a functional update 'setSavedBreweries(s => ...)' if you only need 'savedBreweries' in the 'setSavedBreweries' call.",["192"],"no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [allData, data, loading]",{"range":"199","text":"200"},"Update the dependencies array to be: [data, loading, userData]",{"range":"201","text":"202"},"Update the dependencies array to be: [deleteThisBrewery, loading, savedBreweries]",{"range":"203","text":"204"},[2467,2482],"[allData, data, loading]",[2680,2695],"[data, loading, userData]",[2054,2082],"[deleteThisBrewery, loading, savedBreweries]"]
>>>>>>> 6cc371f6385d29e239de7f3237e41b23ad30a945
