[{"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\index.js":"1","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\App.js":"2","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Login.js":"3","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Header.js":"4","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Signup.js":"5","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Home.js":"6","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Blip.js":"7","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Hero.js":"8","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Footer.js":"9","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\ContactUs.js":"10","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\mutations.js":"11","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\auth.js":"12","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\FindBrewery.js":"13","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\SearchBreweries\\index.js":"14","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\localStorage.js":"15","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\API.js":"16"},{"size":224,"mtime":1622583400826,"results":"17","hashOfConfig":"18"},{"size":1194,"mtime":1622604568219,"results":"19","hashOfConfig":"18"},{"size":1984,"mtime":1622604568228,"results":"20","hashOfConfig":"18"},{"size":2569,"mtime":1622606771786,"results":"21","hashOfConfig":"18"},{"size":2149,"mtime":1622604568229,"results":"22","hashOfConfig":"18"},{"size":493,"mtime":1622604568226,"results":"23","hashOfConfig":"18"},{"size":561,"mtime":1622583400807,"results":"24","hashOfConfig":"18"},{"size":462,"mtime":1622583400818,"results":"25","hashOfConfig":"18"},{"size":1219,"mtime":1622583400816,"results":"26","hashOfConfig":"18"},{"size":2646,"mtime":1622604568221,"results":"27","hashOfConfig":"18"},{"size":2006,"mtime":1622588228638,"results":"28","hashOfConfig":"18"},{"size":1572,"mtime":1622583401149,"results":"29","hashOfConfig":"18"},{"size":585,"mtime":1622653855212,"results":"30","hashOfConfig":"18"},{"size":7142,"mtime":1622661988496,"results":"31","hashOfConfig":"18"},{"size":962,"mtime":1622583401150,"results":"32","hashOfConfig":"18"},{"size":5708,"mtime":1622659380985,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ey5bv0",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\index.js",[],["72","73"],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\App.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Login.js",["74"],"import React, { useState } from \"react\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Link } from \"react-router-dom\";\r\nimport { LOGIN } from \"../utils/mutations\"\r\nimport Auth from \"../utils/auth\";\r\n\r\nfunction Login() {\r\n  const [formState, setFormState] = useState({ email: '', password: '' })\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <br></br>\r\n      <br></br>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {\r\n          error ? <div>\r\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\r\n          </div> : null\r\n        }\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Login;","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Header.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Signup.js",["75"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport Auth from \"../utils/auth\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\n\r\nfunction Signup() {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email, password: formState.password,\r\n        username: formState.username\r\n      }\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <br></br>\r\n      <br></br>\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">Username:</label>\r\n          <input\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            type=\"username\"\r\n            id=\"username\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\pages\\Home.js",["76"],"import React, { useState } from \"react\";\r\nimport FindBrewery from '../components/FindBrewery';\r\nimport Blip from '../components/Blip';\r\nimport Hero from '../components/Hero';\r\nimport ContactUs from '../components/ContactUs';\r\nimport Footer from '../components/Footer';\r\n\r\nconst Home = () => {\r\n    return (\r\n      <div className=\"App\">\r\n        <Hero/>\r\n        <Blip/>\r\n        <FindBrewery/>   \r\n        <ContactUs/>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Home;","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Blip.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Hero.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\Footer.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\ContactUs.js",["77","78","79","80"],"import React, { Component } from 'react'\r\nimport { Form, TextArea, Button, Grid } from 'semantic-ui-react'\r\n\r\nclass FormCaptureValues extends Component {\r\n  state = { firstName: '', lastName: '', email: '', message: '', submittedFirstName: '', submittedLastName: '', submittedEmail: '', submittedMessage: '' }\r\n\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\r\n\r\n  handleSubmit = () => {\r\n    const { firstName, lastName, email, message } = this.state\r\n\r\n    this.setState({ \r\n      submittedFirstName: firstName, firstName: \"\", \r\n      submittedLastName: lastName, lastName: \"\",\r\n      submittedEmail: email, email: \"\",\r\n      submittedMessage: message, message: \"\" })\r\n  }\r\n\r\n  render() {\r\n    const { firstName, lastName, email, message, submittedFirstName, submittedLastName, submittedEmail, submittedMessage } = this.state\r\n\r\n  return (\r\n    <Grid id='contact-us' centered columns={2}>\r\n      <Grid.Column>\r\n        <div class=\"ui segment contactform inverted\" >\r\n          <h2 style={{textAlign: \"center\", color: '#ebba34'}}>Ask Us Anything</h2>\r\n          <br></br>\r\n          <Form onSubmit={this.handleSubmit} >\r\n            <Form.Group >\r\n              <Form.Input\r\n                width={8}\r\n                placeholder='First name'\r\n                name='firstName'\r\n                value={firstName}\r\n                onChange={this.handleChange}\r\n                />\r\n              <Form.Input\r\n                width={8}\r\n                placeholder='Last Name'\r\n                name='lastName'\r\n                value={lastName}\r\n                onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Input\r\n                width={16}\r\n                placeholder='Email'\r\n                name='email'\r\n                value={email}\r\n                onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Input\r\n                width={16}\r\n                placeholder='Message'\r\n                control={TextArea}\r\n                name='message'\r\n                value={message}\r\n                onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n            <Form.Button\r\n              content='Submit'\r\n              color='yellow'\r\n              control={Button}\r\n              style={{textAlign: \"center\"}}\r\n              className=''\r\n               />\r\n            </Form.Group>      \r\n          </Form>        \r\n        </div>\r\n      </Grid.Column>\r\n    </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FormCaptureValues","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\auth.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\FindBrewery.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\components\\SearchBreweries\\index.js",["81","82"],"import React, { useState, useEffect} from 'react';\r\n// import _ from 'lodash'\r\nimport {Form, Button, Card, List, Grid, GridColumn} from 'semantic-ui-react'\r\nimport {useMutation} from '@apollo/react-hooks'\r\nimport Auth from '../../utils/auth'\r\nimport {saveBrewery, searchByCity, searchByState, searchByTerm, searchNearUser, directions } from '../../utils/API'\r\nimport { saveBreweryIds, getSavedBreweryIds } from '../../utils/localStorage'\r\nimport {ADD_BREWERY_TO_DB, SAVE_BREWERY_TO_USER} from '../../utils/mutations'\r\n\r\nconst SearchBreweries = () => {\r\n\r\n  const[addBrewery] = useMutation(ADD_BREWERY_TO_DB);\r\n  const[saveBrewery] = useMutation(SAVE_BREWERY_TO_USER)\r\n  // create state for holding returned openBrewery api data\r\n  const [searchedBreweries, setSearchedBrewery] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n  // create state for holding our search field data\r\n  const [searchType, setSearchType] = useState('');\r\n  // create state to hold saved BreweryId values\r\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\r\n  \r\n  // set up useEffect hook to save `savedBreweryIds` list to localStorage on component unmount\r\n  useEffect(() => {\r\n    return () => saveBreweryIds(savedBreweryIds);\r\n  });\r\n  \r\n  const options = [\r\n    { key: 'city', text: 'City', value: 'city' },\r\n    { key: 'state', text: 'State', value: 'state' },\r\n    { key: 'keyword', text: 'Keyword', value: 'keyword' },\r\n  ]\r\n  // create method to search for Breweries and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      console.log(searchType)\r\n\r\n      let response ;\r\n      switch(searchType){\r\n        case 'city':\r\n          response = await searchByCity(searchInput);\r\n          break;\r\n        case 'state':\r\n          response = await searchByState(searchInput);\r\n          break;\r\n        case 'keyword':\r\n          response = await searchByTerm(searchInput);\r\n          break;\r\n        default:\r\n          response = await searchNearUser();  \r\n      }\r\n\r\n      const breweryData = response.map((brewery) => ({\r\n        breweryId: brewery.id,\r\n        name: brewery.name,\r\n        breweryType: brewery.brewery_type,\r\n        street: brewery.street || ['No street to display'],\r\n        address2: brewery.address_2,\r\n        address3: brewery.address_3,\r\n        city: brewery.city,\r\n        state: brewery.state,\r\n        countyProvince: brewery.county_province,\r\n        postalCode: brewery.postal_code,\r\n        country: brewery.country,\r\n        longitude: brewery.longitude,\r\n        latitude: brewery.latitude,\r\n        phone: brewery.phone || \"\",\r\n        websiteUrl: brewery.website_url || \"\"\r\n      }));\r\n\r\n\r\n      setSearchedBrewery(breweryData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // create function to handle saving a Brewery to our database\r\n  const handleSaveBrewery = async (breweryId) => {\r\n    // find the Brewery in `searchedBreweries` state by the matching id\r\n    const breweryToSave = searchedBreweries.find((brewery) => brewery.breweryId === breweryId);\r\n     console.log(breweryToSave)\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await saveBrewery(breweryToSave, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      // if Brewery successfully saves to user's account, save Brewery id to state\r\n      setSavedBreweryIds([...savedBreweryIds, breweryToSave.breweryId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n \r\n  \r\n \r\n  \r\n  return (\r\n    <>\r\n          <div className=\"columns main-col drinkbutton\">\r\n            <Button \r\n              id=\"aboutButton\" \r\n              onClick={handleFormSubmit} \r\n              className=\"ui huge yellow button\"\r\n              >GET DRINKING!!</Button>\r\n          </div>\r\n          <Form onSubmit={handleFormSubmit}>\r\n          \r\n\r\n              <Form.Group widths='equal'>\r\n            \r\n                  <Form.Input\r\n                    name='searchInput'\r\n                    value={searchInput}\r\n                    onChange={(e) => setSearchInput(e.target.value)}\r\n                    placeholder='Search for a Brewery'\r\n                  />\r\n                  \r\n                  <Form.Select\r\n                    fluid\r\n                    options={options}\r\n                    // required={true}\r\n                    placeholder='Search for breweries by...'\r\n                    onChange={(e, { value }) => setSearchType(value)}\r\n                  />\r\n         \r\n              </Form.Group>\r\n              <Button className=\"ui reset button\" id='city' type='submit'>Search For Beer!</Button>\r\n              \r\n          </Form>\r\n\r\n        <h2>\r\n          {searchedBreweries.length\r\n            ? `Viewing ${searchedBreweries.length} results:`\r\n            : 'Search for a Brewery to begin'}\r\n        </h2>\r\n        <Grid centered stackable columns={3} >\r\n          {searchedBreweries.map((brewery) => {\r\n            return (\r\n              <GridColumn centered>  \r\n              <Card centered key={brewery.breweryId}>\r\n                <h3 style={{textAlign:'center'}}>{brewery.name}</h3>\r\n                <List>\r\n                  <List.Item>Type: {brewery.breweryType}</List.Item>\r\n                  <List.Item>Street: {brewery.street}</List.Item>\r\n                  <List.Item>City: {brewery.city}</List.Item>\r\n                  <List.Item>State: {brewery.state}</List.Item>\r\n                  {brewery.phone.length ? <List.Item>Phone Number: {brewery.phone}</List.Item> : \"\"}\r\n                  {brewery.websiteUrl.length ? \r\n                  <List.Item>Website: <a href={brewery.websiteUrl} target='_blank'  rel=\"noreferrer\" >{brewery.websiteUrl}</a></List.Item> : \"\"}\r\n                  \r\n                </List>\r\n                  {/* {Auth.loggedIn() && ( */}\r\n                    <Button\r\n                      // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                      onClick={() => {handleSaveBrewery(brewery.breweryId) \r\n                        console.log(brewery.breweryId)}}>\r\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\r\n                        ? 'This Brewery has already been saved!'\r\n                        : 'Save this Brewery!'}\r\n                    </Button>\r\n                    <Button\r\n                      // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                      onClick={() => {directions(brewery.latitude, brewery.longitude) }}>\r\n                         <p>Directions</p>\r\n                    </Button>\r\n                  {/* )} */}\r\n              </Card>\r\n              </GridColumn>\r\n\r\n            );\r\n          })}\r\n        </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBreweries;\r\n","C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\Frank Depaolo\\Desktop\\Bootcamp\\CourseWork\\assignments\\beer-me\\client\\src\\utils\\API.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"92","line":20,"column":50,"nodeType":"89","messageId":"90","endLine":20,"endColumn":68},{"ruleId":"87","severity":1,"message":"93","line":20,"column":70,"nodeType":"89","messageId":"90","endLine":20,"endColumn":87},{"ruleId":"87","severity":1,"message":"94","line":20,"column":89,"nodeType":"89","messageId":"90","endLine":20,"endColumn":103},{"ruleId":"87","severity":1,"message":"95","line":20,"column":105,"nodeType":"89","messageId":"90","endLine":20,"endColumn":121},{"ruleId":"87","severity":1,"message":"96","line":6,"column":9,"nodeType":"89","messageId":"90","endLine":6,"endColumn":20},{"ruleId":"87","severity":1,"message":"97","line":12,"column":9,"nodeType":"89","messageId":"90","endLine":12,"endColumn":19},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'submittedFirstName' is assigned a value but never used.","'submittedLastName' is assigned a value but never used.","'submittedEmail' is assigned a value but never used.","'submittedMessage' is assigned a value but never used.","'saveBrewery' is defined but never used.","'addBrewery' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]