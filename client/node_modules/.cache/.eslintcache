[{"C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\index.js":"1","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\App.js":"2","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Signup.js":"3","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Login.js":"4","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Home.js":"5","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Header.js":"6","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Blip.js":"7","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Footer.js":"8","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Hero.js":"9","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\ContactUs.js":"10","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\auth.js":"11","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\mutations.js":"12","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\SearchBreweries\\index.js":"13","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\helpers.js":"14","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\API.js":"15","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\localStorage.js":"16"},{"size":214,"mtime":1622675606521,"results":"17","hashOfConfig":"18"},{"size":1153,"mtime":1622675606474,"results":"19","hashOfConfig":"18"},{"size":3388,"mtime":1622738713422,"results":"20","hashOfConfig":"18"},{"size":2222,"mtime":1622738320107,"results":"21","hashOfConfig":"18"},{"size":492,"mtime":1622737690469,"results":"22","hashOfConfig":"18"},{"size":2485,"mtime":1622680224099,"results":"23","hashOfConfig":"18"},{"size":547,"mtime":1622675606488,"results":"24","hashOfConfig":"18"},{"size":1192,"mtime":1622737699685,"results":"25","hashOfConfig":"18"},{"size":440,"mtime":1622675606507,"results":"26","hashOfConfig":"18"},{"size":2628,"mtime":1622737699683,"results":"27","hashOfConfig":"18"},{"size":1518,"mtime":1622675606568,"results":"28","hashOfConfig":"18"},{"size":1925,"mtime":1622675606597,"results":"29","hashOfConfig":"18"},{"size":10992,"mtime":1622737705665,"results":"30","hashOfConfig":"18"},{"size":147,"mtime":1622675606573,"results":"31","hashOfConfig":"18"},{"size":5964,"mtime":1622737705667,"results":"32","hashOfConfig":"18"},{"size":886,"mtime":1622737705668,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1an1hq0",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\index.js",[],["73","74"],"C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\App.js",[],"C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Signup.js",["75","76","77","78","79"],"import React, { useState, Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport { Form, TextArea, Button, Grid } from 'semantic-ui-react'\n\n\n// class FormCaptureValues extends Component {\n//   state = { userName: '', email: '', password: '', submittedUserName: '', submittedEmail: '', submittedPassword: ''}\n\n//   handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n//   handleSubmit = () => {\n//     const { userName, email, password } = this.state\n\n//     this.setState({ \n//       submittedUserName: userName, userName: \"\", \n//       submittedEmail: email, email: \"\",\n//       submittedPassword: password, password: \"\" })\n//   }\n// }\n\n\n\n\n\n\n\n\nfunction Signup() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        username: formState.username\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n    // render() {\n    // const { userName, email, password, submittedUserName, submittedEmail, submittedPassword } = this.state\n\n  return (\n    <section style={{height: '100vh'}} id='loginsignuppage'>\n    <div className=\"loginsignupcontainers my-1\">\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <h1 style={{color:'#ebba34'}}>Sign Up</h1>\n      <br></br>\n      <form onSubmit={handleFormSubmit}>\n        <Form.Group>\n        {/* <Form.Input\n                width={8}\n                placeholder='User Name'\n                name='userName'\n                value={userName}\n                onChange={this.handleChange}\n                /> */}\n\n\n\n\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"firstName\">Username:</label>\n          <Form.Input\n            placeholder=\"Username\"\n            name=\"username\"\n            type=\"username\"\n            id=\"username\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"email\">Email:</label>\n          <Form.Input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"pwd\">Password:</label>\n          <Form.Input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <br></br>\n        <div className=\"flex-row flex-end\">\n        <button class=\"ui yellow button\">Submit</button>\n        </div>\n        </Form.Group>\n      </form>\n    </div>\n    </section>\n  );\n\n\n    // </Grid.Column>\n    // </Grid>\n\n\n\n\n  // );\n}\n// }\n\n\n\nexport default Signup;\n","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Login.js",["80"],"import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\nimport { Form } from \"semantic-ui-react\";\n\nfunction Login() {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <section style={{height: '100vh'}} id='loginsignuppage'>\n    <div className=\"loginsignupcontainers my-1\">\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <h1 style={{color:'#ebba34'}}>Login</h1>\n      <br></br>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}}htmlFor=\"email\">Email address:</label>\n          <Form.Input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}}htmlFor=\"pwd\">Password:</label>\n          <Form.Input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p style={{color:'#ebba34'}} className=\"error-text\" >The provided credentials are incorrect</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <br></br>\n          <button class=\"ui yellow button\">Submit</button>\n          \n        </div>\n      </form>\n    </div>\n    </section>\n  );\n}\n\n\nexport default Login;","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Home.js",["81"],"import React, { useState } from \"react\";\nimport SearchBreweries from '../components/SearchBreweries/index';\nimport Blip from '../components/Blip';\nimport Hero from '../components/Hero';\nimport ContactUs from '../components/ContactUs';\nimport Footer from '../components/Footer';\n\nconst Home = () => {\n    return (\n      <div className=\"App\">\n        <Hero/>\n        <Blip/>\n        <SearchBreweries/>   \n        <ContactUs/>\n        <Footer/>\n      </div>\n    );\n  };\n  \n  export default Home;","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Header.js",[],"C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Blip.js",[],"C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Footer.js",[],"C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Hero.js",[],"C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\ContactUs.js",["82","83","84","85"],"import React, { Component } from 'react'\nimport { Form, TextArea, Button, Grid } from 'semantic-ui-react'\n\nclass FormCaptureValues extends Component {\n  state = { firstName: '', lastName: '', email: '', message: '', submittedFirstName: '', submittedLastName: '', submittedEmail: '', submittedMessage: '' }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n  handleSubmit = () => {\n    const { firstName, lastName, email, message } = this.state\n\n    this.setState({ \n      submittedFirstName: firstName, firstName: \"\", \n      submittedLastName: lastName, lastName: \"\",\n      submittedEmail: email, email: \"\",\n      submittedMessage: message, message: \"\" })\n  }\n\n  render() {\n    const { firstName, lastName, email, message, submittedFirstName, submittedLastName, submittedEmail, submittedMessage } = this.state\n\n  return (\n    <Grid id='contact-us' centered columns={2}>\n      <Grid.Column>\n        <div class=\"ui segment contactform inverted\" >\n          <h2 style={{textAlign: \"center\", color: '#ebba34'}}>Ask Us Anything</h2>\n          <br></br>\n          <Form onSubmit={this.handleSubmit} >\n            <Form.Group >\n              <Form.Input\n                width={8}\n                placeholder='First name'\n                name='firstName'\n                value={firstName}\n                onChange={this.handleChange}\n                />\n              <Form.Input\n                width={8}\n                placeholder='Last Name'\n                name='lastName'\n                value={lastName}\n                onChange={this.handleChange}\n                />\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                width={16}\n                placeholder='Email'\n                name='email'\n                value={email}\n                onChange={this.handleChange}\n                />\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                width={16}\n                placeholder='Message'\n                control={TextArea}\n                name='message'\n                value={message}\n                onChange={this.handleChange}\n                />\n            </Form.Group>\n\n<div className=\"columns main-col centered\">\n\n            <Form.Group>\n            <Form.Button\n              content='Submit'\n              color='yellow'\n              control={Button}\n              style={{textAlign: \"center\"}}\n              className=''\n               />\n            </Form.Group>   \n            </div>\n          </Form>        \n        </div>\n      </Grid.Column>\n    </Grid>\n    )\n  }\n}\n\nexport default FormCaptureValues","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\auth.js",[],"C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\mutations.js",[],"C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\SearchBreweries\\index.js",["86","87","88","89"],"import React, { useState, useEffect} from 'react';\n// import _ from 'lodash'\nimport {Form, Button, Card, List, Grid, GridColumn, Menu} from 'semantic-ui-react'\nimport {useMutation} from '@apollo/react-hooks'\nimport Auth from '../../utils/auth'\nimport {saveBrewery, searchByCity, searchByState, searchByTerm, searchNearUser, directions } from '../../utils/API'\nimport { saveBreweryIds, getSavedBreweryIds } from '../../utils/localStorage'\nimport {ADD_BREWERY_TO_DB, SAVE_BREWERY_TO_USER} from '../../utils/mutations'\nimport { add } from 'lodash';\nimport { formatPhone } from '../../utils/helpers';\n\nlet pageNum = 1;\n\nconst SearchBreweries = () => {\n//  searchNearUser()\n  const[addBrewery] = useMutation(ADD_BREWERY_TO_DB);\n  const[saveBrewery] = useMutation(SAVE_BREWERY_TO_USER)\n  // create state for holding returned openBrewery api data\n  const [searchedBreweries, setSearchedBrewery] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n  // create state for holding our search field data\n  const [searchType, setSearchType] = useState('');\n  // create state to hold saved BreweryId values\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\n  //holds the last used search input\n  const [lastSearched, setLastSearched] = useState(\"\")\n  \n  \n  // set up useEffect hook to save `savedBreweryIds` list to localStorage on component unmount\n  useEffect(() => {\n    return () => saveBreweryIds(savedBreweryIds);\n  });\n  const options = [\n    { key: 'city', text: 'City', value: 'city' },\n    { key: 'state', text: 'State', value: 'state' },\n    { key: 'keyword', text: 'Keyword', value: 'keyword' },\n  ]\n  // create method to search for Breweries and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(event.type)\n\n    if (!searchInput && !lastSearched) {\n      return false;\n    }\n\n    try {\n      if(searchInput.length){\n        if(searchInput !== lastSearched) {\n          pageNum = 1\n        }\n        setLastSearched(searchInput)\n      }\n\n      let response ;\n\n      switch(searchType){\n        case 'city':\n          if(searchInput){\n            response = await searchByCity(searchInput, pageNum);\n          } else if (lastSearched) {\n            response = await searchByCity(lastSearched, pageNum);\n          } \n          break;\n        case 'state':\n          if(searchInput){\n            response = await searchByState(searchInput, pageNum);\n          } else if (lastSearched) {\n            response = await searchByState(lastSearched, pageNum);\n          }\n          break;\n        case 'keyword':\n          if(searchInput){\n            response = await searchByTerm(searchInput, pageNum);\n          } else if (lastSearched) {\n            response = await searchByTerm(lastSearched, pageNum);\n          }\n          break;\n        default:\n          response = await searchNearUser(pageNum);  \n      }\n\n      if(response.length){\n        const breweryData = response.map((brewery) => ({\n          breweryId: brewery.id,\n          name: brewery.name,\n          breweryType: brewery.brewery_type,\n          street: brewery.street || \"\",\n          address2: brewery.address_2,\n          address3: brewery.address_3,\n          city: brewery.city,\n          state: brewery.state,\n          countyProvince: brewery.county_province,\n          postalCode: brewery.postal_code,\n          country: brewery.country,\n          longitude: brewery.longitude,\n          latitude: brewery.latitude,\n          phone: brewery.phone || \"\",\n          websiteUrl: brewery.website_url || \"\"\n        }));\n  \n        setSearchedBrewery(breweryData);\n      } else {\n        setSearchedBrewery([])\n      }\n      \n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a Brewery to our database\n  const handleSaveBrewery = async (brewery) => {\n    // find the Brewery in `searchedBreweries` state by the matching id\n    // const breweryToSave = searchedBreweries.find((brewery) => brewery.breweryId === breweryId);\n     console.log(brewery)\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBrewery(brewery, token);\n      console.log(response)\n// add brewery using brewery ID\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if Brewery successfully saves to user's account, save Brewery id to state\n      // setSavedBreweryIds([...savedBreweryIds, breweryToSave.breweryId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handlePageChange =  async (e,name) => {\n    if (name === \"next\") {\n      //setPageNumber(pageNumber + 1)\n      pageNum++\n      handleFormSubmit(e)\n      console.log(pageNum)\n    } else {\n      //setPageNumber(pageNumber - 1)\n      pageNum--\n      handleFormSubmit(e)\n    }\n    \n  }\n\n  \n  return (\n    <>\n    <section  id=\"about\">\n      <div className=\"columns main-col drinkbutton\"> \n        </div>\n          <Form onSubmit={handleFormSubmit}>\n            <Grid id='find-brewery' centered columns={2}>\n              <Grid.Column>          \n                <div class=\"ui segment contactform inverted\" >\n                  <h1 style={{textAlign: \"center\", color: '#ebba34'}}>Find Your Brewery</h1>\n                  <br></br>\n                  <Form.Group>\n                    <Form.Input\n                      width={8}\n                      name='searchInput'\n                      value={searchInput}\n                      onChange={(e) => setSearchInput(e.target.value)}\n                      placeholder='Search for a Brewery'\n                    />\n                  <Form.Select\n                    fluid\n                    options={options}\n                    width={8}\n                    // required={true}\n                    placeholder='Search for breweries by...'\n                    onChange={(e, { value }) => setSearchType(value)}\n                    />\n                  </Form.Group>\n                  <br></br>\n                <div className=\"columns main-col drinkbutton\">\n                  <Button \n                    centered\n                    id='city' \n                    type='submit'\n                    // onClick={handleFormSubmit} \n                   \n                    className=\"ui huge yellow button\">\n                    GET DRINKING!!\n                  </Button>\n               </div>\n               <br></br>\n               <div className=\"columns main-col drinkbutton\">\n                  <Button \n                    centered\n                    id='city' \n                    type='submit'\n                    // onClick={handleFormSubmit} \n                    className=\"ui huge yellow button\">\n                    FIND NEAREST BREWERY\n                  </Button>\n\n                </div>\n              </div>\n          </Grid.Column>\n        </Grid>\n      </Form>      \n\n        <h2>\n          {searchedBreweries.length\n            ? `Viewing results ${1 + (20 * (pageNum -1))} - ${searchedBreweries.length + (20 * (pageNum - 1))}:`\n            : ''}\n        </h2>\n        <Grid centered stackable columns={3} >\n          {searchedBreweries.length \n          ? \n          searchedBreweries.map((brewery) => {\n            return (\n              <GridColumn centered=\"true\">  \n              <Card centered key={brewery.breweryId}>\n                <h2 style={{textAlign:'center', color:'#ebba34'}}>{brewery.name}</h2>\n                <List>\n                  <List.Item className='beercard-output'><strong>Type:  </strong> {brewery.breweryType}</List.Item>\n                  {brewery.street ? \n                    <List.Item className='beercard-output'><strong> Street:  </strong>{brewery.street}</List.Item>\n                  :\"\"}\n                  <List.Item className='beercard-output'><strong> City:  </strong>{brewery.city}</List.Item>\n                  <List.Item className='beercard-output'><strong> State:  </strong>{brewery.state}</List.Item>\n                  {brewery.phone ? \n                    <List.Item className='beercard-output'><strong> Phone Number:  </strong> {formatPhone(brewery.phone)}</List.Item>\n                  : \"\"}\n                  {brewery.websiteUrl ? \n                    <List.Item className='beercard-output'><strong> Website:  </strong> <a style={{color:'#2432d1'}} href={brewery.websiteUrl} target='_blank'  rel=\"noreferrer\" >{brewery.websiteUrl}</a></List.Item>\n                  : \"\"}\n               <br></br>\n                </List>\n                  {/* {Auth.loggedIn() && ( */}\n                    \n                  <div className='ui large buttons'>\n                    <Button className ='ui yellow button' style={{color:'#f2f0f0'}}\n                      // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\n                      onClick={() => {handleSaveBrewery(brewery) \n                        console.log(brewery)}}>\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\n                        ? 'This Brewery has already been saved!'\n                        : 'save brewery'}\n                    </Button>\n                    {brewery.latitude && brewery.longitude ? \n                      <>\n                       <div class=\"or\"></div>\n                       <Button className ='ui yellow button'\n                         // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\n                         onClick={() => {directions(brewery.latitude, brewery.longitude) }}>\n                            <p style={{color:'#f2f0f0'}} > get directions</p>\n                       </Button>\n                       </>\n                    :\"\"}\n                   \n                  {/* )} */}\n                  </div>\n                  </Card>\n              \n            </GridColumn>\n            );\n          })\n          : \"\"}\n          {!searchedBreweries.length && pageNum > 1 ?\n          \"No more breweries to display\"\n          :\n          \"\"}\n        </Grid>\n        <Menu inverted >\n          {pageNum > 1 ? \n            <Menu.Item\n              name=\"prev\"\n              onClick={(e, { name }) => handlePageChange(e,name)}\n            >\n              <Button color=\"yellow\">\n                <p>Previous Page</p>\n              </Button>\n            </Menu.Item>\n          : \"\"}\n          {searchedBreweries.length ? \n            <Menu.Menu position=\"right\">\n              <Menu.Item\n                name=\"next\"\n                onClick={(e, { name }) => handlePageChange(e,name)}\n              >\n                <Button color=\"yellow\">\n                  <p>Next Page</p>\n                </Button>\n              </Menu.Item>\n            </Menu.Menu>\n          : \"\"}\n        </Menu>       \n        </section>\n    </>\n  );\n};\n\nexport default SearchBreweries;\n","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\helpers.js",[],"C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\API.js",["90"],"  // route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n    return fetch('/api/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \nexport const createUser = (userData) => {\n    return fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \nexport const loginUser = (userData) => {\n    return fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \n  // save Brewery data for a logged in user\nexport const saveBrewery = (breweryData, token) => {\n    return fetch('/api/users', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(breweryData),\n    });\n  };\n  \n  // remove saved Brewery data for a logged in user\nexport const deleteBrewery = (breweryId, token) => {\n    return fetch(`/api/users/breweries/${breweryId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \nlet userIP = \"\";\nlet userLat = 0;\nlet userLon = 0;\nlet completeDirections = [];\nlet breweriesNearMe =[];\n\n \n  \n \n  // make a search to open brew api\nexport  const searchByCity = (query, page) => {\n    return fetch(`https://api.openbrewerydb.org/breweries?by_city=${query}&page=${page}`)\n        .then(response => response.json())\n        .then(data => {\n          //console.log(data)\n             return data.filter( x => query.toLowerCase() === x.city.toLowerCase())\n        })\n     }; \n\nexport  const searchByState = (query, page) => {\n    return fetch(`https://api.openbrewerydb.org/breweries?by_state=${query}&page=${page}`)\n        .then(response => response.json())\n        .then(data => {\n          // console.log(data)\n\n           return data\n\n      })\n}; \n\nexport  const searchByTerm = (query, page) => {\n  return fetch(`https://api.openbrewerydb.org/breweries/search?query=${query}&page=${page}`)\n      .then(response => response.json())\n      .then(data => {\n        // console.log(data)\n\n         return data\n\n    })\n}; \n\nexport  const searchNearUser = (page) => {\n  fetch(\"https://api.ipify.org/?format=json\").then(function(response) {\n    if(response.ok){\n        response.json().then(function(data){\n           userIP = data.ip \n\n            //uses ip address to get physical location data\n            return fetch(\"https://ipapi.co/\" + userIP + \"/json\")\n        }).then(function(response){\n          console.log(response)\n            if(response.ok){\n\n                response.json().then(function(data){\n                    //save location data for future use\n                    userLat = data.latitude;\n                    userLon = data.longitude;\n                    // console.log(userLat, userLon);\n                    fetch(`https://api.openbrewerydb.org/breweries?by_dist=${userLat},${userLon}&page=${page}`)\n                    .then(response => response.json())\n                    .then(data => {\n                      if(breweriesNearMe.length){\n                        breweriesNearMe= []\n                      }\n                      data.map( x => {\n                        breweriesNearMe.push(x)\n                      })\n                      // console.log(breweriesNearMe)\n                  })\n                  });\n              }\n          });\n      }\n  })\n  console.log(breweriesNearMe)\n  return breweriesNearMe\n}; \n\n \nexport function directions(latitude, longitude) {\n  console.log(latitude, longitude)\n  const lat = parseFloat(latitude);\n  const lon = parseFloat(longitude);\n\n    fetch(\"https://api.ipify.org/?format=json\").then(function(response) {\n        if(response.ok){\n            response.json().then(function(data){\n                userIP = data.ip \n                //uses ip address to get physical location data\n                return fetch(\"https://ipapi.co/\" + userIP + \"/json\")\n            }).then(function(response){\n                if(response.ok){\n                    response.json().then(function(data){\n                        //save location data for future use\n                        userLat = data.latitude;\n                        userLon = data.longitude;\n                        console.log(userLat, userLon);\n                        fetch(\"https://api.tomtom.com/routing/1/calculateRoute/\" + userLat + \"%2C\" + userLon + \"%3A\" + lat + \"%2C\" + lon + \"/json?instructionsType=text&traffic=true&avoid=unpavedRoads&travelMode=car&vehicleCommercial=false&key=2qYjtOeeuEawxxQE7KUtVZQFywO4pRvN\").then(function(response){\n                          console.log(response.ok);\n                                      if(response.ok){\n                                          response.json().then(function(data){\n                                            let instructions=data.routes[0].guidance.instructions;\n                         \n                                  for (let i = 0; i < instructions.length; i++) {\n                    \n                                let stop = instructions[i].message;\n                                completeDirections.push(stop);\n                    \n                      };\n                      console.log(completeDirections);\n                                         });\n                                      }\n                                      else {\n                                        console.log(\"wooooooooow\")\n                                      }\n                                  });\n                    console.log(completeDirections)\n                    });\n                }\n            });\n        }\n    })\n    \n};\n\n// directions using TomTom\n// export function directions(latitude, longitude) {\n//   // console.log(lat, lon);\n\n//             }\n      \n","C:\\Users\\15129\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\localStorage.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"99","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"100","line":6,"column":16,"nodeType":"97","messageId":"98","endLine":6,"endColumn":24},{"ruleId":"95","severity":1,"message":"101","line":6,"column":26,"nodeType":"97","messageId":"98","endLine":6,"endColumn":32},{"ruleId":"95","severity":1,"message":"102","line":6,"column":34,"nodeType":"97","messageId":"98","endLine":6,"endColumn":38},{"ruleId":"95","severity":1,"message":"99","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"103","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"104","line":20,"column":50,"nodeType":"97","messageId":"98","endLine":20,"endColumn":68},{"ruleId":"95","severity":1,"message":"105","line":20,"column":70,"nodeType":"97","messageId":"98","endLine":20,"endColumn":87},{"ruleId":"95","severity":1,"message":"106","line":20,"column":89,"nodeType":"97","messageId":"98","endLine":20,"endColumn":103},{"ruleId":"95","severity":1,"message":"107","line":20,"column":105,"nodeType":"97","messageId":"98","endLine":20,"endColumn":121},{"ruleId":"95","severity":1,"message":"108","line":6,"column":9,"nodeType":"97","messageId":"98","endLine":6,"endColumn":20},{"ruleId":"95","severity":1,"message":"109","line":9,"column":10,"nodeType":"97","messageId":"98","endLine":9,"endColumn":13},{"ruleId":"95","severity":1,"message":"110","line":16,"column":9,"nodeType":"97","messageId":"98","endLine":16,"endColumn":19},{"ruleId":"95","severity":1,"message":"111","line":25,"column":27,"nodeType":"97","messageId":"98","endLine":25,"endColumn":45},{"ruleId":"112","severity":1,"message":"113","line":117,"column":35,"nodeType":"114","messageId":"115","endLine":117,"endColumn":37},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'TextArea' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'useState' is defined but never used.","'submittedFirstName' is assigned a value but never used.","'submittedLastName' is assigned a value but never used.","'submittedEmail' is assigned a value but never used.","'submittedMessage' is assigned a value but never used.","'saveBrewery' is defined but never used.","'add' is defined but never used.","'addBrewery' is assigned a value but never used.","'setSavedBreweryIds' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]