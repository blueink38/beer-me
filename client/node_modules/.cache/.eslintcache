[{"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\index.js":"1","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\App.js":"2","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Home.js":"3","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Header.js":"4","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Login.js":"5","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Signup.js":"6","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\FindBrewery.js":"7","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Footer.js":"8","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Blip.js":"9","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Hero.js":"10","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\ContactUs.js":"11","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\mutations.js":"12","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\auth.js":"13","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\SearchBreweries\\index.js":"14","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\localStorage.js":"15","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\helpers.js":"16","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\API.js":"17"},{"size":214,"mtime":1622651181869,"results":"18","hashOfConfig":"19"},{"size":1153,"mtime":1622651181832,"results":"20","hashOfConfig":"19"},{"size":492,"mtime":1622742867750,"results":"21","hashOfConfig":"19"},{"size":2389,"mtime":1622742867736,"results":"22","hashOfConfig":"19"},{"size":2170,"mtime":1622742867756,"results":"23","hashOfConfig":"19"},{"size":2315,"mtime":1622742867763,"results":"24","hashOfConfig":"19"},{"size":564,"mtime":1622651181843,"results":"25","hashOfConfig":"19"},{"size":1228,"mtime":1622742867728,"results":"26","hashOfConfig":"19"},{"size":547,"mtime":1622651181835,"results":"27","hashOfConfig":"19"},{"size":440,"mtime":1622651181857,"results":"28","hashOfConfig":"19"},{"size":2570,"mtime":1622742867722,"results":"29","hashOfConfig":"19"},{"size":1925,"mtime":1622651181904,"results":"30","hashOfConfig":"19"},{"size":1518,"mtime":1622328292828,"results":"31","hashOfConfig":"19"},{"size":12257,"mtime":1622749589040,"results":"32","hashOfConfig":"19"},{"size":886,"mtime":1622742867776,"results":"33","hashOfConfig":"19"},{"size":147,"mtime":1622678460287,"results":"34","hashOfConfig":"19"},{"size":6023,"mtime":1622747617314,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"dkynqg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\index.js",[],["79","80"],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\App.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Home.js",["81"],"import React, { useState } from \"react\";\nimport SearchBreweries from '../components/SearchBreweries/index';\nimport Blip from '../components/Blip';\nimport Hero from '../components/Hero';\nimport ContactUs from '../components/ContactUs';\nimport Footer from '../components/Footer';\n\nconst Home = () => {\n    return (\n      <div className=\"App\">\n        <Hero/>\n        <Blip/>\n        <SearchBreweries/>   \n        <ContactUs/>\n        <Footer/>\n      </div>\n    );\n  };\n  \n  export default Home;","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Header.js",["82"],"import React, { Component } from 'react'\nimport { Button, Segment, Menu } from 'semantic-ui-react'\nimport { Link } from \"react-router-dom\"\nimport Auth from \"../utils/auth\"\n\n\nexport default class MenuExampleInvertedSecondary extends Component {\n    state = { activeItem: 'home' }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Segment id=\"home\" inverted>\n\n      <Menu id=\"home\" inverted fixed=\"top\" size='huge' >\n        {activeItem === \"login\" || activeItem === \"signup\" ? \n        <Menu.Menu>\n           <Link to=\"/\"><Menu.Item \n              name='home'\n              background='yellow'\n              onClick={this.handleItemClick}\n            /></Link>\n        </Menu.Menu>\n        :\n        <Menu.Menu>\n          <Menu.Item \n              href=\"#home\"\n              name='home'\n              color='yellow'\n              active={activeItem === 'home'}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              href=\"#about\"\n              name='breweries'\n              color='yellow'\n              active={activeItem === 'breweries'}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              href=\"#contact-us\"\n              name='contact us'\n              color='yellow'\n              active={activeItem === 'contact us'}\n              onClick={this.handleItemClick}\n            />\n          </Menu.Menu>\n        }\n        {!Auth.loggedIn() ? \n          <Menu.Menu position='right'>\n            <Menu.Item\n              name=\"login\"\n              active={activeItem === 'login'}\n              onClick={this.handleItemClick}\n            >\n              <Link to=\"/login\">Login</Link>\n            </Menu.Item>\n            <Menu.Item\n              name=\"signup\"\n              active={activeItem === 'signup'}\n              onClick={this.handleItemClick}\n            >\n            <Link to=\"/signup\">Sign Up</Link>\n            </Menu.Item>\n          </Menu.Menu>\n        : \n          <Menu.Menu position='right'>\n            <Menu.Item\n              name=\"logout\"\n              active={activeItem === 'home'}\n              onClick={() => Auth.logout()}\n            >\n              <Link to=\"/\">Logout</Link>\n            </Menu.Item>\n          </Menu.Menu>\n        }\n      </Menu>\n      </Segment>\n\n    )\n  }\n}","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Login.js",["83"],"import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\n\nfunction Login() {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <section style={{height: '100vh'}} id='loginsignuppage'>\n    <div className=\"loginsignupcontainers my-1\">\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <h1 style={{color:'#ebba34'}}>Login</h1>\n      <br></br>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}}htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}}htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p style={{color:'#ebba34'}} className=\"error-text\" >The provided credentials are incorrect</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <br></br>\n          <button class=\"ui yellow button\">Submit</button>\n          \n        </div>\n      </form>\n    </div>\n    </section>\n  );\n}\n\n\nexport default Login;","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\pages\\Signup.js",["84"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        username: formState.username\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <section style={{height: '100vh'}} id='loginsignuppage'>\n    <div className=\"loginsignupcontainers my-1\">\n       <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <h1 style={{color:'#ebba34'}}>Signup</h1>\n      <br></br>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"firstName\">Username:</label>\n          <input\n            placeholder=\"Username\"\n            name=\"username\"\n            type=\"username\"\n            id=\"username\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label style={{color:'#ebba34'}} htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <br></br>\n        <div className=\"flex-row flex-end\">\n        <button class=\"ui yellow button\">Submit</button>\n        </div>\n      </form>\n    </div>\n    </section>\n  );\n\n}\n\nexport default Signup;\n","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\FindBrewery.js",[],["85","86"],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Footer.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Blip.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\Hero.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\ContactUs.js",["87","88","89","90"],"import React, { Component } from 'react'\nimport { Form, TextArea, Button, Grid } from 'semantic-ui-react'\n\nclass FormCaptureValues extends Component {\n  state = { firstName: '', lastName: '', email: '', message: '', submittedFirstName: '', submittedLastName: '', submittedEmail: '', submittedMessage: '' }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n  handleSubmit = () => {\n    const { firstName, lastName, email, message } = this.state\n\n    this.setState({ \n      submittedFirstName: firstName, firstName: \"\", \n      submittedLastName: lastName, lastName: \"\",\n      submittedEmail: email, email: \"\",\n      submittedMessage: message, message: \"\" })\n  }\n\n  render() {\n    const { firstName, lastName, email, message, submittedFirstName, submittedLastName, submittedEmail, submittedMessage } = this.state\n\n  return (\n    <Grid id='contact-us' centered columns={2}>\n      <Grid.Column>\n        <div className=\"ui segment contactform inverted\" >\n          <h2 style={{textAlign: \"center\", color: '#ebba34'}}>Ask Us Anything</h2>\n          <br></br>\n          <Form onSubmit={this.handleSubmit} >\n            <Form.Group >\n              <Form.Input\n                width={8}\n                placeholder='First name'\n                name='firstName'\n                value={firstName}\n                onChange={this.handleChange}\n                />\n              <Form.Input\n                width={8}\n                placeholder='Last Name'\n                name='lastName'\n                value={lastName}\n                onChange={this.handleChange}\n                />\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                width={16}\n                placeholder='Email'\n                name='email'\n                value={email}\n                onChange={this.handleChange}\n                />\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                width={16}\n                placeholder='Message'\n                control={TextArea}\n                name='message'\n                value={message}\n                onChange={this.handleChange}\n                />\n            </Form.Group>\n            <Form.Group>\n            <Form.Button\n              content='Submit'\n              color='yellow'\n              control={Button}\n              style={{textAlign: \"center\"}}\n              className=''\n               />\n            </Form.Group>      \n          </Form>        \n        </div>\n      </Grid.Column>\n    </Grid>\n    )\n  }\n}\n\nexport default FormCaptureValues","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\mutations.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\auth.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\components\\SearchBreweries\\index.js",["91","92","93","94","95"],"import React, { useState, useEffect} from 'react';\n// import _ from 'lodash'\nimport {Form, Button, Card, List, Grid, GridColumn, Menu} from 'semantic-ui-react'\nimport {useMutation} from '@apollo/react-hooks'\nimport Auth from '../../utils/auth'\nimport {saveBrewery, searchByCity, searchByState, searchByTerm, searchNearUser, directions } from '../../utils/API'\nimport { saveBreweryIds, getSavedBreweryIds } from '../../utils/localStorage'\nimport {ADD_BREWERY_TO_DB, SAVE_BREWERY_TO_USER} from '../../utils/mutations'\nimport { add } from 'lodash';\nimport { formatPhone } from '../../utils/helpers';\n\nlet pageNum = 1;\n\nconst SearchBreweries = () => {\n//  searchNearUser()\n  const[addBrewery] = useMutation(ADD_BREWERY_TO_DB);\n  const[saveBrewery] = useMutation(SAVE_BREWERY_TO_USER)\n  // create state for holding returned openBrewery api data\n  const [searchedBreweries, setSearchedBrewery] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n  // create state for holding our search field data\n  const [searchType, setSearchType] = useState('');\n  // create state to hold saved BreweryId values\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\n  //holds the last used search input\n  const [lastSearched, setLastSearched] = useState(\"\")\n  \n  \n  // set up useEffect hook to save `savedBreweryIds` list to localStorage on component unmount\n  useEffect(() => {\n    return () => saveBreweryIds(savedBreweryIds);\n  });\n  const options = [\n    { key: 'city', text: 'City', value: 'city' },\n    { key: 'state', text: 'State', value: 'state' },\n    { key: 'keyword', text: 'Keyword', value: 'keyword' },\n  ]\n\n\n  const handleUserLoc = async (event) => {\n    event.preventDefault();\n    console.log('YES')\n    console.log(pageNum)\n    try {\n      const response = await searchNearUser(pageNum);\n     \n      console.log(response)\n      if(response.length){\n        const breweryData = response.map((brewery) => ({\n          breweryId: brewery.id,\n          name: brewery.name,\n          breweryType: brewery.brewery_type,\n          street: brewery.street || \"\",\n          address2: brewery.address_2,\n          address3: brewery.address_3,\n          city: brewery.city,\n          state: brewery.state,\n          countyProvince: brewery.county_province,\n          postalCode: brewery.postal_code,\n          country: brewery.country,\n          longitude: brewery.longitude,\n          latitude: brewery.latitude,\n          phone: brewery.phone || \"\",\n          websiteUrl: brewery.website_url || \"\"\n        }));\n  \n        setSearchedBrewery(breweryData);\n      } else {\n        setSearchedBrewery([])\n      }\n      \n      setSearchInput('');\n      console.log('YES')\n      }\n      catch (err) {\n        console.error(err);\n      }\n\n  }\n  // create method to search for Breweries and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(event.target.id)\n    console.log(searchType)\n\n    if (!searchInput && !lastSearched) {\n      return false;\n    }\n\n    try {\n      if(searchInput.length){\n        if(searchInput !== lastSearched) {\n          pageNum = 1\n        }\n        setLastSearched(searchInput)\n      }\n\n      let response ;\n          switch(searchType){\n            case 'city':\n              if(searchInput){\n                response = await searchByCity(searchInput, pageNum);\n              } else if (lastSearched) {\n                response = await searchByCity(lastSearched, pageNum);\n              } \n              break;\n            case 'state':\n              if(searchInput){\n                response = await searchByState(searchInput, pageNum);\n              } else if (lastSearched) {\n                response = await searchByState(lastSearched, pageNum);\n              }\n              break;\n            case 'keyword':\n              if(searchInput){\n                response = await searchByTerm(searchInput, pageNum);\n              } else if (lastSearched) {\n                response = await searchByTerm(lastSearched, pageNum);\n              }\n              break;\n        }\n \n     \n      console.log(searchType)\n      console.log(response)\n      if(response.length){\n        const breweryData = response.map((brewery) => ({\n          breweryId: brewery.id,\n          name: brewery.name,\n          breweryType: brewery.brewery_type,\n          street: brewery.street || \"\",\n          address2: brewery.address_2,\n          address3: brewery.address_3,\n          city: brewery.city,\n          state: brewery.state,\n          countyProvince: brewery.county_province,\n          postalCode: brewery.postal_code,\n          country: brewery.country,\n          longitude: brewery.longitude,\n          latitude: brewery.latitude,\n          phone: brewery.phone || \"\",\n          websiteUrl: brewery.website_url || \"\"\n        }));\n  \n        setSearchedBrewery(breweryData);\n      } else {\n        setSearchedBrewery([])\n      }\n      \n      setSearchInput('');\n      console.log('YES')\n      }\n      catch (err) {\n        console.error(err);\n      }\n  } \n\n\n  // create function to handle saving a Brewery to our database\n  const handleSaveBrewery = async (brewery) => {\n    // find the Brewery in `searchedBreweries` state by the matching id\n    // const breweryToSave = searchedBreweries.find((brewery) => brewery.breweryId === breweryId);\n     console.log(brewery)\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBrewery(brewery, token);\n      console.log(response)\n// add brewery using brewery ID\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if Brewery successfully saves to user's account, save Brewery id to state\n      // setSavedBreweryIds([...savedBreweryIds, breweryToSave.breweryId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handlePageChange =  async (e,name) => {\n    if (name === \"next\") {\n      //setPageNumber(pageNumber + 1)\n      pageNum++\n      handleFormSubmit(e)\n      console.log(pageNum)\n    } else {\n      //setPageNumber(pageNumber - 1)\n      pageNum--\n      handleFormSubmit(e)\n    }\n    \n  }\n\n  \n  return (\n    <>\n    <section  id=\"about\">\n      <div className=\"columns main-col drinkbutton\"> \n        </div>\n          <Form onSubmit={handleFormSubmit} id='submit'>\n            <Grid id='find-brewery' centered columns={2}>\n              <Grid.Column>          \n                <div class=\"ui segment contactform inverted\" >\n                  <h1 style={{textAlign: \"center\", color: '#ebba34'}}>Find Your Brewery</h1>\n                  <br></br>\n                  <Form.Group>\n                    <Form.Input\n                      width={8}\n                      name='searchInput'\n                      value={searchInput}\n                      onChange={(e) => setSearchInput(e.target.value)}\n                      placeholder='Search for a Brewery'\n                    />\n                  <Form.Select\n                    fluid\n                    options={options}\n                    width={8}\n                    // required={true}\n                    placeholder='Search for breweries by...'\n                    onChange={(e, { value }) => setSearchType(value)}\n                    />\n                  </Form.Group>\n                  <br></br>\n                <div className=\"columns main-col drinkbutton\">\n                  <Button \n                    // centered\n                    id='city' \n                    type='submit'\n                    // onClick={handleFormSubmit} \n                   \n                    className=\"ui huge yellow button\">\n                    GET DRINKING!!\n                  </Button>\n               </div>\n               <br></br>\n               <div className=\"columns main-col drinkbutton\">\n                  <Button \n                    // centered\n                    id='city' \n                    onClick={(e) => handleUserLoc(e)} \n                    className=\"ui huge yellow button\">\n                    FIND NEAREST BREWERY\n                  </Button>\n\n                </div>\n              </div>\n          </Grid.Column>\n        </Grid>\n      </Form>      \n\n        <h2>\n          {searchedBreweries.length\n            ? `Viewing results ${1 + (20 * (pageNum -1))} - ${searchedBreweries.length + (20 * (pageNum - 1))}:`\n            : ''}\n        </h2>\n        <Grid centered stackable columns={3} >\n          {searchedBreweries.length \n          ? \n          searchedBreweries.map((brewery) => {\n            return (\n              <GridColumn centered=\"true\">  \n              <Card centered key={brewery.breweryId}>\n                <h2 style={{textAlign:'center', color:'#ebba34'}}>{brewery.name}</h2>\n                <List>\n                  <List.Item className='beercard-output'><strong>Type:  </strong> {brewery.breweryType}</List.Item>\n                  {brewery.street ? \n                    <List.Item className='beercard-output'><strong> Street:  </strong>{brewery.street}</List.Item>\n                  :\"\"}\n                  <List.Item className='beercard-output'><strong> City:  </strong>{brewery.city}</List.Item>\n                  <List.Item className='beercard-output'><strong> State:  </strong>{brewery.state}</List.Item>\n                  {brewery.phone ? \n                    <List.Item className='beercard-output'><strong> Phone Number:  </strong> {formatPhone(brewery.phone)}</List.Item>\n                  : \"\"}\n                  {brewery.websiteUrl ? \n                    <List.Item className='beercard-output'><strong> Website:  </strong> <a style={{color:'#2432d1'}} href={brewery.websiteUrl} target='_blank'  rel=\"noreferrer\" >{brewery.websiteUrl}</a></List.Item>\n                  : \"\"}\n               <br></br>\n                </List>\n                  {/* {Auth.loggedIn() && ( */}\n                    \n                  <div className='ui large buttons'>\n                    <Button className ='ui yellow button' style={{color:'#f2f0f0'}}\n                      // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\n                      onClick={() => {handleSaveBrewery(brewery) \n                        console.log(brewery)}}>\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\n                        ? 'This Brewery has already been saved!'\n                        : 'save brewery'}\n                    </Button>\n                    {brewery.latitude && brewery.longitude ? \n                      <>\n                       <div class=\"or\"></div>\n                       <Button className ='ui yellow button'\n                         // disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\n                         onClick={() => {directions(brewery.latitude, brewery.longitude) }}>\n                            <p style={{color:'#f2f0f0'}} > get directions</p>\n                       </Button>\n                       </>\n                    :\"\"}\n                   \n                  {/* )} */}\n                  </div>\n                  </Card>\n              \n            </GridColumn>\n            );\n          })\n          : \"\"}\n          {!searchedBreweries.length && pageNum > 1 ?\n          \"No more breweries to display\"\n          :\n          \"\"}\n        </Grid>\n        <Menu inverted >\n          {pageNum > 1 ? \n            <Menu.Item\n              name=\"prev\"\n              onClick={(e, { name }) => handlePageChange(e,name)}\n            >\n              <Button color=\"yellow\">\n                <p>Previous Page</p>\n              </Button>\n            </Menu.Item>\n          : \"\"}\n          {searchedBreweries.length ? \n            <Menu.Menu position=\"right\">\n              <Menu.Item\n                name=\"next\"\n                onClick={(e, { name }) => handlePageChange(e,name)}\n              >\n                <Button color=\"yellow\">\n                  <p>Next Page</p>\n                </Button>\n              </Menu.Item>\n            </Menu.Menu>\n          : \"\"}\n        </Menu>       \n        </section>\n    </>\n  );\n};\n\nexport default SearchBreweries;\n","C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\helpers.js",[],"C:\\Users\\juann\\OneDrive\\Desktop\\projects\\beer-me\\client\\src\\utils\\API.js",["96"],"  // route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n    return fetch('/api/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \nexport const createUser = (userData) => {\n    return fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \nexport const loginUser = (userData) => {\n    return fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \n  // save Brewery data for a logged in user\nexport const saveBrewery = (breweryData, token) => {\n    return fetch('/api/users', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(breweryData),\n    });\n  };\n  \n  // remove saved Brewery data for a logged in user\nexport const deleteBrewery = (breweryId, token) => {\n    return fetch(`/api/users/breweries/${breweryId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \nlet userIP = \"\";\nlet userLat = 0;\nlet userLon = 0;\nlet completeDirections = [];\nlet breweriesNearMe =[];\n\n \n  \n \n  // make a search to open brew api\nexport  const searchByCity = (query, page) => {\n    return fetch(`https://api.openbrewerydb.org/breweries?by_city=${query}&page=${page}`)\n        .then(response => response.json())\n        .then(data => {\n          //console.log(data)\n             return data.filter( x => query.toLowerCase() === x.city.toLowerCase())\n        })\n     }; \n\nexport  const searchByState = (query, page) => {\n    return fetch(`https://api.openbrewerydb.org/breweries?by_state=${query}&page=${page}`)\n        .then(response => response.json())\n        .then(data => {\n          // console.log(data)\n\n           return data\n\n      })\n}; \n\nexport  const searchByTerm = (query, page) => {\n  return fetch(`https://api.openbrewerydb.org/breweries/search?query=${query}&page=${page}`)\n      .then(response => response.json())\n      .then(data => {\n        // console.log(data)\n\n         return data\n\n    })\n}; \n\nexport  const searchNearUser = (page) => {\n  fetch(\"https://api.ipify.org/?format=json\").then(function(response) {\n    if(response.ok){\n        response.json().then(function(data){\n           userIP = data.ip \n\n            //uses ip address to get physical location data\n            return fetch(\"https://ipapi.co/\" + userIP + \"/json\")\n        }).then(function(response){\n          console.log(response)\n            if(response.ok){\n                response.json().then( function(data){\n                    //save location data for future use\n                    userLat = data.latitude;\n                    userLon = data.longitude;\n                    // console.log(userLat, userLon);\n                    fetch(`https://api.openbrewerydb.org/breweries?by_dist=${userLat},${userLon}&page=${page}`)\n                    .then(response => response.json())\n                    .then(data => {\n                      console.log(data)\n                      if(breweriesNearMe.length){\n                        breweriesNearMe= []\n                      }\n                      data.map( x => {\n                        breweriesNearMe.push(x)\n                      })\n                      // console.log(breweriesNearMe)\n                  })\n                  });\n              }\n          });\n      }\n  })\n  // console.log(breweriesNearMe)\n  return breweriesNearMe\n}; \nsearchNearUser()\n \nexport function directions(latitude, longitude) {\n  console.log(latitude, longitude)\n  const lat = parseFloat(latitude);\n  const lon = parseFloat(longitude);\n\n    fetch(\"https://api.ipify.org/?format=json\").then(function(response) {\n        if(response.ok){\n            response.json().then(function(data){\n                userIP = data.ip \n                //uses ip address to get physical location data\n                return fetch(\"https://ipapi.co/\" + userIP + \"/json\")\n            }).then(function(response){\n                if(response.ok){\n                    response.json().then(function(data){\n                        //save location data for future use\n                        userLat = data.latitude;\n                        userLon = data.longitude;\n                        console.log(userLat, userLon);\n                        fetch(\"https://api.tomtom.com/routing/1/calculateRoute/\" + userLat + \"%2C\" + userLon + \"%3A\" + lat + \"%2C\" + lon + \"/json?instructionsType=text&traffic=true&avoid=unpavedRoads&travelMode=car&vehicleCommercial=false&key=2qYjtOeeuEawxxQE7KUtVZQFywO4pRvN\").then(function(response){\n                          console.log(response.ok);\n                                      if(response.ok){\n                                          response.json().then(function(data){\n                                            let instructions=data.routes[0].guidance.instructions;\n                         \n                                  for (let i = 0; i < instructions.length; i++) {\n                    \n                                let stop = instructions[i].message;\n                                completeDirections.push(stop);\n                    \n                      };\n                      console.log(completeDirections);\n                                         });\n                                      }\n                                      else {\n                                        console.log(\"wooooooooow\")\n                                      }\n                                  });\n                    console.log(completeDirections)\n                    });\n                }\n            });\n        }\n    })\n    \n};\n\n// directions using TomTom\n// export function directions(latitude, longitude) {\n//   // console.log(lat, lon);\n\n//             }\n      \n",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":14},{"ruleId":"101","severity":1,"message":"106","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"97","replacedBy":"107"},{"ruleId":"99","replacedBy":"108"},{"ruleId":"101","severity":1,"message":"109","line":20,"column":50,"nodeType":"103","messageId":"104","endLine":20,"endColumn":68},{"ruleId":"101","severity":1,"message":"110","line":20,"column":70,"nodeType":"103","messageId":"104","endLine":20,"endColumn":87},{"ruleId":"101","severity":1,"message":"111","line":20,"column":89,"nodeType":"103","messageId":"104","endLine":20,"endColumn":103},{"ruleId":"101","severity":1,"message":"112","line":20,"column":105,"nodeType":"103","messageId":"104","endLine":20,"endColumn":121},{"ruleId":"101","severity":1,"message":"113","line":6,"column":9,"nodeType":"103","messageId":"104","endLine":6,"endColumn":20},{"ruleId":"101","severity":1,"message":"114","line":9,"column":10,"nodeType":"103","messageId":"104","endLine":9,"endColumn":13},{"ruleId":"101","severity":1,"message":"115","line":16,"column":9,"nodeType":"103","messageId":"104","endLine":16,"endColumn":19},{"ruleId":"101","severity":1,"message":"116","line":25,"column":27,"nodeType":"103","messageId":"104","endLine":25,"endColumn":45},{"ruleId":"117","severity":1,"message":"118","line":100,"column":11,"nodeType":"119","messageId":"120","endLine":122,"endColumn":10},{"ruleId":"121","severity":1,"message":"122","line":117,"column":35,"nodeType":"123","messageId":"124","endLine":117,"endColumn":37},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Link' is defined but never used.",["125"],["126"],"'submittedFirstName' is assigned a value but never used.","'submittedLastName' is assigned a value but never used.","'submittedEmail' is assigned a value but never used.","'submittedMessage' is assigned a value but never used.","'saveBrewery' is defined but never used.","'add' is defined but never used.","'addBrewery' is assigned a value but never used.","'setSavedBreweryIds' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]